{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/utils/streams/replace_stream.js","dependencies":[{"path":"src/legacy/utils/streams/replace_stream.js","mtime":1585205041407},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmNyZWF0ZVJlcGxhY2VTdHJlYW0gPSBjcmVhdGVSZXBsYWNlU3RyZWFtOwoKdmFyIF9zdHJlYW0gPSByZXF1aXJlKCJzdHJlYW0iKTsKLyoKICogTGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZSBvciBtb3JlIGNvbnRyaWJ1dG9yCiAqIGxpY2Vuc2UgYWdyZWVtZW50cy4gU2VlIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoCiAqIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0CiAqIG93bmVyc2hpcC4gRWxhc3RpY3NlYXJjaCBCLlYuIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXIKICogdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7IHlvdSBtYXkKICogbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiAqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQogKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwogKiB1bmRlciB0aGUgTGljZW5zZS4KICovCgoKZnVuY3Rpb24gY3JlYXRlUmVwbGFjZVN0cmVhbSh0b1JlcGxhY2UsIHJlcGxhY2VtZW50KSB7CiAgaWYgKHR5cGVvZiB0b1JlcGxhY2UgIT09ICdzdHJpbmcnKSB7CiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCd0b1JlcGxhY2UgbXVzdCBiZSBhIHN0cmluZycpOwogIH0KCiAgdmFyIGJ1ZmZlciA9IEJ1ZmZlci5hbGxvYygwKTsKICByZXR1cm4gbmV3IF9zdHJlYW0uVHJhbnNmb3JtKHsKICAgIG9iamVjdE1vZGU6IGZhbHNlLAogICAgdHJhbnNmb3JtOiBmdW5jdGlvbiB0cmFuc2Zvcm0odmFsdWUsIGVuYywgZG9uZSkgewogICAgICB2YXIgaW5kZXg7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gdHJhbnNmb3JtJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICBidWZmZXIgPSBCdWZmZXIuY29uY2F0KFtidWZmZXIsIHZhbHVlXSwgYnVmZmVyLmxlbmd0aCArIHZhbHVlLmxlbmd0aCk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgaWYgKCF0cnVlKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIC8vIHRyeSB0byBmaW5kIHRoZSBuZXh0IGluc3RhbmNlIG9mIGB0b1JlcGxhY2VgIGluIGJ1ZmZlcgogICAgICAgICAgICAgIGluZGV4ID0gYnVmZmVyLmluZGV4T2YodG9SZXBsYWNlKTsgLy8gaWYgdGhlcmUgaXMgbm8gbmV4dCBpbnN0YW5jZSwgYnJlYWsKCiAgICAgICAgICAgICAgaWYgKCEoaW5kZXggPT09IC0xKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoImJyZWFrIiwgMTEpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIC8vIGZsdXNoIGV2ZXJ5dGhpbmcgdG8gdGhlIGxlZnQgb2YgdGhlIG5leHQgaW5zdGFuY2UKICAgICAgICAgICAgICAvLyBvZiBgdG9SZXBsYWNlYAogICAgICAgICAgICAgIHRoaXMucHVzaChidWZmZXIuc2xpY2UoMCwgaW5kZXgpKTsgLy8gdGhlbiBmbHVzaCBhbiBpbnN0YW5jZSBvZiBgcmVwbGFjZW1lbnRgCgogICAgICAgICAgICAgIHRoaXMucHVzaChyZXBsYWNlbWVudCk7IC8vIGFuZCBmaW5hbGx5IHVwZGF0ZSB0aGUgYnVmZmVyIHRvIGluY2x1ZGUgZXZlcnl0aGluZwogICAgICAgICAgICAgIC8vIHRvIHRoZSByaWdodCBvZiBgdG9SZXBsYWNlYCwgZHJvcHBpbmcgdG8gcmVwbGFjZSBmcm9tIHRoZSBidWZmZXIKCiAgICAgICAgICAgICAgYnVmZmVyID0gYnVmZmVyLnNsaWNlKGluZGV4ICsgdG9SZXBsYWNlLmxlbmd0aCk7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIC8vIHVudGlsIG5vdyB3ZSBoYXZlIG9ubHkgZmx1c2hlZCBkYXRhIHRoYXQgaXMgdG8gdGhlIGxlZnQKICAgICAgICAgICAgICAvLyBvZiBhIGRpc2NvdmVyZWQgaW5zdGFuY2Ugb2YgYHRvUmVwbGFjZWAuIElmIGB0b1JlcGxhY2VgIGlzCiAgICAgICAgICAgICAgLy8gbmV2ZXIgZm91bmQgdGhpcyB3b3VsZCBsZWFkIHRvIHVzIGJ1ZmZlcmluZyB0aGUgZW50aXJlIHN0cmVhbS4KICAgICAgICAgICAgICAvLwogICAgICAgICAgICAgIC8vIEluc3RlYWQsIHdlIG9ubHkga2VlcCBlbm91Z2ggYnVmZmVyIHRvIGNvbXBsZXRlIGEgcG90ZW50aWFsbHkKICAgICAgICAgICAgICAvLyBwYXJ0aWFsIGluc3RhbmNlIG9mIGB0b1JlcGxhY2VgCiAgICAgICAgICAgICAgaWYgKGJ1ZmZlci5sZW5ndGggPiB0b1JlcGxhY2UubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAvLyB0aGUgZW50aXJlIGJ1ZmZlciBleGNlcHQgdGhlIGxhc3QgYHRvUmVwbGFjZS5sZW5ndGhgIGJ5dGVzCiAgICAgICAgICAgICAgICAvLyBzbyB0aGF0IGlmIGFsbCBidXQgb25lIGJ5dGUgZnJvbSBgdG9SZXBsYWNlYCBpcyBpbiB0aGUgYnVmZmVyLAogICAgICAgICAgICAgICAgLy8gYW5kIHRoZSBuZXh0IGNodW5rIGRlbGl2ZXJzIHRoZSBuZWNlc3NhcnkgYnl0ZSwgdGhlIGJ1ZmZlciB3aWxsIHRoZW4KICAgICAgICAgICAgICAgIC8vIGNvbnRhaW4gYSBjb21wbGV0ZSBgdG9SZXBsYWNlYCB0b2tlbi4KICAgICAgICAgICAgICAgIHRoaXMucHVzaChidWZmZXIuc2xpY2UoMCwgYnVmZmVyLmxlbmd0aCAtIHRvUmVwbGFjZS5sZW5ndGgpKTsKICAgICAgICAgICAgICAgIGJ1ZmZlciA9IGJ1ZmZlci5zbGljZSgtdG9SZXBsYWNlLmxlbmd0aCk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBkb25lKCk7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE4OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTU7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICBkb25lKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIG51bGwsIHRoaXMsIFtbMCwgMTVdXSk7CiAgICB9LAogICAgZmx1c2g6IGZ1bmN0aW9uIGZsdXNoKGNhbGxiYWNrKSB7CiAgICAgIGlmIChidWZmZXIubGVuZ3RoKSB7CiAgICAgICAgdGhpcy5wdXNoKGJ1ZmZlcik7CiAgICAgIH0KCiAgICAgIGJ1ZmZlciA9IG51bGw7CiAgICAgIGNhbGxiYWNrKCk7CiAgICB9CiAgfSk7Cn0="},null]}