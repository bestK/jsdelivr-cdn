{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/ml/public/application/components/anomalies_table/anomalies_table.js","dependencies":[{"path":"x-pack/legacy/plugins/ml/public/application/components/anomalies_table/anomalies_table.js","mtime":1585205045433},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkFub21hbGllc1RhYmxlID0gdm9pZCAwOwoKdmFyIF9wcm9wVHlwZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInByb3AtdHlwZXMiKSk7Cgp2YXIgX2xvZGFzaCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgibG9kYXNoIikpOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfcmVhY3QyID0gcmVxdWlyZSgiQGtibi9pMThuL3JlYWN0Iik7Cgp2YXIgX2Fub21hbGllc190YWJsZV9jb2x1bW5zID0gcmVxdWlyZSgiLi9hbm9tYWxpZXNfdGFibGVfY29sdW1ucyIpOwoKdmFyIF9hbm9tYWx5X2RldGFpbHMgPSByZXF1aXJlKCIuL2Fub21hbHlfZGV0YWlscyIpOwoKdmFyIF90YWJsZV9zZXJ2aWNlID0gcmVxdWlyZSgiLi4vLi4vc2VydmljZXMvdGFibGVfc2VydmljZSIpOwoKdmFyIF9ydWxlX2VkaXRvciA9IHJlcXVpcmUoIi4uL3J1bGVfZWRpdG9yIik7Cgp2YXIgX21sX2FwaV9zZXJ2aWNlID0gcmVxdWlyZSgiLi4vLi4vc2VydmljZXMvbWxfYXBpX3NlcnZpY2UiKTsKCnZhciBfYW5vbWFsaWVzX3RhYmxlX2NvbnN0YW50cyA9IHJlcXVpcmUoIi4vYW5vbWFsaWVzX3RhYmxlX2NvbnN0YW50cyIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7IGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsgcmV0dXJuIG9iajsgfSBlbHNlIHsgdmFyIG5ld09iaiA9IHt9OyBpZiAob2JqICE9IG51bGwpIHsgZm9yICh2YXIga2V5IGluIG9iaikgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgeyB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7IH0gZWxzZSB7IG5ld09ialtrZXldID0gb2JqW2tleV07IH0gfSB9IH0gbmV3T2JqLmRlZmF1bHQgPSBvYmo7IHJldHVybiBuZXdPYmo7IH0gfQoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH0KCmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09ICJzeW1ib2wiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyAic3ltYm9sIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfQoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gIm9iamVjdCIgfHwgdHlwZW9mIGNhbGwgPT09ICJmdW5jdGlvbiIpKSB7IHJldHVybiBjYWxsOyB9IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9CgpmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pOyB9CgpmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZCIpOyB9IHJldHVybiBzZWxmOyB9CgpmdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSAiZnVuY3Rpb24iICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24iKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9CgpmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTsgfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCnZhciBBbm9tYWxpZXNUYWJsZSA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKF9Db21wb25lbnQpIHsKICBfaW5oZXJpdHMoQW5vbWFsaWVzVGFibGUsIF9Db21wb25lbnQpOwoKICBmdW5jdGlvbiBBbm9tYWxpZXNUYWJsZShwcm9wcykgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBbm9tYWxpZXNUYWJsZSk7CgogICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoQW5vbWFsaWVzVGFibGUpLmNhbGwodGhpcywgcHJvcHMpKTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJpc1Nob3dpbmdBZ2dyZWdhdGVkRGF0YSIsIGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIF90aGlzLnByb3BzLnRhYmxlRGF0YS5pbnRlcnZhbCAhPT0gJ3NlY29uZCc7CiAgICB9KTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJ0b2dnbGVSb3ciLCBmdW5jdGlvbiBfY2FsbGVlKGl0ZW0pIHsKICAgICAgdmFyIHRhYiwKICAgICAgICAgIGl0ZW1JZFRvRXhwYW5kZWRSb3dNYXAsCiAgICAgICAgICBleGFtcGxlcywKICAgICAgICAgIGRlZmluaXRpb24sCiAgICAgICAgICBfYXJncyA9IGFyZ3VtZW50czsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICB0YWIgPSBfYXJncy5sZW5ndGggPiAxICYmIF9hcmdzWzFdICE9PSB1bmRlZmluZWQgPyBfYXJnc1sxXSA6IF9hbm9tYWxpZXNfdGFibGVfY29uc3RhbnRzLkFOT01BTElFU19UQUJMRV9UQUJTLkRFVEFJTFM7CiAgICAgICAgICAgICAgaXRlbUlkVG9FeHBhbmRlZFJvd01hcCA9IF9vYmplY3RTcHJlYWQoe30sIF90aGlzLnN0YXRlLml0ZW1JZFRvRXhwYW5kZWRSb3dNYXApOwoKICAgICAgICAgICAgICBpZiAoIWl0ZW1JZFRvRXhwYW5kZWRSb3dNYXBbaXRlbS5yb3dJZF0pIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBkZWxldGUgaXRlbUlkVG9FeHBhbmRlZFJvd01hcFtpdGVtLnJvd0lkXTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjE7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgZXhhbXBsZXMgPSBpdGVtLmVudGl0eU5hbWUgPT09ICdtbGNhdGVnb3J5JyA/IF9sb2Rhc2guZGVmYXVsdC5nZXQoX3RoaXMucHJvcHMudGFibGVEYXRhLCBbJ2V4YW1wbGVzQnlKb2JJZCcsIGl0ZW0uam9iSWQsIGl0ZW0uZW50aXR5VmFsdWVdKSA6IHVuZGVmaW5lZDsKICAgICAgICAgICAgICBkZWZpbml0aW9uID0gdW5kZWZpbmVkOwoKICAgICAgICAgICAgICBpZiAoIShleGFtcGxlcyAhPT0gdW5kZWZpbmVkKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIwOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gOTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcChfbWxfYXBpX3NlcnZpY2UubWwucmVzdWx0cy5nZXRDYXRlZ29yeURlZmluaXRpb24oaXRlbS5qb2JJZCwgaXRlbS5zb3VyY2UubWxjYXRlZ29yeVswXSkpOwoKICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBkZWZpbml0aW9uID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgaWYgKGRlZmluaXRpb24udGVybXMgJiYgZGVmaW5pdGlvbi50ZXJtcy5sZW5ndGggPiBfYW5vbWFsaWVzX3RhYmxlX2NvbnN0YW50cy5NQVhfQ0hBUlMpIHsKICAgICAgICAgICAgICAgIGRlZmluaXRpb24udGVybXMgPSAiIi5jb25jYXQoZGVmaW5pdGlvbi50ZXJtcy5zdWJzdHJpbmcoMCwgX2Fub21hbGllc190YWJsZV9jb25zdGFudHMuTUFYX0NIQVJTKSwgIi4uLiIpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgaWYgKGRlZmluaXRpb24ucmVnZXggJiYgZGVmaW5pdGlvbi5yZWdleC5sZW5ndGggPiBfYW5vbWFsaWVzX3RhYmxlX2NvbnN0YW50cy5NQVhfQ0hBUlMpIHsKICAgICAgICAgICAgICAgIGRlZmluaXRpb24udGVybXMgPSAiIi5jb25jYXQoZGVmaW5pdGlvbi5yZWdleC5zdWJzdHJpbmcoMCwgX2Fub21hbGllc190YWJsZV9jb25zdGFudHMuTUFYX0NIQVJTKSwgIi4uLiIpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIwOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTc7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSg5KTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygnRXJyb3IgZmV0Y2hpbmcgY2F0ZWdvcnkgZGVmaW5pdGlvbiBmb3Igcm93IGl0ZW0uJywgX2NvbnRleHQudDApOwoKICAgICAgICAgICAgY2FzZSAyMDoKICAgICAgICAgICAgICBpdGVtSWRUb0V4cGFuZGVkUm93TWFwW2l0ZW0ucm93SWRdID0gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfYW5vbWFseV9kZXRhaWxzLkFub21hbHlEZXRhaWxzLCB7CiAgICAgICAgICAgICAgICB0YWJJbmRleDogdGFiLAogICAgICAgICAgICAgICAgYW5vbWFseTogaXRlbSwKICAgICAgICAgICAgICAgIGV4YW1wbGVzOiBleGFtcGxlcywKICAgICAgICAgICAgICAgIGRlZmluaXRpb246IGRlZmluaXRpb24sCiAgICAgICAgICAgICAgICBpc0FnZ3JlZ2F0ZWREYXRhOiBfdGhpcy5pc1Nob3dpbmdBZ2dyZWdhdGVkRGF0YSgpLAogICAgICAgICAgICAgICAgZmlsdGVyOiBfdGhpcy5wcm9wcy5maWx0ZXIsCiAgICAgICAgICAgICAgICBpbmZsdWVuY2VyRmlsdGVyOiBfdGhpcy5wcm9wcy5pbmZsdWVuY2VyRmlsdGVyLAogICAgICAgICAgICAgICAgaW5mbHVlbmNlcnNMaW1pdDogX2Fub21hbGllc190YWJsZV9jb25zdGFudHMuSU5GTFVFTkNFUlNfTElNSVQKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjE6CiAgICAgICAgICAgICAgX3RoaXMuc2V0U3RhdGUoewogICAgICAgICAgICAgICAgaXRlbUlkVG9FeHBhbmRlZFJvd01hcDogaXRlbUlkVG9FeHBhbmRlZFJvd01hcAogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgbnVsbCwgbnVsbCwgW1s5LCAxN11dKTsKICAgIH0pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgIm9uTW91c2VPdmVyUm93IiwgZnVuY3Rpb24gKHJlY29yZCkgewogICAgICBpZiAoX3RoaXMubW91c2VPdmVyUmVjb3JkICE9PSB1bmRlZmluZWQpIHsKICAgICAgICBpZiAoX3RoaXMubW91c2VPdmVyUmVjb3JkLnJvd0lkICE9PSByZWNvcmQucm93SWQpIHsKICAgICAgICAgIC8vIE1vdXNlIGlzIG92ZXIgYSBkaWZmZXJlbnQgcm93LCBmaXJlIG1vdXNlbGVhdmUgb24gdGhlIHByZXZpb3VzIHJlY29yZC4KICAgICAgICAgIF90YWJsZV9zZXJ2aWNlLm1sVGFibGVTZXJ2aWNlLnJvd01vdXNlbGVhdmUkLm5leHQoewogICAgICAgICAgICByZWNvcmQ6IF90aGlzLm1vdXNlT3ZlclJlY29yZAogICAgICAgICAgfSk7IC8vIGZpcmUgbW91c2VlbnRlciBvbiB0aGUgbmV3IHJlY29yZC4KCgogICAgICAgICAgX3RhYmxlX3NlcnZpY2UubWxUYWJsZVNlcnZpY2Uucm93TW91c2VlbnRlciQubmV4dCh7CiAgICAgICAgICAgIHJlY29yZDogcmVjb3JkCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8gTW91c2UgaXMgbm93IG92ZXIgYSByb3csIGZpcmUgbW91c2VlbnRlciBvbiB0aGUgcmVjb3JkLgogICAgICAgIF90YWJsZV9zZXJ2aWNlLm1sVGFibGVTZXJ2aWNlLnJvd01vdXNlZW50ZXIkLm5leHQoewogICAgICAgICAgcmVjb3JkOiByZWNvcmQKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgX3RoaXMubW91c2VPdmVyUmVjb3JkID0gcmVjb3JkOwogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAib25Nb3VzZUxlYXZlUm93IiwgZnVuY3Rpb24gKCkgewogICAgICBpZiAoX3RoaXMubW91c2VPdmVyUmVjb3JkICE9PSB1bmRlZmluZWQpIHsKICAgICAgICBfdGFibGVfc2VydmljZS5tbFRhYmxlU2VydmljZS5yb3dNb3VzZWxlYXZlJC5uZXh0KHsKICAgICAgICAgIHJlY29yZDogX3RoaXMubW91c2VPdmVyUmVjb3JkCiAgICAgICAgfSk7CgogICAgICAgIF90aGlzLm1vdXNlT3ZlclJlY29yZCA9IHVuZGVmaW5lZDsKICAgICAgfQogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAic2V0U2hvd1J1bGVFZGl0b3JGbHlvdXRGdW5jdGlvbiIsIGZ1bmN0aW9uIChmdW5jKSB7CiAgICAgIF90aGlzLnNldFN0YXRlKHsKICAgICAgICBzaG93UnVsZUVkaXRvckZseW91dDogZnVuYwogICAgICB9KTsKICAgIH0pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgInVuc2V0U2hvd1J1bGVFZGl0b3JGbHlvdXRGdW5jdGlvbiIsIGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIHNob3dSdWxlRWRpdG9yRmx5b3V0ID0gZnVuY3Rpb24gc2hvd1J1bGVFZGl0b3JGbHlvdXQoKSB7fTsKCiAgICAgIF90aGlzLnNldFN0YXRlKHsKICAgICAgICBzaG93UnVsZUVkaXRvckZseW91dDogc2hvd1J1bGVFZGl0b3JGbHlvdXQKICAgICAgfSk7CiAgICB9KTsKCiAgICBfdGhpcy5zdGF0ZSA9IHsKICAgICAgaXRlbUlkVG9FeHBhbmRlZFJvd01hcDoge30sCiAgICAgIHNob3dSdWxlRWRpdG9yRmx5b3V0OiBmdW5jdGlvbiBzaG93UnVsZUVkaXRvckZseW91dCgpIHt9CiAgICB9OwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEFub21hbGllc1RhYmxlLCBbewogICAga2V5OiAicmVuZGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcywKICAgICAgICAgIGJvdW5kcyA9IF90aGlzJHByb3BzLmJvdW5kcywKICAgICAgICAgIHRhYmxlRGF0YSA9IF90aGlzJHByb3BzLnRhYmxlRGF0YSwKICAgICAgICAgIGZpbHRlciA9IF90aGlzJHByb3BzLmZpbHRlciwKICAgICAgICAgIGluZmx1ZW5jZXJGaWx0ZXIgPSBfdGhpcyRwcm9wcy5pbmZsdWVuY2VyRmlsdGVyOwoKICAgICAgaWYgKHRhYmxlRGF0YSA9PT0gdW5kZWZpbmVkIHx8IHRhYmxlRGF0YS5hbm9tYWxpZXMgPT09IHVuZGVmaW5lZCB8fCB0YWJsZURhdGEuYW5vbWFsaWVzLmxlbmd0aCA9PT0gMCkgewogICAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEdyb3VwLCB7CiAgICAgICAgICBqdXN0aWZ5Q29udGVudDogInNwYWNlQXJvdW5kIgogICAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgICAgICAgZ3JvdzogZmFsc2UKICAgICAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpVGV4dCwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgiaDQiLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdDIuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICAgICAgaWQ6ICJ4cGFjay5tbC5hbm9tYWxpZXNUYWJsZS5ub01hdGNoaW5nQW5vbWFsaWVzRm91bmRUaXRsZSIsCiAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogIk5vIG1hdGNoaW5nIGFub21hbGllcyBmb3VuZCIKICAgICAgICB9KSkpKSk7CiAgICAgIH0KCiAgICAgIHZhciBjb2x1bW5zID0gKDAsIF9hbm9tYWxpZXNfdGFibGVfY29sdW1ucy5nZXRDb2x1bW5zKSh0YWJsZURhdGEuYW5vbWFsaWVzLCB0YWJsZURhdGEuam9iSWRzLCB0YWJsZURhdGEuZXhhbXBsZXNCeUpvYklkLCB0aGlzLmlzU2hvd2luZ0FnZ3JlZ2F0ZWREYXRhKCksIHRhYmxlRGF0YS5pbnRlcnZhbCwgYm91bmRzLCB0YWJsZURhdGEuc2hvd1ZpZXdTZXJpZXNMaW5rLCB0aGlzLnN0YXRlLnNob3dSdWxlRWRpdG9yRmx5b3V0LCB0aGlzLnN0YXRlLml0ZW1JZFRvRXhwYW5kZWRSb3dNYXAsIHRoaXMudG9nZ2xlUm93LCBmaWx0ZXIsIGluZmx1ZW5jZXJGaWx0ZXIpOwogICAgICB2YXIgc29ydGluZyA9IHsKICAgICAgICBzb3J0OiB7CiAgICAgICAgICBmaWVsZDogJ3NldmVyaXR5JywKICAgICAgICAgIGRpcmVjdGlvbjogJ2Rlc2MnCiAgICAgICAgfQogICAgICB9OwoKICAgICAgdmFyIGdldFJvd1Byb3BzID0gZnVuY3Rpb24gZ2V0Um93UHJvcHMoaXRlbSkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBvbk1vdXNlT3ZlcjogZnVuY3Rpb24gb25Nb3VzZU92ZXIoKSB7CiAgICAgICAgICAgIHJldHVybiBfdGhpczIub25Nb3VzZU92ZXJSb3coaXRlbSk7CiAgICAgICAgICB9LAogICAgICAgICAgb25Nb3VzZUxlYXZlOiBmdW5jdGlvbiBvbk1vdXNlTGVhdmUoKSB7CiAgICAgICAgICAgIHJldHVybiBfdGhpczIub25Nb3VzZUxlYXZlUm93KCk7CiAgICAgICAgICB9LAogICAgICAgICAgJ2RhdGEtdGVzdC1zdWJqJzogIm1sQW5vbWFsaWVzTGlzdFJvdyByb3ctIi5jb25jYXQoaXRlbS5yb3dJZCkKICAgICAgICB9OwogICAgICB9OwoKICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3J1bGVfZWRpdG9yLlJ1bGVFZGl0b3JGbHlvdXQsIHsKICAgICAgICBzZXRTaG93RnVuY3Rpb246IHRoaXMuc2V0U2hvd1J1bGVFZGl0b3JGbHlvdXRGdW5jdGlvbiwKICAgICAgICB1bnNldFNob3dGdW5jdGlvbjogdGhpcy51bnNldFNob3dSdWxlRWRpdG9yRmx5b3V0RnVuY3Rpb24KICAgICAgfSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlJbk1lbW9yeVRhYmxlLCB7CiAgICAgICAgY2xhc3NOYW1lOiAibWwtYW5vbWFsaWVzLXRhYmxlIGV1aS10ZXh0T3ZlcmZsb3dXcmFwIiwKICAgICAgICBpdGVtczogdGFibGVEYXRhLmFub21hbGllcywKICAgICAgICBjb2x1bW5zOiBjb2x1bW5zLAogICAgICAgIHBhZ2luYXRpb246IHsKICAgICAgICAgIHBhZ2VTaXplT3B0aW9uczogWzEwLCAyNSwgMTAwXSwKICAgICAgICAgIGluaXRpYWxQYWdlU2l6ZTogMjUKICAgICAgICB9LAogICAgICAgIHNvcnRpbmc6IHNvcnRpbmcsCiAgICAgICAgaXRlbUlkOiAicm93SWQiLAogICAgICAgIGl0ZW1JZFRvRXhwYW5kZWRSb3dNYXA6IHRoaXMuc3RhdGUuaXRlbUlkVG9FeHBhbmRlZFJvd01hcCwKICAgICAgICBjb21wcmVzc2VkOiB0cnVlLAogICAgICAgIHJvd1Byb3BzOiBnZXRSb3dQcm9wcywKICAgICAgICAiZGF0YS10ZXN0LXN1YmoiOiAibWxBbm9tYWxpZXNUYWJsZSIKICAgICAgfSkpOwogICAgfQogIH1dLCBbewogICAga2V5OiAiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMobmV4dFByb3BzLCBwcmV2U3RhdGUpIHsKICAgICAgLy8gVXBkYXRlIHRoZSBpdGVtSWRUb0V4cGFuZGVkUm93TWFwIHN0YXRlIGlmIGEgY2hhbmdlIHRvIHRoZSB0YWJsZSBkYXRhIGhhcyByZXN1bHRlZAogICAgICAvLyBpbiBhbiBhbm9tYWx5IHRoYXQgd2FzIHByZXZpb3VzbHkgZXhwYW5kZWQgbm8gbG9uZ2VyIGJlaW5nIGluIHRoZSBkYXRhLgogICAgICB2YXIgaXRlbUlkVG9FeHBhbmRlZFJvd01hcCA9IHByZXZTdGF0ZS5pdGVtSWRUb0V4cGFuZGVkUm93TWFwOwogICAgICB2YXIgcHJldkV4cGFuZGVkTm90SW5EYXRhID0gT2JqZWN0LmtleXMoaXRlbUlkVG9FeHBhbmRlZFJvd01hcCkuZmluZChmdW5jdGlvbiAocm93SWQpIHsKICAgICAgICB2YXIgbWF0Y2hpbmcgPSBuZXh0UHJvcHMudGFibGVEYXRhLmFub21hbGllcy5maW5kKGZ1bmN0aW9uIChhbm9tYWx5KSB7CiAgICAgICAgICByZXR1cm4gYW5vbWFseS5yb3dJZCA9PT0gcm93SWQ7CiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIG1hdGNoaW5nID09PSB1bmRlZmluZWQ7CiAgICAgIH0pOwoKICAgICAgaWYgKHByZXZFeHBhbmRlZE5vdEluRGF0YSAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgLy8gQW5vbWFseSBkYXRhIGhhcyBjaGFuZ2VkIGFuZCBhbiBhbm9tYWx5IHRoYXQgd2FzIHByZXZpb3VzbHkgZXhwYW5kZWQgaXMgbm8gbG9uZ2VyIGluIHRoZSBkYXRhLgogICAgICAgIHJldHVybiB7CiAgICAgICAgICBpdGVtSWRUb0V4cGFuZGVkUm93TWFwOiB7fQogICAgICAgIH07CiAgICAgIH0gLy8gUmV0dXJuIG51bGwgdG8gaW5kaWNhdGUgbm8gY2hhbmdlIHRvIHN0YXRlLgoKCiAgICAgIHJldHVybiBudWxsOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEFub21hbGllc1RhYmxlOwp9KF9yZWFjdC5Db21wb25lbnQpOwoKZXhwb3J0cy5Bbm9tYWxpZXNUYWJsZSA9IEFub21hbGllc1RhYmxlOwpBbm9tYWxpZXNUYWJsZS5wcm9wVHlwZXMgPSB7CiAgYm91bmRzOiBfcHJvcFR5cGVzLmRlZmF1bHQub2JqZWN0LmlzUmVxdWlyZWQsCiAgdGFibGVEYXRhOiBfcHJvcFR5cGVzLmRlZmF1bHQub2JqZWN0LAogIGZpbHRlcjogX3Byb3BUeXBlcy5kZWZhdWx0LmZ1bmMsCiAgaW5mbHVlbmNlckZpbHRlcjogX3Byb3BUeXBlcy5kZWZhdWx0LmZ1bmMKfTs="},null]}