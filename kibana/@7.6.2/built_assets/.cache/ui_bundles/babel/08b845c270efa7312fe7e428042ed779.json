{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/transform/public/app/common/request.js","dependencies":[{"path":"x-pack/legacy/plugins/transform/public/app/common/request.js","mtime":1585205048495},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmdldFBpdm90UXVlcnkgPSBnZXRQaXZvdFF1ZXJ5OwpleHBvcnRzLmlzU2ltcGxlUXVlcnkgPSBpc1NpbXBsZVF1ZXJ5OwpleHBvcnRzLmlzRGVmYXVsdFF1ZXJ5ID0gaXNEZWZhdWx0UXVlcnk7CmV4cG9ydHMuZ2V0UHJldmlld1JlcXVlc3RCb2R5ID0gZ2V0UHJldmlld1JlcXVlc3RCb2R5OwpleHBvcnRzLmdldENyZWF0ZVJlcXVlc3RCb2R5ID0gZ2V0Q3JlYXRlUmVxdWVzdEJvZHk7Cgp2YXIgX2NvbW1vbiA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbW1vbi90eXBlcy9jb21tb24iKTsKCnZhciBfY29tbW9uMiA9IHJlcXVpcmUoIi4uL2NvbW1vbiIpOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7CiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOwoKICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgewogICAgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7CiAgICBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7CiAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOwogICAgfSk7CiAgICBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7CiAgfQoKICByZXR1cm4ga2V5czsKfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsKICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgewogICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307CgogICAgaWYgKGkgJSAyKSB7CiAgICAgIG93bktleXMoc291cmNlLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsKICAgICAgfSk7CiAgICB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7CiAgICB9IGVsc2UgewogICAgICBvd25LZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7CiAgICAgIH0pOwogICAgfQogIH0KCiAgcmV0dXJuIHRhcmdldDsKfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgewogIGlmIChrZXkgaW4gb2JqKSB7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsKICAgICAgdmFsdWU6IHZhbHVlLAogICAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgIHdyaXRhYmxlOiB0cnVlCiAgICB9KTsKICB9IGVsc2UgewogICAgb2JqW2tleV0gPSB2YWx1ZTsKICB9CgogIHJldHVybiBvYmo7Cn0KCmZ1bmN0aW9uIGdldFBpdm90UXVlcnkoc2VhcmNoKSB7CiAgaWYgKHR5cGVvZiBzZWFyY2ggPT09ICdzdHJpbmcnKSB7CiAgICByZXR1cm4gewogICAgICBxdWVyeV9zdHJpbmc6IHsKICAgICAgICBxdWVyeTogc2VhcmNoLAogICAgICAgIGRlZmF1bHRfb3BlcmF0b3I6ICdBTkQnCiAgICAgIH0KICAgIH07CiAgfQoKICByZXR1cm4gc2VhcmNoOwp9CgpmdW5jdGlvbiBpc1NpbXBsZVF1ZXJ5KGFyZykgewogIHJldHVybiBhcmcucXVlcnlfc3RyaW5nICE9PSB1bmRlZmluZWQ7Cn0KCmZ1bmN0aW9uIGlzRGVmYXVsdFF1ZXJ5KHF1ZXJ5KSB7CiAgcmV0dXJuIGlzU2ltcGxlUXVlcnkocXVlcnkpICYmIHF1ZXJ5LnF1ZXJ5X3N0cmluZy5xdWVyeSA9PT0gJyonOwp9CgpmdW5jdGlvbiBnZXRQcmV2aWV3UmVxdWVzdEJvZHkoaW5kZXhQYXR0ZXJuVGl0bGUsIHF1ZXJ5LCBncm91cEJ5LCBhZ2dzKSB7CiAgdmFyIGluZGV4ID0gaW5kZXhQYXR0ZXJuVGl0bGUuc3BsaXQoJywnKS5tYXAoZnVuY3Rpb24gKG5hbWUpIHsKICAgIHJldHVybiBuYW1lLnRyaW0oKTsKICB9KTsKICB2YXIgcmVxdWVzdCA9IHsKICAgIHNvdXJjZTogewogICAgICBpbmRleDogaW5kZXgKICAgIH0sCiAgICBwaXZvdDogewogICAgICBncm91cF9ieToge30sCiAgICAgIGFnZ3JlZ2F0aW9uczoge30KICAgIH0KICB9OwoKICBpZiAoIWlzRGVmYXVsdFF1ZXJ5KHF1ZXJ5KSkgewogICAgcmVxdWVzdC5zb3VyY2UucXVlcnkgPSBxdWVyeTsKICB9CgogIGdyb3VwQnkuZm9yRWFjaChmdW5jdGlvbiAoZykgewogICAgaWYgKCgwLCBfY29tbW9uMi5pc0dyb3VwQnlUZXJtcykoZykpIHsKICAgICAgdmFyIHRlcm1zQWdnID0gewogICAgICAgIHRlcm1zOiB7CiAgICAgICAgICBmaWVsZDogZy5maWVsZAogICAgICAgIH0KICAgICAgfTsKICAgICAgcmVxdWVzdC5waXZvdC5ncm91cF9ieVtnLmFnZ05hbWVdID0gdGVybXNBZ2c7CiAgICB9IGVsc2UgaWYgKCgwLCBfY29tbW9uMi5pc0dyb3VwQnlIaXN0b2dyYW0pKGcpKSB7CiAgICAgIHZhciBoaXN0b2dyYW1BZ2cgPSB7CiAgICAgICAgaGlzdG9ncmFtOiB7CiAgICAgICAgICBmaWVsZDogZy5maWVsZCwKICAgICAgICAgIGludGVydmFsOiBnLmludGVydmFsCiAgICAgICAgfQogICAgICB9OwogICAgICByZXF1ZXN0LnBpdm90Lmdyb3VwX2J5W2cuYWdnTmFtZV0gPSBoaXN0b2dyYW1BZ2c7CiAgICB9IGVsc2UgaWYgKCgwLCBfY29tbW9uMi5pc0dyb3VwQnlEYXRlSGlzdG9ncmFtKShnKSkgewogICAgICB2YXIgZGF0ZUhpc3RvZ3JhbUFnZyA9IHsKICAgICAgICBkYXRlX2hpc3RvZ3JhbTogewogICAgICAgICAgZmllbGQ6IGcuZmllbGQsCiAgICAgICAgICBjYWxlbmRhcl9pbnRlcnZhbDogZy5jYWxlbmRhcl9pbnRlcnZhbAogICAgICAgIH0KICAgICAgfTsKICAgICAgcmVxdWVzdC5waXZvdC5ncm91cF9ieVtnLmFnZ05hbWVdID0gZGF0ZUhpc3RvZ3JhbUFnZzsKICAgIH0gZWxzZSB7CiAgICAgIHJlcXVlc3QucGl2b3QuZ3JvdXBfYnlbZy5hZ2dOYW1lXSA9ICgwLCBfY29tbW9uMi5nZXRFc0FnZ0Zyb21Hcm91cEJ5Q29uZmlnKShnKTsKICAgIH0KICB9KTsKICBhZ2dzLmZvckVhY2goZnVuY3Rpb24gKGFnZykgewogICAgcmVxdWVzdC5waXZvdC5hZ2dyZWdhdGlvbnNbYWdnLmFnZ05hbWVdID0gKDAsIF9jb21tb24yLmdldEVzQWdnRnJvbUFnZ0NvbmZpZykoYWdnKTsKICB9KTsKICByZXR1cm4gcmVxdWVzdDsKfQoKZnVuY3Rpb24gZ2V0Q3JlYXRlUmVxdWVzdEJvZHkoaW5kZXhQYXR0ZXJuVGl0bGUsIHBpdm90U3RhdGUsIHRyYW5zZm9ybURldGFpbHNTdGF0ZSkgewogIHZhciByZXF1ZXN0ID0gX29iamVjdFNwcmVhZCh7fSwgZ2V0UHJldmlld1JlcXVlc3RCb2R5KGluZGV4UGF0dGVyblRpdGxlLCBnZXRQaXZvdFF1ZXJ5KHBpdm90U3RhdGUuc2VhcmNoUXVlcnkpLCAoMCwgX2NvbW1vbi5kaWN0aW9uYXJ5VG9BcnJheSkocGl2b3RTdGF0ZS5ncm91cEJ5TGlzdCksICgwLCBfY29tbW9uLmRpY3Rpb25hcnlUb0FycmF5KShwaXZvdFN0YXRlLmFnZ0xpc3QpKSwge30sIHRyYW5zZm9ybURldGFpbHNTdGF0ZS50cmFuc2Zvcm1EZXNjcmlwdGlvbiAhPT0gJycgPyB7CiAgICBkZXNjcmlwdGlvbjogdHJhbnNmb3JtRGV0YWlsc1N0YXRlLnRyYW5zZm9ybURlc2NyaXB0aW9uCiAgfSA6IHt9LCB7CiAgICBkZXN0OiB7CiAgICAgIGluZGV4OiB0cmFuc2Zvcm1EZXRhaWxzU3RhdGUuZGVzdGluYXRpb25JbmRleAogICAgfQogIH0sIHRyYW5zZm9ybURldGFpbHNTdGF0ZS5pc0NvbnRpbnVvdXNNb2RlRW5hYmxlZCA/IHsKICAgIHN5bmM6IHsKICAgICAgdGltZTogewogICAgICAgIGZpZWxkOiB0cmFuc2Zvcm1EZXRhaWxzU3RhdGUuY29udGludW91c01vZGVEYXRlRmllbGQsCiAgICAgICAgZGVsYXk6IHRyYW5zZm9ybURldGFpbHNTdGF0ZS5jb250aW51b3VzTW9kZURlbGF5CiAgICAgIH0KICAgIH0KICB9IDoge30pOwoKICByZXR1cm4gcmVxdWVzdDsKfQ=="},null]}