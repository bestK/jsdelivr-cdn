{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/vis_type_timeseries/public/components/aggs/calculation.js","dependencies":[{"path":"src/legacy/core_plugins/vis_type_timeseries/public/components/aggs/calculation.js","mtime":1585205040343},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkNhbGN1bGF0aW9uQWdnID0gdm9pZCAwOwoKdmFyIF9wcm9wVHlwZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInByb3AtdHlwZXMiKSk7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2xvZGFzaCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgibG9kYXNoIikpOwoKdmFyIF91dWlkID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJ1dWlkIikpOwoKdmFyIF9hZ2dfcm93ID0gcmVxdWlyZSgiLi9hZ2dfcm93Iik7Cgp2YXIgX2FnZ19zZWxlY3QgPSByZXF1aXJlKCIuL2FnZ19zZWxlY3QiKTsKCnZhciBfY3JlYXRlX2NoYW5nZV9oYW5kbGVyID0gcmVxdWlyZSgiLi4vbGliL2NyZWF0ZV9jaGFuZ2VfaGFuZGxlciIpOwoKdmFyIF9jcmVhdGVfc2VsZWN0X2hhbmRsZXIgPSByZXF1aXJlKCIuLi9saWIvY3JlYXRlX3NlbGVjdF9oYW5kbGVyIik7Cgp2YXIgX2NyZWF0ZV90ZXh0X2hhbmRsZXIgPSByZXF1aXJlKCIuLi9saWIvY3JlYXRlX3RleHRfaGFuZGxlciIpOwoKdmFyIF92YXJzID0gcmVxdWlyZSgiLi92YXJzIik7Cgp2YXIgX3JlYWN0MiA9IHJlcXVpcmUoIkBrYm4vaTE4bi9yZWFjdCIpOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgeyBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gZWxzZSB7IHZhciBuZXdPYmogPSB7fTsgaWYgKG9iaiAhPSBudWxsKSB7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307IGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOyB9IGVsc2UgeyBuZXdPYmpba2V5XSA9IG9ialtrZXldOyB9IH0gfSB9IG5ld09iai5kZWZhdWx0ID0gb2JqOyByZXR1cm4gbmV3T2JqOyB9IH0KCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9CgpmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSAic3ltYm9sIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gInN5bWJvbCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mKG9iaik7IH0KCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoc291cmNlLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KCmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7IH0gfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoInZhbHVlIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0KCmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH0KCmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09ICJmdW5jdGlvbiIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH0KCmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9Cgp2YXIgQ2FsY3VsYXRpb25BZ2cgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uIChfQ29tcG9uZW50KSB7CiAgX2luaGVyaXRzKENhbGN1bGF0aW9uQWdnLCBfQ29tcG9uZW50KTsKCiAgZnVuY3Rpb24gQ2FsY3VsYXRpb25BZ2coKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ2FsY3VsYXRpb25BZ2cpOwoKICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoQ2FsY3VsYXRpb25BZ2cpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKENhbGN1bGF0aW9uQWdnLCBbewogICAga2V5OiAiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpIHsKICAgICAgaWYgKCF0aGlzLnByb3BzLm1vZGVsLnZhcmlhYmxlcykgewogICAgICAgIHRoaXMucHJvcHMub25DaGFuZ2UoX2xvZGFzaC5kZWZhdWx0LmFzc2lnbih7fSwgdGhpcy5wcm9wcy5tb2RlbCwgewogICAgICAgICAgdmFyaWFibGVzOiBbewogICAgICAgICAgICBpZDogX3V1aWQuZGVmYXVsdC52MSgpCiAgICAgICAgICB9XQogICAgICAgIH0pKTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogInJlbmRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgICB2YXIgc2libGluZ3MgPSB0aGlzLnByb3BzLnNpYmxpbmdzOwogICAgICB2YXIgZGVmYXVsdHMgPSB7CiAgICAgICAgc2NyaXB0OiAnJwogICAgICB9OwoKICAgICAgdmFyIG1vZGVsID0gX29iamVjdFNwcmVhZCh7fSwgZGVmYXVsdHMsIHt9LCB0aGlzLnByb3BzLm1vZGVsKTsKCiAgICAgIHZhciBoYW5kbGVDaGFuZ2UgPSAoMCwgX2NyZWF0ZV9jaGFuZ2VfaGFuZGxlci5jcmVhdGVDaGFuZ2VIYW5kbGVyKSh0aGlzLnByb3BzLm9uQ2hhbmdlLCBtb2RlbCk7CiAgICAgIHZhciBoYW5kbGVTZWxlY3RDaGFuZ2UgPSAoMCwgX2NyZWF0ZV9zZWxlY3RfaGFuZGxlci5jcmVhdGVTZWxlY3RIYW5kbGVyKShoYW5kbGVDaGFuZ2UpOwogICAgICB2YXIgaGFuZGxlVGV4dENoYW5nZSA9ICgwLCBfY3JlYXRlX3RleHRfaGFuZGxlci5jcmVhdGVUZXh0SGFuZGxlcikoaGFuZGxlQ2hhbmdlKTsKICAgICAgdmFyIGh0bWxJZCA9ICgwLCBfZXVpLmh0bWxJZEdlbmVyYXRvcikoKTsKICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2FnZ19yb3cuQWdnUm93LCB7CiAgICAgICAgZGlzYWJsZURlbGV0ZTogdGhpcy5wcm9wcy5kaXNhYmxlRGVsZXRlLAogICAgICAgIG1vZGVsOiB0aGlzLnByb3BzLm1vZGVsLAogICAgICAgIG9uQWRkOiB0aGlzLnByb3BzLm9uQWRkLAogICAgICAgIG9uRGVsZXRlOiB0aGlzLnByb3BzLm9uRGVsZXRlLAogICAgICAgIHNpYmxpbmdzOiB0aGlzLnByb3BzLnNpYmxpbmdzLAogICAgICAgIGRyYWdIYW5kbGVQcm9wczogdGhpcy5wcm9wcy5kcmFnSGFuZGxlUHJvcHMKICAgICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhHcm91cCwgewogICAgICAgIGRpcmVjdGlvbjogImNvbHVtbiIsCiAgICAgICAgZ3V0dGVyU2l6ZTogImwiCiAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZvcm1MYWJlbCwgewogICAgICAgIGh0bWxGb3I6IGh0bWxJZCgnYWdncmVnYXRpb24nKQogICAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdDIuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICAgIGlkOiAidmlzVHlwZVRpbWVzZXJpZXMuY2FsY3VsYXRpb24uYWdncmVnYXRpb25MYWJlbCIsCiAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJBZ2dyZWdhdGlvbiIKICAgICAgfSkpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpU3BhY2VyLCB7CiAgICAgICAgc2l6ZTogInhzIgogICAgICB9KSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfYWdnX3NlbGVjdC5BZ2dTZWxlY3QsIHsKICAgICAgICBpZDogaHRtbElkKCdhZ2dyZWdhdGlvbicpLAogICAgICAgIHBhbmVsVHlwZTogdGhpcy5wcm9wcy5wYW5lbC50eXBlLAogICAgICAgIHNpYmxpbmdzOiB0aGlzLnByb3BzLnNpYmxpbmdzLAogICAgICAgIHZhbHVlOiBtb2RlbC50eXBlLAogICAgICAgIG9uQ2hhbmdlOiBoYW5kbGVTZWxlY3RDaGFuZ2UoJ3R5cGUnKQogICAgICB9KSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZvcm1MYWJlbCwgewogICAgICAgIGh0bWxGb3I6IGh0bWxJZCgndmFyaWFibGVzJykKICAgICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgICBpZDogInZpc1R5cGVUaW1lc2VyaWVzLmNhbGN1bGF0aW9uLnZhcmlhYmxlc0xhYmVsIiwKICAgICAgICBkZWZhdWx0TWVzc2FnZTogIlZhcmlhYmxlcyIKICAgICAgfSkpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpU3BhY2VyLCB7CiAgICAgICAgc2l6ZTogInhzIgogICAgICB9KSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfdmFycy5DYWxjdWxhdGlvblZhcnMsIHsKICAgICAgICBpZDogaHRtbElkKCd2YXJpYWJsZXMnKSwKICAgICAgICBtZXRyaWNzOiBzaWJsaW5ncywKICAgICAgICBvbkNoYW5nZTogaGFuZGxlQ2hhbmdlLAogICAgICAgIG5hbWU6ICJ2YXJpYWJsZXMiLAogICAgICAgIG1vZGVsOiBtb2RlbAogICAgICB9KSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZvcm1Sb3csIHsKICAgICAgICBpZDogaHRtbElkKCdwYWlubGVzcycpLAogICAgICAgIGxhYmVsOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdDIuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICAgICAgaWQ6ICJ2aXNUeXBlVGltZXNlcmllcy5jYWxjdWxhdGlvbi5wYWlubGVzc1NjcmlwdExhYmVsIiwKICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAiUGFpbmxlc3MgU2NyaXB0IgogICAgICAgIH0pLAogICAgICAgIGZ1bGxXaWR0aDogdHJ1ZSwKICAgICAgICBoZWxwVGV4dDogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgiZGl2IiwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgICAgIGlkOiAidmlzVHlwZVRpbWVzZXJpZXMuY2FsY3VsYXRpb24ucGFpbmxlc3NTY3JpcHREZXNjcmlwdGlvbiIsCiAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogIlZhcmlhYmxlcyBhcmUga2V5cyBvbiB0aGUge3BhcmFtc30gb2JqZWN0LCBpLmUuIHtwYXJhbXNOYW1lfS4gVG8gYWNjZXNzIHRoZSBidWNrZXQgaW50ZXJ2YWwgKGluIG1pbGxpc2Vjb25kcykgdXNlIHtwYXJhbXNJbnRlcnZhbH0uIiwKICAgICAgICAgIHZhbHVlczogewogICAgICAgICAgICBwYXJhbXM6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlDb2RlLCBudWxsLCAicGFyYW1zIiksCiAgICAgICAgICAgIHBhcmFtc05hbWU6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlDb2RlLCBudWxsLCAicGFyYW1zLjxuYW1lPiIpLAogICAgICAgICAgICBwYXJhbXNJbnRlcnZhbDogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUNvZGUsIG51bGwsICJwYXJhbXMuX2ludGVydmFsIikKICAgICAgICAgIH0KICAgICAgICB9KSkKICAgICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVRleHRBcmVhLCB7CiAgICAgICAgb25DaGFuZ2U6IGhhbmRsZVRleHRDaGFuZ2UoJ3NjcmlwdCcpLAogICAgICAgIHZhbHVlOiBtb2RlbC5zY3JpcHQsCiAgICAgICAgZnVsbFdpZHRoOiB0cnVlCiAgICAgIH0pKSkpKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBDYWxjdWxhdGlvbkFnZzsKfShfcmVhY3QuQ29tcG9uZW50KTsKCmV4cG9ydHMuQ2FsY3VsYXRpb25BZ2cgPSBDYWxjdWxhdGlvbkFnZzsKQ2FsY3VsYXRpb25BZ2cucHJvcFR5cGVzID0gewogIGRpc2FibGVEZWxldGU6IF9wcm9wVHlwZXMuZGVmYXVsdC5ib29sLAogIGZpZWxkczogX3Byb3BUeXBlcy5kZWZhdWx0Lm9iamVjdCwKICBtb2RlbDogX3Byb3BUeXBlcy5kZWZhdWx0Lm9iamVjdCwKICBvbkFkZDogX3Byb3BUeXBlcy5kZWZhdWx0LmZ1bmMsCiAgb25DaGFuZ2U6IF9wcm9wVHlwZXMuZGVmYXVsdC5mdW5jLAogIG9uRGVsZXRlOiBfcHJvcFR5cGVzLmRlZmF1bHQuZnVuYywKICBwYW5lbDogX3Byb3BUeXBlcy5kZWZhdWx0Lm9iamVjdCwKICBzZXJpZXM6IF9wcm9wVHlwZXMuZGVmYXVsdC5vYmplY3QsCiAgc2libGluZ3M6IF9wcm9wVHlwZXMuZGVmYXVsdC5hcnJheQp9Ow=="},null]}