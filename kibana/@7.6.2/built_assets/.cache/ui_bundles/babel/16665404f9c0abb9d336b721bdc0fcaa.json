{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/plugins/dev_tools/public/plugin.js","dependencies":[{"path":"src/plugins/dev_tools/public/plugin.js","mtime":1585205041638},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkRldlRvb2xzUGx1Z2luID0gdm9pZCAwOwoKdmFyIF9sb2Rhc2ggPSByZXF1aXJlKCJsb2Rhc2giKTsKCmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHsKICByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpOwp9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7CiAgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UiKTsKfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7CiAgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGl0ZXIpID09PSAiW29iamVjdCBBcmd1bWVudHNdIikgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7Cn0KCmZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHsKICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7CiAgICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykgewogICAgICBhcnIyW2ldID0gYXJyW2ldOwogICAgfQoKICAgIHJldHVybiBhcnIyOwogIH0KfQoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgewogIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7CiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsKICB9Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsKICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOwogICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOwogICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOwogICAgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7CiAgfQp9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7CiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7CiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOwogIHJldHVybiBDb25zdHJ1Y3RvcjsKfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgewogIGlmIChrZXkgaW4gb2JqKSB7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsKICAgICAgdmFsdWU6IHZhbHVlLAogICAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgIHdyaXRhYmxlOiB0cnVlCiAgICB9KTsKICB9IGVsc2UgewogICAgb2JqW2tleV0gPSB2YWx1ZTsKICB9CgogIHJldHVybiBvYmo7Cn0KCnZhciBEZXZUb29sc1BsdWdpbiA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIERldlRvb2xzUGx1Z2luKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIERldlRvb2xzUGx1Z2luKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgImRldlRvb2xzIiwgbmV3IE1hcCgpKTsKICB9CgogIF9jcmVhdGVDbGFzcyhEZXZUb29sc1BsdWdpbiwgW3sKICAgIGtleTogImdldFNvcnRlZERldlRvb2xzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRTb3J0ZWREZXZUb29scygpIHsKICAgICAgcmV0dXJuICgwLCBfbG9kYXNoLnNvcnRCeSkoX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuZGV2VG9vbHMudmFsdWVzKCkpLCAnb3JkZXInKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZXR1cCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0dXAoY29yZSwgX3JlZikgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGtpYmFuYV9sZWdhY3kgPSBfcmVmLmtpYmFuYV9sZWdhY3k7CiAgICAgIGtpYmFuYV9sZWdhY3kucmVnaXN0ZXJMZWdhY3lBcHAoewogICAgICAgIGlkOiAnZGV2X3Rvb2xzJywKICAgICAgICB0aXRsZTogJ0RldiBUb29scycsCiAgICAgICAgbW91bnQ6IGZ1bmN0aW9uIG1vdW50KGFwcE1vdW50Q29udGV4dCwgcGFyYW1zKSB7CiAgICAgICAgICB2YXIgX3JlZjIsIHJlbmRlckFwcDsKCiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIG1vdW50JChfY29udGV4dCkgewogICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgaWYgKF90aGlzLmdldFNvcnRlZERldlRvb2xzKSB7CiAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignbm90IHN0YXJ0ZWQgeWV0Jyk7CgogICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcChpbXBvcnQoJy4vYXBwbGljYXRpb24nKSk7CgogICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgICBfcmVmMiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICAgIHJlbmRlckFwcCA9IF9yZWYyLnJlbmRlckFwcDsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVuZGVyQXBwKHBhcmFtcy5lbGVtZW50LCBhcHBNb3VudENvbnRleHQsIHBhcmFtcy5hcHBCYXNlUGF0aCwgX3RoaXMuZ2V0U29ydGVkRGV2VG9vbHMoKSkpOwoKICAgICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICByZXR1cm4gewogICAgICAgIHJlZ2lzdGVyOiBmdW5jdGlvbiByZWdpc3RlcihkZXZUb29sKSB7CiAgICAgICAgICBpZiAoX3RoaXMuZGV2VG9vbHMuaGFzKGRldlRvb2wuaWQpKSB7CiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigiRGV2IHRvb2wgd2l0aCBpZCBbIi5jb25jYXQoZGV2VG9vbC5pZCwgIl0gaGFzIGFscmVhZHkgYmVlbiByZWdpc3RlcmVkLiBVc2UgYSB1bmlxdWUgaWQuIikpOwogICAgICAgICAgfQoKICAgICAgICAgIF90aGlzLmRldlRvb2xzLnNldChkZXZUb29sLmlkLCBkZXZUb29sKTsKICAgICAgICB9CiAgICAgIH07CiAgICB9CiAgfSwgewogICAga2V5OiAic3RhcnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHN0YXJ0KCkgewogICAgICByZXR1cm4gewogICAgICAgIGdldFNvcnRlZERldlRvb2xzOiB0aGlzLmdldFNvcnRlZERldlRvb2xzLmJpbmQodGhpcykKICAgICAgfTsKICAgIH0KICB9XSk7CgogIHJldHVybiBEZXZUb29sc1BsdWdpbjsKfSgpOwoKZXhwb3J0cy5EZXZUb29sc1BsdWdpbiA9IERldlRvb2xzUGx1Z2luOw=="},null]}