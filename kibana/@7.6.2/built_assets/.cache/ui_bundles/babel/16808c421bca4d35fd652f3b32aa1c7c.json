{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/page/network/network_dns_table/columns.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/page/network/network_dns_table/columns.js","mtime":1585205047603},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmdldE5ldHdvcmtEbnNDb2x1bW5zID0gdm9pZCAwOwoKdmFyIF9udW1lcmFsID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJAZWxhc3RpYy9udW1lcmFsIikpOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX3R5cGVzID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vZ3JhcGhxbC90eXBlcyIpOwoKdmFyIF9kcmFnZ2FibGVfd3JhcHBlciA9IHJlcXVpcmUoIi4uLy4uLy4uL2RyYWdfYW5kX2Ryb3AvZHJhZ2dhYmxlX3dyYXBwZXIiKTsKCnZhciBfaGVscGVycyA9IHJlcXVpcmUoIi4uLy4uLy4uL2RyYWdfYW5kX2Ryb3AvaGVscGVycyIpOwoKdmFyIF9lbXB0eV92YWx1ZSA9IHJlcXVpcmUoIi4uLy4uLy4uL2VtcHR5X3ZhbHVlIik7Cgp2YXIgX2RhdGFfcHJvdmlkZXIgPSByZXF1aXJlKCIuLi8uLi8uLi90aW1lbGluZS9kYXRhX3Byb3ZpZGVycy9kYXRhX3Byb3ZpZGVyIik7Cgp2YXIgX2Zvcm1hdHRlZF9ieXRlcyA9IHJlcXVpcmUoIi4uLy4uLy4uL2Zvcm1hdHRlZF9ieXRlcyIpOwoKdmFyIF9wcm92aWRlciA9IHJlcXVpcmUoIi4uLy4uLy4uL3RpbWVsaW5lL2RhdGFfcHJvdmlkZXJzL3Byb3ZpZGVyIik7Cgp2YXIgaTE4biA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoIi4vdHJhbnNsYXRpb25zIikpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7CiAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgewogICAgcmV0dXJuIG9iajsKICB9IGVsc2UgewogICAgdmFyIG5ld09iaiA9IHt9OwoKICAgIGlmIChvYmogIT0gbnVsbCkgewogICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsKICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OwoKICAgICAgICAgIGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgewogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBuZXdPYmouZGVmYXVsdCA9IG9iajsKICAgIHJldHVybiBuZXdPYmo7CiAgfQp9CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9Ci8qCiAqIENvcHlyaWdodCBFbGFzdGljc2VhcmNoIEIuVi4gYW5kL29yIGxpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUKICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgRWxhc3RpYyBMaWNlbnNlLgogKi8KCgp2YXIgZ2V0TmV0d29ya0Ruc0NvbHVtbnMgPSBmdW5jdGlvbiBnZXROZXR3b3JrRG5zQ29sdW1ucyh0eXBlKSB7CiAgcmV0dXJuIFt7CiAgICBmaWVsZDogIm5vZGUuIi5jb25jYXQoX3R5cGVzLk5ldHdvcmtEbnNGaWVsZHMuZG5zTmFtZSksCiAgICBuYW1lOiBpMThuLlJFR0lTVEVSRURfRE9NQUlOLAogICAgdHJ1bmNhdGVUZXh0OiBmYWxzZSwKICAgIGhpZGVGb3JNb2JpbGU6IGZhbHNlLAogICAgc29ydGFibGU6IHRydWUsCiAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihkbnNOYW1lKSB7CiAgICAgIGlmIChkbnNOYW1lICE9IG51bGwpIHsKICAgICAgICB2YXIgaWQgPSAoMCwgX2hlbHBlcnMuZXNjYXBlRGF0YVByb3ZpZGVySWQpKCJuZXR3b3JrRG5zLXRhYmxlLS1uYW1lLSIuY29uY2F0KGRuc05hbWUpKTsKICAgICAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZHJhZ2dhYmxlX3dyYXBwZXIuRHJhZ2dhYmxlV3JhcHBlciwgewogICAgICAgICAga2V5OiBpZCwKICAgICAgICAgIGRhdGFQcm92aWRlcjogewogICAgICAgICAgICBhbmQ6IFtdLAogICAgICAgICAgICBlbmFibGVkOiB0cnVlLAogICAgICAgICAgICBpZDogaWQsCiAgICAgICAgICAgIG5hbWU6IGRuc05hbWUsCiAgICAgICAgICAgIGV4Y2x1ZGVkOiBmYWxzZSwKICAgICAgICAgICAga3FsUXVlcnk6ICcnLAogICAgICAgICAgICBxdWVyeU1hdGNoOiB7CiAgICAgICAgICAgICAgZmllbGQ6ICdkbnMucXVlc3Rpb24ucmVnaXN0ZXJlZF9kb21haW4nLAogICAgICAgICAgICAgIHZhbHVlOiBkbnNOYW1lLAogICAgICAgICAgICAgIG9wZXJhdG9yOiBfZGF0YV9wcm92aWRlci5JU19PUEVSQVRPUgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoZGF0YVByb3ZpZGVyLCBfLCBzbmFwc2hvdCkgewogICAgICAgICAgICByZXR1cm4gc25hcHNob3QuaXNEcmFnZ2luZyA/IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2RyYWdnYWJsZV93cmFwcGVyLkRyYWdFZmZlY3RzLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9wcm92aWRlci5Qcm92aWRlciwgewogICAgICAgICAgICAgIGRhdGFQcm92aWRlcjogZGF0YVByb3ZpZGVyCiAgICAgICAgICAgIH0pKSA6ICgwLCBfZW1wdHlfdmFsdWUuZGVmYXVsdFRvRW1wdHlUYWcpKGRuc05hbWUpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiAoMCwgX2VtcHR5X3ZhbHVlLmdldEVtcHR5VGFnVmFsdWUpKCk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBhbGlnbjogJ3JpZ2h0JywKICAgIGZpZWxkOiAibm9kZS4iLmNvbmNhdChfdHlwZXMuTmV0d29ya0Ruc0ZpZWxkcy5xdWVyeUNvdW50KSwKICAgIG5hbWU6IGkxOG4uVE9UQUxfUVVFUklFUywKICAgIHNvcnRhYmxlOiB0cnVlLAogICAgdHJ1bmNhdGVUZXh0OiBmYWxzZSwKICAgIGhpZGVGb3JNb2JpbGU6IGZhbHNlLAogICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocXVlcnlDb3VudCkgewogICAgICBpZiAocXVlcnlDb3VudCAhPSBudWxsKSB7CiAgICAgICAgcmV0dXJuICgwLCBfbnVtZXJhbC5kZWZhdWx0KShxdWVyeUNvdW50KS5mb3JtYXQoJzAnKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gKDAsIF9lbXB0eV92YWx1ZS5nZXRFbXB0eVRhZ1ZhbHVlKSgpOwogICAgICB9CiAgICB9CiAgfSwgewogICAgYWxpZ246ICdyaWdodCcsCiAgICBmaWVsZDogIm5vZGUuIi5jb25jYXQoX3R5cGVzLk5ldHdvcmtEbnNGaWVsZHMudW5pcXVlRG9tYWlucyksCiAgICBuYW1lOiBpMThuLlVOSVFVRV9ET01BSU5TLAogICAgc29ydGFibGU6IHRydWUsCiAgICB0cnVuY2F0ZVRleHQ6IGZhbHNlLAogICAgaGlkZUZvck1vYmlsZTogZmFsc2UsCiAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcih1bmlxdWVEb21haW5zKSB7CiAgICAgIGlmICh1bmlxdWVEb21haW5zICE9IG51bGwpIHsKICAgICAgICByZXR1cm4gKDAsIF9udW1lcmFsLmRlZmF1bHQpKHVuaXF1ZURvbWFpbnMpLmZvcm1hdCgnMCcpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiAoMCwgX2VtcHR5X3ZhbHVlLmdldEVtcHR5VGFnVmFsdWUpKCk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBhbGlnbjogJ3JpZ2h0JywKICAgIGZpZWxkOiAibm9kZS4iLmNvbmNhdChfdHlwZXMuTmV0d29ya0Ruc0ZpZWxkcy5kbnNCeXRlc0luKSwKICAgIG5hbWU6IGkxOG4uRE5TX0JZVEVTX0lOLAogICAgc29ydGFibGU6IHRydWUsCiAgICB0cnVuY2F0ZVRleHQ6IGZhbHNlLAogICAgaGlkZUZvck1vYmlsZTogZmFsc2UsCiAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihkbnNCeXRlc0luKSB7CiAgICAgIGlmIChkbnNCeXRlc0luICE9IG51bGwpIHsKICAgICAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZm9ybWF0dGVkX2J5dGVzLlByZWZlcmVuY2VGb3JtYXR0ZWRCeXRlcywgewogICAgICAgICAgdmFsdWU6IGRuc0J5dGVzSW4KICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gKDAsIF9lbXB0eV92YWx1ZS5nZXRFbXB0eVRhZ1ZhbHVlKSgpOwogICAgICB9CiAgICB9CiAgfSwgewogICAgYWxpZ246ICdyaWdodCcsCiAgICBmaWVsZDogIm5vZGUuIi5jb25jYXQoX3R5cGVzLk5ldHdvcmtEbnNGaWVsZHMuZG5zQnl0ZXNPdXQpLAogICAgbmFtZTogaTE4bi5ETlNfQllURVNfT1VULAogICAgc29ydGFibGU6IHRydWUsCiAgICB0cnVuY2F0ZVRleHQ6IGZhbHNlLAogICAgaGlkZUZvck1vYmlsZTogZmFsc2UsCiAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihkbnNCeXRlc091dCkgewogICAgICBpZiAoZG5zQnl0ZXNPdXQgIT0gbnVsbCkgewogICAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9mb3JtYXR0ZWRfYnl0ZXMuUHJlZmVyZW5jZUZvcm1hdHRlZEJ5dGVzLCB7CiAgICAgICAgICB2YWx1ZTogZG5zQnl0ZXNPdXQKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gKDAsIF9lbXB0eV92YWx1ZS5nZXRFbXB0eVRhZ1ZhbHVlKSgpOwogICAgICB9CiAgICB9CiAgfV07Cn07CgpleHBvcnRzLmdldE5ldHdvcmtEbnNDb2x1bW5zID0gZ2V0TmV0d29ya0Ruc0NvbHVtbnM7"},null]}