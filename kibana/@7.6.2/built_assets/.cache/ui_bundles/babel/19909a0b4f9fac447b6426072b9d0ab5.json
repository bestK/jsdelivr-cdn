{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/uptime/public/components/functional/location_map/embeddables/embedded_map.js","dependencies":[{"path":"x-pack/legacy/plugins/uptime/public/components/functional/location_map/embeddables/embedded_map.js","mtime":1585205048727},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkVtYmVkZGVkTWFwID0gdm9pZCAwOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF91dWlkID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJ1dWlkIikpOwoKdmFyIF9zdHlsZWRDb21wb25lbnRzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJzdHlsZWQtY29tcG9uZW50cyIpKTsKCnZhciBfbGVnYWN5ID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xlZ2FjeS9jb3JlX3BsdWdpbnMvZW1iZWRkYWJsZV9hcGkvcHVibGljL25wX3JlYWR5L3B1YmxpYy9sZWdhY3kiKTsKCnZhciBpMThuID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgiLi90cmFuc2xhdGlvbnMiKSk7Cgp2YXIgX2NvbnN0YW50cyA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uLy4uLy4uL21hcHMvY29tbW9uL2NvbnN0YW50cyIpOwoKdmFyIF9tYXBfY29uZmlnID0gcmVxdWlyZSgiLi9tYXBfY29uZmlnIik7Cgp2YXIgX2NvbnRleHRzID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vY29udGV4dHMiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsKfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsKICB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7Cn0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsKICB2YXIgX2FyciA9IFtdOwogIHZhciBfbiA9IHRydWU7CiAgdmFyIF9kID0gZmFsc2U7CiAgdmFyIF9lID0gdW5kZWZpbmVkOwoKICB0cnkgewogICAgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgewogICAgICBfYXJyLnB1c2goX3MudmFsdWUpOwoKICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOwogICAgfQogIH0gY2F0Y2ggKGVycikgewogICAgX2QgPSB0cnVlOwogICAgX2UgPSBlcnI7CiAgfSBmaW5hbGx5IHsKICAgIHRyeSB7CiAgICAgIGlmICghX24gJiYgX2lbInJldHVybiJdICE9IG51bGwpIF9pWyJyZXR1cm4iXSgpOwogICAgfSBmaW5hbGx5IHsKICAgICAgaWYgKF9kKSB0aHJvdyBfZTsKICAgIH0KICB9CgogIHJldHVybiBfYXJyOwp9CgpmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsKfQoKdmFyIEVtYmVkZGVkUGFuZWwgPSBfc3R5bGVkQ29tcG9uZW50cy5kZWZhdWx0LmRpdi53aXRoQ29uZmlnKHsKICBkaXNwbGF5TmFtZTogIkVtYmVkZGVkUGFuZWwiLAogIGNvbXBvbmVudElkOiAic2MtMXZ6bnBwYi0wIgp9KShbInotaW5kZXg6YXV0bztmbGV4OjE7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtoZWlnaHQ6MTAwJTtwb3NpdGlvbjpyZWxhdGl2ZTsuZW1iUGFuZWxfX2NvbnRlbnR7ZGlzcGxheTpmbGV4O2ZsZXg6MSAxIDEwMCU7ei1pbmRleDoxO21pbi1oZWlnaHQ6MDt9JiYmIC5tYXBib3hnbC1jYW52YXN7YW5pbWF0aW9uOm5vbmUgIWltcG9ydGFudDt9Il0pOwoKdmFyIEVtYmVkZGVkTWFwID0gX3JlYWN0LmRlZmF1bHQubWVtbyhmdW5jdGlvbiAoX3JlZikgewogIHZhciB1cFBvaW50cyA9IF9yZWYudXBQb2ludHMsCiAgICAgIGRvd25Qb2ludHMgPSBfcmVmLmRvd25Qb2ludHM7CgogIHZhciBfdXNlQ29udGV4dCA9ICgwLCBfcmVhY3QudXNlQ29udGV4dCkoX2NvbnRleHRzLlVwdGltZVRoZW1lQ29udGV4dCksCiAgICAgIGNvbG9ycyA9IF91c2VDb250ZXh0LmNvbG9yczsKCiAgdmFyIF91c2VTdGF0ZSA9ICgwLCBfcmVhY3QudXNlU3RhdGUpKCksCiAgICAgIF91c2VTdGF0ZTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUsIDIpLAogICAgICBlbWJlZGRhYmxlID0gX3VzZVN0YXRlMlswXSwKICAgICAgc2V0RW1iZWRkYWJsZSA9IF91c2VTdGF0ZTJbMV07CgogIHZhciBlbWJlZGRhYmxlUm9vdCA9ICgwLCBfcmVhY3QudXNlUmVmKShudWxsKTsKCiAgdmFyIGZhY3RvcnkgPSBfbGVnYWN5LnN0YXJ0LmdldEVtYmVkZGFibGVGYWN0b3J5KF9jb25zdGFudHMuTUFQX1NBVkVEX09CSkVDVF9UWVBFKTsKCiAgdmFyIGlucHV0ID0gewogICAgaWQ6IF91dWlkLmRlZmF1bHQudjQoKSwKICAgIGZpbHRlcnM6IFtdLAogICAgaGlkZVBhbmVsVGl0bGVzOiB0cnVlLAogICAgcmVmcmVzaENvbmZpZzogewogICAgICB2YWx1ZTogMCwKICAgICAgcGF1c2U6IGZhbHNlCiAgICB9LAogICAgdmlld01vZGU6ICd2aWV3JywKICAgIGlzTGF5ZXJUT0NPcGVuOiBmYWxzZSwKICAgIGhpZGVGaWx0ZXJBY3Rpb25zOiB0cnVlLAogICAgLy8gWm9vbSBMYXQvTG9uIHZhbHVlcyBhcmUgc2V0IHRvIG1ha2Ugc3VyZSBtYXAgaXMgaW4gY2VudGVyIGluIHRoZSBwYW5lbAogICAgLy8gSXQgd2lsIGFsc28gb21pdCBHcmVlbmxhbmQvQW50YXJjdGljYSBldGMKICAgIG1hcENlbnRlcjogewogICAgICBsb246IDExLAogICAgICBsYXQ6IDIwLAogICAgICB6b29tOiAwCiAgICB9LAogICAgZGlzYWJsZUludGVyYWN0aXZlOiB0cnVlLAogICAgZGlzYWJsZVRvb2x0aXBDb250cm9sOiB0cnVlLAogICAgaGlkZVRvb2xiYXJPdmVybGF5OiB0cnVlLAogICAgaGlkZUxheWVyQ29udHJvbDogdHJ1ZSwKICAgIGhpZGVWaWV3Q29udHJvbDogdHJ1ZQogIH07CiAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKGZ1bmN0aW9uICgpIHsKICAgIGZ1bmN0aW9uIHNldHVwRW1iZWRkYWJsZSgpIHsKICAgICAgdmFyIG1hcFN0YXRlLCBlbWJlZGRhYmxlT2JqZWN0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIHNldHVwRW1iZWRkYWJsZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgbWFwU3RhdGUgPSB7CiAgICAgICAgICAgICAgICBsYXllckxpc3Q6ICgwLCBfbWFwX2NvbmZpZy5nZXRMYXllckxpc3QpKHVwUG9pbnRzLCBkb3duUG9pbnRzLCBjb2xvcnMpLAogICAgICAgICAgICAgICAgdGl0bGU6IGkxOG4uTUFQX1RJVExFCiAgICAgICAgICAgICAgfTsgLy8gQHRzLWlnbm9yZQoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKGZhY3RvcnkuY3JlYXRlRnJvbVN0YXRlKG1hcFN0YXRlLCBpbnB1dCwgdW5kZWZpbmVkKSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgZW1iZWRkYWJsZU9iamVjdCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgc2V0RW1iZWRkYWJsZShlbWJlZGRhYmxlT2JqZWN0KTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICB9CgogICAgc2V0dXBFbWJlZGRhYmxlKCk7IC8vIHdlIHdhbnQgdGhpcyBlZmZlY3QgdG8gZXhlY3V0ZSBleGFjdGx5IG9uY2UgYWZ0ZXIgdGhlIGNvbXBvbmVudCBtb3VudHMKICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHMKICB9LCBbXSk7IC8vIHVwZGF0ZSBtYXAgbGF5ZXJzIGJhc2VkIG9uIHBvaW50cwoKICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoZnVuY3Rpb24gKCkgewogICAgaWYgKGVtYmVkZGFibGUpIHsKICAgICAgZW1iZWRkYWJsZS5zZXRMYXllckxpc3QoKDAsIF9tYXBfY29uZmlnLmdldExheWVyTGlzdCkodXBQb2ludHMsIGRvd25Qb2ludHMsIGNvbG9ycykpOwogICAgfQogIH0sIFt1cFBvaW50cywgZG93blBvaW50cywgZW1iZWRkYWJsZSwgY29sb3JzXSk7IC8vIFdlIGNhbiBvbmx5IHJlbmRlciBhZnRlciBlbWJlZGRhYmxlIGhhcyBhbHJlYWR5IGluaXRpYWxpemVkCgogICgwLCBfcmVhY3QudXNlRWZmZWN0KShmdW5jdGlvbiAoKSB7CiAgICBpZiAoZW1iZWRkYWJsZVJvb3QuY3VycmVudCAmJiBlbWJlZGRhYmxlKSB7CiAgICAgIGVtYmVkZGFibGUucmVuZGVyKGVtYmVkZGFibGVSb290LmN1cnJlbnQpOwogICAgfQogIH0sIFtlbWJlZGRhYmxlLCBlbWJlZGRhYmxlUm9vdF0pOwogIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KEVtYmVkZGVkUGFuZWwsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIGNsYXNzTmFtZTogImVtYlBhbmVsX19jb250ZW50IiwKICAgIHJlZjogZW1iZWRkYWJsZVJvb3QKICB9KSk7Cn0pOwoKZXhwb3J0cy5FbWJlZGRlZE1hcCA9IEVtYmVkZGVkTWFwOwpFbWJlZGRlZE1hcC5kaXNwbGF5TmFtZSA9ICdFbWJlZGRlZE1hcCc7"},null]}