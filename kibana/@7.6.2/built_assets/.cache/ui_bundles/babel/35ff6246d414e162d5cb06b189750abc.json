{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/snapshot_restore/public/app/app.js","dependencies":[{"path":"x-pack/legacy/plugins/snapshot_restore/public/app/app.js","mtime":1585205048199},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkFwcCA9IHZvaWQgMDsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfcmVhY3RSb3V0ZXJEb20gPSByZXF1aXJlKCJyZWFjdC1yb3V0ZXItZG9tIik7Cgp2YXIgX2V1aSA9IHJlcXVpcmUoIkBlbGFzdGljL2V1aSIpOwoKdmFyIF9jb25zdGFudHMgPSByZXF1aXJlKCIuLi8uLi9jb21tb24vY29uc3RhbnRzIik7Cgp2YXIgX2NvbXBvbmVudHMgPSByZXF1aXJlKCIuL2NvbXBvbmVudHMiKTsKCnZhciBfY29uc3RhbnRzMiA9IHJlcXVpcmUoIi4vY29uc3RhbnRzIik7Cgp2YXIgX3NlY3Rpb25zID0gcmVxdWlyZSgiLi9zZWN0aW9ucyIpOwoKdmFyIF9pbmRleCA9IHJlcXVpcmUoIi4vaW5kZXgiKTsKCnZhciBfYXV0aG9yaXphdGlvbiA9IHJlcXVpcmUoIi4vbGliL2F1dGhvcml6YXRpb24iKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQovKgogKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lCiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBMaWNlbnNlZCB1bmRlciB0aGUgRWxhc3RpYyBMaWNlbnNlOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS4KICovCgoKdmFyIEFwcCA9IGZ1bmN0aW9uIEFwcCgpIHsKICB2YXIgX3VzZUFwcERlcGVuZGVuY2llcyA9ICgwLCBfaW5kZXgudXNlQXBwRGVwZW5kZW5jaWVzKSgpLAogICAgICBfdXNlQXBwRGVwZW5kZW5jaWVzJGMgPSBfdXNlQXBwRGVwZW5kZW5jaWVzLmNvcmUsCiAgICAgIEZvcm1hdHRlZE1lc3NhZ2UgPSBfdXNlQXBwRGVwZW5kZW5jaWVzJGMuaTE4bi5Gb3JtYXR0ZWRNZXNzYWdlLAogICAgICBjaHJvbWUgPSBfdXNlQXBwRGVwZW5kZW5jaWVzJGMuY2hyb21lOwoKICB2YXIgX3VzZUNvbnRleHQgPSAoMCwgX3JlYWN0LnVzZUNvbnRleHQpKF9hdXRob3JpemF0aW9uLkF1dGhvcml6YXRpb25Db250ZXh0KSwKICAgICAgYXBpRXJyb3IgPSBfdXNlQ29udGV4dC5hcGlFcnJvcjsKCiAgdmFyIHNsbVVpRW5hYmxlZCA9IGNocm9tZS5nZXRJbmplY3RlZCgnc2xtVWlFbmFibGVkJyk7CiAgdmFyIHNlY3Rpb25zID0gWydyZXBvc2l0b3JpZXMnLCAnc25hcHNob3RzJywgJ3Jlc3RvcmVfc3RhdHVzJ107CgogIGlmIChzbG1VaUVuYWJsZWQpIHsKICAgIHNlY3Rpb25zLnB1c2goJ3BvbGljaWVzJyk7CiAgfQoKICB2YXIgc2VjdGlvbnNSZWdleCA9IHNlY3Rpb25zLmpvaW4oJ3wnKTsKICByZXR1cm4gYXBpRXJyb3IgPyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9jb21wb25lbnRzLlNlY3Rpb25FcnJvciwgewogICAgdGl0bGU6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICBpZDogInhwYWNrLnNuYXBzaG90UmVzdG9yZS5hcHAuY2hlY2tpbmdQcml2aWxlZ2VzRXJyb3JNZXNzYWdlIiwKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJFcnJvciBmZXRjaGluZyB1c2VyIHByaXZpbGVnZXMgZnJvbSB0aGUgc2VydmVyLiIKICAgIH0pLAogICAgZXJyb3I6IGFwaUVycm9yCiAgfSkgOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9hdXRob3JpemF0aW9uLldpdGhQcml2aWxlZ2VzLCB7CiAgICBwcml2aWxlZ2VzOiBfY29uc3RhbnRzLkFQUF9SRVFVSVJFRF9DTFVTVEVSX1BSSVZJTEVHRVMubWFwKGZ1bmN0aW9uIChuYW1lKSB7CiAgICAgIHJldHVybiAiY2x1c3Rlci4iLmNvbmNhdChuYW1lKTsKICAgIH0pCiAgfSwgZnVuY3Rpb24gKF9yZWYpIHsKICAgIHZhciBpc0xvYWRpbmcgPSBfcmVmLmlzTG9hZGluZywKICAgICAgICBoYXNQcml2aWxlZ2VzID0gX3JlZi5oYXNQcml2aWxlZ2VzLAogICAgICAgIHByaXZpbGVnZXNNaXNzaW5nID0gX3JlZi5wcml2aWxlZ2VzTWlzc2luZzsKICAgIHJldHVybiBpc0xvYWRpbmcgPyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9jb21wb25lbnRzLlNlY3Rpb25Mb2FkaW5nLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KEZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgaWQ6ICJ4cGFjay5zbmFwc2hvdFJlc3RvcmUuYXBwLmNoZWNraW5nUHJpdmlsZWdlc0Rlc2NyaXB0aW9uIiwKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJDaGVja2luZyBwcml2aWxlZ2VzXHUyMDI2IgogICAgfSkpIDogaGFzUHJpdmlsZWdlcyA/IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgICAgImRhdGEtdGVzdC1zdWJqIjogInNuYXBzaG90UmVzdG9yZUFwcCIKICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Um91dGVyRG9tLlN3aXRjaCwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3RSb3V0ZXJEb20uUm91dGUsIHsKICAgICAgZXhhY3Q6IHRydWUsCiAgICAgIHBhdGg6ICIiLmNvbmNhdChfY29uc3RhbnRzMi5CQVNFX1BBVEgsICIvYWRkX3JlcG9zaXRvcnkiKSwKICAgICAgY29tcG9uZW50OiBfc2VjdGlvbnMuUmVwb3NpdG9yeUFkZAogICAgfSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Um91dGVyRG9tLlJvdXRlLCB7CiAgICAgIGV4YWN0OiB0cnVlLAogICAgICBwYXRoOiAiIi5jb25jYXQoX2NvbnN0YW50czIuQkFTRV9QQVRILCAiL2VkaXRfcmVwb3NpdG9yeS86bmFtZSoiKSwKICAgICAgY29tcG9uZW50OiBfc2VjdGlvbnMuUmVwb3NpdG9yeUVkaXQKICAgIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdFJvdXRlckRvbS5Sb3V0ZSwgewogICAgICBleGFjdDogdHJ1ZSwKICAgICAgcGF0aDogIiIuY29uY2F0KF9jb25zdGFudHMyLkJBU0VfUEFUSCwgIi86c2VjdGlvbigiKS5jb25jYXQoc2VjdGlvbnNSZWdleCwgIikvOnJlcG9zaXRvcnlOYW1lPy86c25hcHNob3RJZCoiKSwKICAgICAgY29tcG9uZW50OiBfc2VjdGlvbnMuU25hcHNob3RSZXN0b3JlSG9tZQogICAgfSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Um91dGVyRG9tLlJlZGlyZWN0LCB7CiAgICAgIGV4YWN0OiB0cnVlLAogICAgICBmcm9tOiAiIi5jb25jYXQoX2NvbnN0YW50czIuQkFTRV9QQVRILCAiL3Jlc3RvcmUvOnJlcG9zaXRvcnlOYW1lIiksCiAgICAgIHRvOiAiIi5jb25jYXQoX2NvbnN0YW50czIuQkFTRV9QQVRILCAiL3NuYXBzaG90cyIpCiAgICB9KSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3RSb3V0ZXJEb20uUm91dGUsIHsKICAgICAgZXhhY3Q6IHRydWUsCiAgICAgIHBhdGg6ICIiLmNvbmNhdChfY29uc3RhbnRzMi5CQVNFX1BBVEgsICIvcmVzdG9yZS86cmVwb3NpdG9yeU5hbWUvOnNuYXBzaG90SWQqIiksCiAgICAgIGNvbXBvbmVudDogX3NlY3Rpb25zLlJlc3RvcmVTbmFwc2hvdAogICAgfSksIHNsbVVpRW5hYmxlZCAmJiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdFJvdXRlckRvbS5Sb3V0ZSwgewogICAgICBleGFjdDogdHJ1ZSwKICAgICAgcGF0aDogIiIuY29uY2F0KF9jb25zdGFudHMyLkJBU0VfUEFUSCwgIi9hZGRfcG9saWN5IiksCiAgICAgIGNvbXBvbmVudDogX3NlY3Rpb25zLlBvbGljeUFkZAogICAgfSksIHNsbVVpRW5hYmxlZCAmJiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdFJvdXRlckRvbS5Sb3V0ZSwgewogICAgICBleGFjdDogdHJ1ZSwKICAgICAgcGF0aDogIiIuY29uY2F0KF9jb25zdGFudHMyLkJBU0VfUEFUSCwgIi9lZGl0X3BvbGljeS86bmFtZSoiKSwKICAgICAgY29tcG9uZW50OiBfc2VjdGlvbnMuUG9saWN5RWRpdAogICAgfSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Um91dGVyRG9tLlJlZGlyZWN0LCB7CiAgICAgIGZyb206ICIiLmNvbmNhdChfY29uc3RhbnRzMi5CQVNFX1BBVEgpLAogICAgICB0bzogIiIuY29uY2F0KF9jb25zdGFudHMyLkJBU0VfUEFUSCwgIi8iKS5jb25jYXQoX2NvbnN0YW50czIuREVGQVVMVF9TRUNUSU9OKQogICAgfSkpKSA6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlQYWdlQ29udGVudCwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfYXV0aG9yaXphdGlvbi5Ob3RBdXRob3JpemVkU2VjdGlvbiwgewogICAgICB0aXRsZTogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChGb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICAgICAgaWQ6ICJ4cGFjay5zbmFwc2hvdFJlc3RvcmUuYXBwLmRlbmllZFByaXZpbGVnZVRpdGxlIiwKICAgICAgICBkZWZhdWx0TWVzc2FnZTogIllvdSdyZSBtaXNzaW5nIGNsdXN0ZXIgcHJpdmlsZWdlcyIKICAgICAgfSksCiAgICAgIG1lc3NhZ2U6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICAgIGlkOiAieHBhY2suc25hcHNob3RSZXN0b3JlLmFwcC5kZW5pZWRQcml2aWxlZ2VEZXNjcmlwdGlvbiIsCiAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJUbyB1c2UgU25hcHNob3QgYW5kIFJlc3RvcmUsIHlvdSBtdXN0IGhhdmUge3ByaXZpbGVnZXNDb3VudCwgcGx1cmFsLCBvbmUge3RoaXMgY2x1c3RlciBwcml2aWxlZ2V9IG90aGVyIHt0aGVzZSBjbHVzdGVyIHByaXZpbGVnZXN9fToge21pc3NpbmdQcml2aWxlZ2VzfS4iLAogICAgICAgIHZhbHVlczogewogICAgICAgICAgbWlzc2luZ1ByaXZpbGVnZXM6IHByaXZpbGVnZXNNaXNzaW5nLmNsdXN0ZXIuam9pbignLCAnKSwKICAgICAgICAgIHByaXZpbGVnZXNDb3VudDogcHJpdmlsZWdlc01pc3NpbmcuY2x1c3Rlci5sZW5ndGgKICAgICAgICB9CiAgICAgIH0pCiAgICB9KSk7CiAgfSk7Cn07CgpleHBvcnRzLkFwcCA9IEFwcDs="},null]}