{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/transform/public/app/sections/create_transform/components/source_index_preview/use_source_index_data.js","dependencies":[{"path":"x-pack/legacy/plugins/transform/public/app/sections/create_transform/components/source_index_preview/use_source_index_data.js","mtime":1585205048543},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnVzZVNvdXJjZUluZGV4RGF0YSA9IGV4cG9ydHMuU09VUkNFX0lOREVYX1NUQVRVUyA9IHZvaWQgMDsKCnZhciBfcmVhY3QgPSByZXF1aXJlKCJyZWFjdCIpOwoKdmFyIF91c2VfYXBpID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vaG9va3MvdXNlX2FwaSIpOwoKdmFyIF9vYmplY3RfdXRpbHMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi8uLi8uLi9jb21tb24vdXRpbHMvb2JqZWN0X3V0aWxzIik7Cgp2YXIgX2NvbW1vbiA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uL2NvbW1vbiIpOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7CiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOwoKICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgewogICAgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7CiAgICBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7CiAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOwogICAgfSk7CiAgICBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7CiAgfQoKICByZXR1cm4ga2V5czsKfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsKICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgewogICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307CgogICAgaWYgKGkgJSAyKSB7CiAgICAgIG93bktleXMoc291cmNlLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsKICAgICAgfSk7CiAgICB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7CiAgICB9IGVsc2UgewogICAgICBvd25LZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7CiAgICAgIH0pOwogICAgfQogIH0KCiAgcmV0dXJuIHRhcmdldDsKfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgewogIGlmIChrZXkgaW4gb2JqKSB7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsKICAgICAgdmFsdWU6IHZhbHVlLAogICAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgIHdyaXRhYmxlOiB0cnVlCiAgICB9KTsKICB9IGVsc2UgewogICAgb2JqW2tleV0gPSB2YWx1ZTsKICB9CgogIHJldHVybiBvYmo7Cn0KCmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgewogIHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7Cn0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7CiAgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZSIpOwp9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7CiAgdmFyIF9hcnIgPSBbXTsKICB2YXIgX24gPSB0cnVlOwogIHZhciBfZCA9IGZhbHNlOwogIHZhciBfZSA9IHVuZGVmaW5lZDsKCiAgdHJ5IHsKICAgIGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsKICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTsKCiAgICAgIGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsKICAgIH0KICB9IGNhdGNoIChlcnIpIHsKICAgIF9kID0gdHJ1ZTsKICAgIF9lID0gZXJyOwogIH0gZmluYWxseSB7CiAgICB0cnkgewogICAgICBpZiAoIV9uICYmIF9pWyJyZXR1cm4iXSAhPSBudWxsKSBfaVsicmV0dXJuIl0oKTsKICAgIH0gZmluYWxseSB7CiAgICAgIGlmIChfZCkgdGhyb3cgX2U7CiAgICB9CiAgfQoKICByZXR1cm4gX2FycjsKfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgewogIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7Cn0KCnZhciBTRUFSQ0hfU0laRSA9IDEwMDA7CnZhciBTT1VSQ0VfSU5ERVhfU1RBVFVTOwpleHBvcnRzLlNPVVJDRV9JTkRFWF9TVEFUVVMgPSBTT1VSQ0VfSU5ERVhfU1RBVFVTOwoKKGZ1bmN0aW9uIChTT1VSQ0VfSU5ERVhfU1RBVFVTKSB7CiAgU09VUkNFX0lOREVYX1NUQVRVU1tTT1VSQ0VfSU5ERVhfU1RBVFVTWyJVTlVTRUQiXSA9IDBdID0gIlVOVVNFRCI7CiAgU09VUkNFX0lOREVYX1NUQVRVU1tTT1VSQ0VfSU5ERVhfU1RBVFVTWyJMT0FESU5HIl0gPSAxXSA9ICJMT0FESU5HIjsKICBTT1VSQ0VfSU5ERVhfU1RBVFVTW1NPVVJDRV9JTkRFWF9TVEFUVVNbIkxPQURFRCJdID0gMl0gPSAiTE9BREVEIjsKICBTT1VSQ0VfSU5ERVhfU1RBVFVTW1NPVVJDRV9JTkRFWF9TVEFUVVNbIkVSUk9SIl0gPSAzXSA9ICJFUlJPUiI7Cn0pKFNPVVJDRV9JTkRFWF9TVEFUVVMgfHwgKGV4cG9ydHMuU09VUkNFX0lOREVYX1NUQVRVUyA9IFNPVVJDRV9JTkRFWF9TVEFUVVMgPSB7fSkpOwoKdmFyIGlzRXJyb3JSZXNwb25zZSA9IGZ1bmN0aW9uIGlzRXJyb3JSZXNwb25zZShhcmcpIHsKICByZXR1cm4gYXJnLmVycm9yICE9PSB1bmRlZmluZWQ7Cn07Cgp2YXIgdXNlU291cmNlSW5kZXhEYXRhID0gZnVuY3Rpb24gdXNlU291cmNlSW5kZXhEYXRhKGluZGV4UGF0dGVybiwgcXVlcnksIHNlbGVjdGVkRmllbGRzLCBzZXRTZWxlY3RlZEZpZWxkcykgewogIHZhciBfdXNlU3RhdGUgPSAoMCwgX3JlYWN0LnVzZVN0YXRlKSgnJyksCiAgICAgIF91c2VTdGF0ZTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUsIDIpLAogICAgICBlcnJvck1lc3NhZ2UgPSBfdXNlU3RhdGUyWzBdLAogICAgICBzZXRFcnJvck1lc3NhZ2UgPSBfdXNlU3RhdGUyWzFdOwoKICB2YXIgX3VzZVN0YXRlMyA9ICgwLCBfcmVhY3QudXNlU3RhdGUpKFNPVVJDRV9JTkRFWF9TVEFUVVMuVU5VU0VEKSwKICAgICAgX3VzZVN0YXRlNCA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZTMsIDIpLAogICAgICBzdGF0dXMgPSBfdXNlU3RhdGU0WzBdLAogICAgICBzZXRTdGF0dXMgPSBfdXNlU3RhdGU0WzFdOwoKICB2YXIgX3VzZVN0YXRlNSA9ICgwLCBfcmVhY3QudXNlU3RhdGUpKFtdKSwKICAgICAgX3VzZVN0YXRlNiA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZTUsIDIpLAogICAgICB0YWJsZUl0ZW1zID0gX3VzZVN0YXRlNlswXSwKICAgICAgc2V0VGFibGVJdGVtcyA9IF91c2VTdGF0ZTZbMV07CgogIHZhciBhcGkgPSAoMCwgX3VzZV9hcGkudXNlQXBpKSgpOwoKICB2YXIgZ2V0U291cmNlSW5kZXhEYXRhID0gZnVuY3Rpb24gZ2V0U291cmNlSW5kZXhEYXRhKCkgewogICAgdmFyIHJlc3AsIGRvY3MsIG5ld1NlbGVjdGVkRmllbGRzLCBmbGF0dGVuZWRGaWVsZHMsIHRyYW5zZm9ybWVkVGFibGVJdGVtczsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gZ2V0U291cmNlSW5kZXhEYXRhJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgc2V0RXJyb3JNZXNzYWdlKCcnKTsKICAgICAgICAgICAgc2V0U3RhdHVzKFNPVVJDRV9JTkRFWF9TVEFUVVMuTE9BRElORyk7CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcChhcGkuZXNTZWFyY2goewogICAgICAgICAgICAgIGluZGV4OiBpbmRleFBhdHRlcm4udGl0bGUsCiAgICAgICAgICAgICAgc2l6ZTogU0VBUkNIX1NJWkUsCiAgICAgICAgICAgICAgLy8gSW5zdGVhZCBvZiB1c2luZyB0aGUgZGVmYXVsdCBxdWVyeSAoYCpgKSwgZmFsbCBiYWNrIHRvIGEgbW9yZSBlZmZpY2llbnQgYG1hdGNoX2FsbGAgcXVlcnkuCiAgICAgICAgICAgICAgYm9keTogewogICAgICAgICAgICAgICAgcXVlcnk6ICgwLCBfY29tbW9uLmlzRGVmYXVsdFF1ZXJ5KShxdWVyeSkgPyB7CiAgICAgICAgICAgICAgICAgIG1hdGNoX2FsbDoge30KICAgICAgICAgICAgICAgIH0gOiBxdWVyeQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkpOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgcmVzcCA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICBpZiAoIWlzRXJyb3JSZXNwb25zZShyZXNwKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0aHJvdyByZXNwLmVycm9yOwoKICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgZG9jcyA9IHJlc3AuaGl0cy5oaXRzOwoKICAgICAgICAgICAgaWYgKCEoZG9jcy5sZW5ndGggPT09IDApKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEzOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBzZXRUYWJsZUl0ZW1zKFtdKTsKICAgICAgICAgICAgc2V0U3RhdHVzKFNPVVJDRV9JTkRFWF9TVEFUVVMuTE9BREVEKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgaWYgKHNlbGVjdGVkRmllbGRzLmxlbmd0aCA9PT0gMCkgewogICAgICAgICAgICAgIG5ld1NlbGVjdGVkRmllbGRzID0gKDAsIF9jb21tb24uZ2V0RGVmYXVsdFNlbGVjdGFibGVGaWVsZHMpKGRvY3MpOwogICAgICAgICAgICAgIHNldFNlbGVjdGVkRmllbGRzKG5ld1NlbGVjdGVkRmllbGRzKTsKICAgICAgICAgICAgfSAvLyBDcmVhdGUgYSB2ZXJzaW9uIG9mIHRoZSBkb2MncyBzb3VyY2Ugd2l0aCBmbGF0dGVuZWQgZmllbGQgbmFtZXMuCiAgICAgICAgICAgIC8vIFRoaXMgYXZvaWRzIGNvbmZ1c2lvbiBsYXRlciBvbiBpZiBhIGZpZWxkIG5hbWUgaGFzIGRvdHMgaW4gaXRzIG5hbWUKICAgICAgICAgICAgLy8gb3IgaXMgYSBuZXN0ZWQgZmllbGRzIHdoZW4gZGlzcGxheWluZyBpdCB2aWEgRXVpSW5NZW1vcnlUYWJsZS4KCgogICAgICAgICAgICBmbGF0dGVuZWRGaWVsZHMgPSAoMCwgX2NvbW1vbi5nZXRGbGF0dGVuZWRGaWVsZHMpKGRvY3NbMF0uX3NvdXJjZSk7CiAgICAgICAgICAgIHRyYW5zZm9ybWVkVGFibGVJdGVtcyA9IGRvY3MubWFwKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICAgICAgICB2YXIgaXRlbSA9IHt9OwogICAgICAgICAgICAgIGZsYXR0ZW5lZEZpZWxkcy5mb3JFYWNoKGZ1bmN0aW9uIChmZikgewogICAgICAgICAgICAgICAgaXRlbVtmZl0gPSAoMCwgX29iamVjdF91dGlscy5nZXROZXN0ZWRQcm9wZXJ0eSkoZG9jLl9zb3VyY2UsIGZmKTsKCiAgICAgICAgICAgICAgICBpZiAoaXRlbVtmZl0gPT09IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgICAgICAvLyBJZiB0aGUgYXR0cmlidXRlIGlzIHVuZGVmaW5lZCwgaXQgbWVhbnMgaXQgd2FzIG5vdCBhIG5lc3RlZCBwcm9wZXJ0eQogICAgICAgICAgICAgICAgICAvLyBidXQgaGFkIGRvdHMgaW4gaXRzIGFjdHVhbCBuYW1lLiBUaGlzIHNlbGVjdHMgdGhlIHByb3BlcnR5IGJ5IGl0cwogICAgICAgICAgICAgICAgICAvLyBmdWxsIG5hbWUgYW5kIGFzc2lnbnMgaXQgdG8gYGl0ZW1bZmZdYC4KICAgICAgICAgICAgICAgICAgaXRlbVtmZl0gPSBkb2MuX3NvdXJjZVsiXCIiLmNvbmNhdChmZiwgIlwiIildOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBkb2MsIHsKICAgICAgICAgICAgICAgIF9zb3VyY2U6IGl0ZW0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHNldFRhYmxlSXRlbXModHJhbnNmb3JtZWRUYWJsZUl0ZW1zKTsKICAgICAgICAgICAgc2V0U3RhdHVzKFNPVVJDRV9JTkRFWF9TVEFUVVMuTE9BREVEKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI1OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjA7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMik7CgogICAgICAgICAgICBpZiAoX2NvbnRleHQudDAubWVzc2FnZSAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgICAgc2V0RXJyb3JNZXNzYWdlKF9jb250ZXh0LnQwLm1lc3NhZ2UpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHNldEVycm9yTWVzc2FnZShKU09OLnN0cmluZ2lmeShfY29udGV4dC50MCwgbnVsbCwgMikpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBzZXRUYWJsZUl0ZW1zKFtdKTsKICAgICAgICAgICAgc2V0U3RhdHVzKFNPVVJDRV9JTkRFWF9TVEFUVVMuRVJST1IpOwoKICAgICAgICAgIGNhc2UgMjU6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgbnVsbCwgbnVsbCwgW1syLCAyMF1dKTsKICB9OwoKICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoZnVuY3Rpb24gKCkgewogICAgZ2V0U291cmNlSW5kZXhEYXRhKCk7IC8vIGN1c3RvbSBjb21wYXJpc29uCiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzCiAgfSwgW2luZGV4UGF0dGVybi50aXRsZSwgSlNPTi5zdHJpbmdpZnkocXVlcnkpXSk7CiAgcmV0dXJuIHsKICAgIGVycm9yTWVzc2FnZTogZXJyb3JNZXNzYWdlLAogICAgc3RhdHVzOiBzdGF0dXMsCiAgICB0YWJsZUl0ZW1zOiB0YWJsZUl0ZW1zCiAgfTsKfTsKCmV4cG9ydHMudXNlU291cmNlSW5kZXhEYXRhID0gdXNlU291cmNlSW5kZXhEYXRhOw=="},null]}