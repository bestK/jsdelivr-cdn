{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/infra/public/components/waffle/waffle_inventory_switcher.js","dependencies":[{"path":"x-pack/legacy/plugins/infra/public/components/waffle/waffle_inventory_switcher.js","mtime":1585205044657},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLldhZmZsZUludmVudG9yeVN3aXRjaGVyID0gdm9pZCAwOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfcmVhY3QyID0gcmVxdWlyZSgiQGtibi9pMThuL3JlYWN0Iik7Cgp2YXIgX2ludmVudG9yeV9tb2RlbHMgPSByZXF1aXJlKCIuLi8uLi8uLi9jb21tb24vaW52ZW50b3J5X21vZGVscyIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7CiAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgewogICAgcmV0dXJuIG9iajsKICB9IGVsc2UgewogICAgdmFyIG5ld09iaiA9IHt9OwoKICAgIGlmIChvYmogIT0gbnVsbCkgewogICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsKICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OwoKICAgICAgICAgIGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgewogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBuZXdPYmouZGVmYXVsdCA9IG9iajsKICAgIHJldHVybiBuZXdPYmo7CiAgfQp9CgpmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsKICByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOwp9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgewogIHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UiKTsKfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgewogIHZhciBfYXJyID0gW107CiAgdmFyIF9uID0gdHJ1ZTsKICB2YXIgX2QgPSBmYWxzZTsKICB2YXIgX2UgPSB1bmRlZmluZWQ7CgogIHRyeSB7CiAgICBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7CiAgICAgIF9hcnIucHVzaChfcy52YWx1ZSk7CgogICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7CiAgICB9CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBfZCA9IHRydWU7CiAgICBfZSA9IGVycjsKICB9IGZpbmFsbHkgewogICAgdHJ5IHsKICAgICAgaWYgKCFfbiAmJiBfaVsicmV0dXJuIl0gIT0gbnVsbCkgX2lbInJldHVybiJdKCk7CiAgICB9IGZpbmFsbHkgewogICAgICBpZiAoX2QpIHRocm93IF9lOwogICAgfQogIH0KCiAgcmV0dXJuIF9hcnI7Cn0KCmZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsKICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOwp9Cgp2YXIgZ2V0RGlzcGxheU5hbWVGb3JUeXBlID0gZnVuY3Rpb24gZ2V0RGlzcGxheU5hbWVGb3JUeXBlKHR5cGUpIHsKICB2YXIgaW52ZW50b3J5TW9kZWwgPSAoMCwgX2ludmVudG9yeV9tb2RlbHMuZmluZEludmVudG9yeU1vZGVsKSh0eXBlKTsKICByZXR1cm4gaW52ZW50b3J5TW9kZWwuZGlzcGxheU5hbWU7Cn07Cgp2YXIgV2FmZmxlSW52ZW50b3J5U3dpdGNoZXIgPSBmdW5jdGlvbiBXYWZmbGVJbnZlbnRvcnlTd2l0Y2hlcihfcmVmKSB7CiAgdmFyIGNoYW5nZU5vZGVUeXBlID0gX3JlZi5jaGFuZ2VOb2RlVHlwZSwKICAgICAgY2hhbmdlR3JvdXBCeSA9IF9yZWYuY2hhbmdlR3JvdXBCeSwKICAgICAgY2hhbmdlTWV0cmljID0gX3JlZi5jaGFuZ2VNZXRyaWMsCiAgICAgIGNoYW5nZUFjY291bnQgPSBfcmVmLmNoYW5nZUFjY291bnQsCiAgICAgIGNoYW5nZVJlZ2lvbiA9IF9yZWYuY2hhbmdlUmVnaW9uLAogICAgICBub2RlVHlwZSA9IF9yZWYubm9kZVR5cGU7CgogIHZhciBfdXNlU3RhdGUgPSAoMCwgX3JlYWN0LnVzZVN0YXRlKShmYWxzZSksCiAgICAgIF91c2VTdGF0ZTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUsIDIpLAogICAgICBpc09wZW4gPSBfdXNlU3RhdGUyWzBdLAogICAgICBzZXRJc09wZW4gPSBfdXNlU3RhdGUyWzFdOwoKICB2YXIgY2xvc2VQb3BvdmVyID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHNldElzT3BlbihmYWxzZSk7CiAgfSwgW10pOwogIHZhciBvcGVuUG9wb3ZlciA9ICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBzZXRJc09wZW4odHJ1ZSk7CiAgfSwgW10pOwogIHZhciBnb1RvTm9kZVR5cGUgPSAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKShmdW5jdGlvbiAodGFyZ2V0Tm9kZVR5cGUpIHsKICAgIGNsb3NlUG9wb3ZlcigpOwogICAgY2hhbmdlTm9kZVR5cGUodGFyZ2V0Tm9kZVR5cGUpOwogICAgY2hhbmdlR3JvdXBCeShbXSk7CiAgICBjaGFuZ2VBY2NvdW50KCcnKTsKICAgIGNoYW5nZVJlZ2lvbignJyk7CiAgICB2YXIgaW52ZW50b3J5TW9kZWwgPSAoMCwgX2ludmVudG9yeV9tb2RlbHMuZmluZEludmVudG9yeU1vZGVsKSh0YXJnZXROb2RlVHlwZSk7CiAgICBjaGFuZ2VNZXRyaWMoewogICAgICB0eXBlOiBpbnZlbnRvcnlNb2RlbC5tZXRyaWNzLmRlZmF1bHRTbmFwc2hvdAogICAgfSk7CiAgfSwgW2Nsb3NlUG9wb3ZlciwgY2hhbmdlTm9kZVR5cGUsIGNoYW5nZUdyb3VwQnksIGNoYW5nZU1ldHJpYywgY2hhbmdlQWNjb3VudCwgY2hhbmdlUmVnaW9uXSk7CiAgdmFyIGdvVG9Ib3N0ID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIGdvVG9Ob2RlVHlwZSgnaG9zdCcpOwogIH0sIFtnb1RvTm9kZVR5cGVdKTsKICB2YXIgZ29Ub0s4ID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIGdvVG9Ob2RlVHlwZSgncG9kJyk7CiAgfSwgW2dvVG9Ob2RlVHlwZV0pOwogIHZhciBnb1RvRG9ja2VyID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIGdvVG9Ob2RlVHlwZSgnY29udGFpbmVyJyk7CiAgfSwgW2dvVG9Ob2RlVHlwZV0pOwogIHZhciBnb1RvQXdzRUMyID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIGdvVG9Ob2RlVHlwZSgnYXdzRUMyJyk7CiAgfSwgW2dvVG9Ob2RlVHlwZV0pOwogIHZhciBnb1RvQXdzUzMgPSAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKShmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gZ29Ub05vZGVUeXBlKCdhd3NTMycpOwogIH0sIFtnb1RvTm9kZVR5cGVdKTsKICB2YXIgZ29Ub0F3c1JEUyA9ICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBnb1RvTm9kZVR5cGUoJ2F3c1JEUycpOwogIH0sIFtnb1RvTm9kZVR5cGVdKTsKICB2YXIgZ29Ub0F3c1NRUyA9ICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBnb1RvTm9kZVR5cGUoJ2F3c1NRUycpOwogIH0sIFtnb1RvTm9kZVR5cGVdKTsKICB2YXIgcGFuZWxzID0gKDAsIF9yZWFjdC51c2VNZW1vKShmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gW3sKICAgICAgaWQ6ICdmaXJzdFBhbmVsJywKICAgICAgaXRlbXM6IFt7CiAgICAgICAgbmFtZTogZ2V0RGlzcGxheU5hbWVGb3JUeXBlKCdob3N0JyksCiAgICAgICAgb25DbGljazogZ29Ub0hvc3QKICAgICAgfSwgewogICAgICAgIG5hbWU6IGdldERpc3BsYXlOYW1lRm9yVHlwZSgncG9kJyksCiAgICAgICAgb25DbGljazogZ29Ub0s4CiAgICAgIH0sIHsKICAgICAgICBuYW1lOiBnZXREaXNwbGF5TmFtZUZvclR5cGUoJ2NvbnRhaW5lcicpLAogICAgICAgIG9uQ2xpY2s6IGdvVG9Eb2NrZXIKICAgICAgfSwgewogICAgICAgIG5hbWU6ICdBV1MnLAogICAgICAgIHBhbmVsOiAnYXdzUGFuZWwnCiAgICAgIH1dCiAgICB9LCB7CiAgICAgIGlkOiAnYXdzUGFuZWwnLAogICAgICB0aXRsZTogJ0FXUycsCiAgICAgIGl0ZW1zOiBbewogICAgICAgIG5hbWU6IGdldERpc3BsYXlOYW1lRm9yVHlwZSgnYXdzRUMyJyksCiAgICAgICAgb25DbGljazogZ29Ub0F3c0VDMgogICAgICB9LCB7CiAgICAgICAgbmFtZTogZ2V0RGlzcGxheU5hbWVGb3JUeXBlKCdhd3NTMycpLAogICAgICAgIG9uQ2xpY2s6IGdvVG9Bd3NTMwogICAgICB9LCB7CiAgICAgICAgbmFtZTogZ2V0RGlzcGxheU5hbWVGb3JUeXBlKCdhd3NSRFMnKSwKICAgICAgICBvbkNsaWNrOiBnb1RvQXdzUkRTCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiBnZXREaXNwbGF5TmFtZUZvclR5cGUoJ2F3c1NRUycpLAogICAgICAgIG9uQ2xpY2s6IGdvVG9Bd3NTUVMKICAgICAgfV0KICAgIH1dOwogIH0sIFtnb1RvQXdzRUMyLCBnb1RvQXdzUkRTLCBnb1RvQXdzUzMsIGdvVG9Bd3NTUVMsIGdvVG9Eb2NrZXIsIGdvVG9Ib3N0LCBnb1RvSzhdKTsKICB2YXIgc2VsZWN0ZWRUZXh0ID0gKDAsIF9yZWFjdC51c2VNZW1vKShmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gZ2V0RGlzcGxheU5hbWVGb3JUeXBlKG5vZGVUeXBlKTsKICB9LCBbbm9kZVR5cGVdKTsKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZpbHRlckdyb3VwLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpUG9wb3ZlciwgewogICAgaWQ6ICJjb250ZXh0TWVudSIsCiAgICBidXR0b246IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGaWx0ZXJCdXR0b24sIHsKICAgICAgaWNvblR5cGU6ICJhcnJvd0Rvd24iLAogICAgICBvbkNsaWNrOiBvcGVuUG9wb3ZlcgogICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgaWQ6ICJ4cGFjay5pbmZyYS53YWZmbGUuaW52ZW50b3J5QnV0dG9uTGFiZWwiLAogICAgICBkZWZhdWx0TWVzc2FnZTogIlZpZXc6IHtzZWxlY3RlZFRleHR9IiwKICAgICAgdmFsdWVzOiB7CiAgICAgICAgc2VsZWN0ZWRUZXh0OiBzZWxlY3RlZFRleHQKICAgICAgfQogICAgfSkpLAogICAgaXNPcGVuOiBpc09wZW4sCiAgICBjbG9zZVBvcG92ZXI6IGNsb3NlUG9wb3ZlciwKICAgIHBhbmVsUGFkZGluZ1NpemU6ICJub25lIiwKICAgIHdpdGhUaXRsZTogdHJ1ZSwKICAgIGFuY2hvclBvc2l0aW9uOiAiZG93bkxlZnQiCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUNvbnRleHRNZW51LCB7CiAgICBpbml0aWFsUGFuZWxJZDogImZpcnN0UGFuZWwiLAogICAgcGFuZWxzOiBwYW5lbHMKICB9KSkpOwp9OwoKZXhwb3J0cy5XYWZmbGVJbnZlbnRvcnlTd2l0Y2hlciA9IFdhZmZsZUludmVudG9yeVN3aXRjaGVyOw=="},null]}