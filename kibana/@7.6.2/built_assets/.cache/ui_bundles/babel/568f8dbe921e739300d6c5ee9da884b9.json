{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/canvas/public/lib/app_state.js","dependencies":[{"path":"x-pack/legacy/plugins/canvas/public/lib/app_state.js","mtime":1585205043749},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmdldERlZmF1bHRBcHBTdGF0ZSA9IGdldERlZmF1bHRBcHBTdGF0ZTsKZXhwb3J0cy5nZXRDdXJyZW50QXBwU3RhdGUgPSBnZXRDdXJyZW50QXBwU3RhdGU7CmV4cG9ydHMuZ2V0QXBwU3RhdGUgPSBnZXRBcHBTdGF0ZTsKZXhwb3J0cy5hc3NpZ25BcHBTdGF0ZSA9IGFzc2lnbkFwcFN0YXRlOwpleHBvcnRzLnNldEZ1bGxzY3JlZW4gPSBzZXRGdWxsc2NyZWVuOwpleHBvcnRzLnNldEF1dG9wbGF5SW50ZXJ2YWwgPSBzZXRBdXRvcGxheUludGVydmFsOwpleHBvcnRzLnNldFJlZnJlc2hJbnRlcnZhbCA9IHNldFJlZnJlc2hJbnRlcnZhbDsKCnZhciBfcXVlcnlzdHJpbmcgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInF1ZXJ5c3RyaW5nIikpOwoKdmFyIF9sb2Rhc2ggPSByZXF1aXJlKCJsb2Rhc2giKTsKCnZhciBfaW5pdGlhbF9zdGF0ZSA9IHJlcXVpcmUoIi4uL3N0YXRlL2luaXRpYWxfc3RhdGUiKTsKCnZhciBfZ2V0X3dpbmRvdyA9IHJlcXVpcmUoIi4vZ2V0X3dpbmRvdyIpOwoKdmFyIF9oaXN0b3J5X3Byb3ZpZGVyID0gcmVxdWlyZSgiLi9oaXN0b3J5X3Byb3ZpZGVyIik7Cgp2YXIgX3JvdXRlcl9wcm92aWRlciA9IHJlcXVpcmUoIi4vcm91dGVyX3Byb3ZpZGVyIik7Cgp2YXIgX3RpbWVfaW50ZXJ2YWwgPSByZXF1aXJlKCIuL3RpbWVfaW50ZXJ2YWwiKTsKCnZhciBfdHlwZXMgPSByZXF1aXJlKCIuLi8uLi90eXBlcyIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7CiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOwoKICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgewogICAgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7CiAgICBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7CiAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOwogICAgfSk7CiAgICBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7CiAgfQoKICByZXR1cm4ga2V5czsKfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsKICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgewogICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307CgogICAgaWYgKGkgJSAyKSB7CiAgICAgIG93bktleXMoc291cmNlLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsKICAgICAgfSk7CiAgICB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7CiAgICB9IGVsc2UgewogICAgICBvd25LZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7CiAgICAgIH0pOwogICAgfQogIH0KCiAgcmV0dXJuIHRhcmdldDsKfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgewogIGlmIChrZXkgaW4gb2JqKSB7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsKICAgICAgdmFsdWU6IHZhbHVlLAogICAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgIHdyaXRhYmxlOiB0cnVlCiAgICB9KTsKICB9IGVsc2UgewogICAgb2JqW2tleV0gPSB2YWx1ZTsKICB9CgogIHJldHVybiBvYmo7Cn0KCmZ1bmN0aW9uIGdldERlZmF1bHRBcHBTdGF0ZSgpIHsKICB2YXIgdHJhbnNpZW50U3RhdGUgPSAoMCwgX2luaXRpYWxfc3RhdGUuZ2V0SW5pdGlhbFN0YXRlKSgndHJhbnNpZW50Jyk7CiAgdmFyIHN0YXRlID0ge307CgogIGlmICh0cmFuc2llbnRTdGF0ZS5mdWxsc2NyZWVuKSB7CiAgICBzdGF0ZVtfdHlwZXMuQXBwU3RhdGVLZXlzLkZVTExTQ1JFRU5dID0gdHJ1ZTsKICB9CgogIGlmICh0cmFuc2llbnRTdGF0ZS5yZWZyZXNoLmludGVydmFsID4gMCkgewogICAgc3RhdGVbX3R5cGVzLkFwcFN0YXRlS2V5cy5SRUZSRVNIX0lOVEVSVkFMXSA9ICgwLCBfdGltZV9pbnRlcnZhbC5jcmVhdGVUaW1lSW50ZXJ2YWwpKHRyYW5zaWVudFN0YXRlLnJlZnJlc2guaW50ZXJ2YWwpOwogIH0KCiAgaWYgKHRyYW5zaWVudFN0YXRlLmF1dG9wbGF5LmVuYWJsZWQpIHsKICAgIHN0YXRlW190eXBlcy5BcHBTdGF0ZUtleXMuQVVUT1BMQVlfSU5URVJWQUxdID0gKDAsIF90aW1lX2ludGVydmFsLmNyZWF0ZVRpbWVJbnRlcnZhbCkodHJhbnNpZW50U3RhdGUuYXV0b3BsYXkuaW50ZXJ2YWwpOwogIH0KCiAgcmV0dXJuIHN0YXRlOwp9CgpmdW5jdGlvbiBnZXRDdXJyZW50QXBwU3RhdGUoKSB7CiAgdmFyIGhpc3RvcnkgPSAoMCwgX2hpc3RvcnlfcHJvdmlkZXIuaGlzdG9yeVByb3ZpZGVyKSgoMCwgX2dldF93aW5kb3cuZ2V0V2luZG93KSgpKTsKCiAgdmFyIF9oaXN0b3J5JGdldExvY2F0aW9uID0gaGlzdG9yeS5nZXRMb2NhdGlvbigpLAogICAgICBzZWFyY2ggPSBfaGlzdG9yeSRnZXRMb2NhdGlvbi5zZWFyY2g7CgogIHZhciBxcyA9ICEhc2VhcmNoID8gX3F1ZXJ5c3RyaW5nLmRlZmF1bHQucGFyc2Uoc2VhcmNoLnJlcGxhY2UoL15cPy8sICcnKSkgOiB7fTsKICB2YXIgYXBwU3RhdGUgPSBhc3NpZ25BcHBTdGF0ZSh7fSwgcXMpOwogIHJldHVybiBhcHBTdGF0ZTsKfQoKZnVuY3Rpb24gZ2V0QXBwU3RhdGUoa2V5KSB7CiAgdmFyIGFwcFN0YXRlID0gX29iamVjdFNwcmVhZCh7fSwgZ2V0RGVmYXVsdEFwcFN0YXRlKCksIHt9LCBnZXRDdXJyZW50QXBwU3RhdGUoKSk7CgogIHJldHVybiBrZXkgPyAoMCwgX2xvZGFzaC5nZXQpKGFwcFN0YXRlLCBrZXkpIDogYXBwU3RhdGU7Cn0KCmZ1bmN0aW9uIGFzc2lnbkFwcFN0YXRlKG9iaiwgYXBwU3RhdGUpIHsKICB2YXIgZnVsbHNjcmVlbiA9IGFwcFN0YXRlW190eXBlcy5BcHBTdGF0ZUtleXMuRlVMTFNDUkVFTl07CiAgdmFyIHJlZnJlc2hLZXkgPSBhcHBTdGF0ZVtfdHlwZXMuQXBwU3RhdGVLZXlzLlJFRlJFU0hfSU5URVJWQUxdOwogIHZhciBhdXRvcGxheUtleSA9IGFwcFN0YXRlW190eXBlcy5BcHBTdGF0ZUtleXMuQVVUT1BMQVlfSU5URVJWQUxdOwoKICBpZiAoZnVsbHNjcmVlbikgewogICAgb2JqW190eXBlcy5BcHBTdGF0ZUtleXMuRlVMTFNDUkVFTl0gPSB0cnVlOwogIH0gZWxzZSB7CiAgICBkZWxldGUgb2JqW190eXBlcy5BcHBTdGF0ZUtleXMuRlVMTFNDUkVFTl07CiAgfQoKICB2YXIgcmVmcmVzaCA9IEFycmF5LmlzQXJyYXkocmVmcmVzaEtleSkgPyByZWZyZXNoS2V5WzBdIDogcmVmcmVzaEtleTsKCiAgaWYgKHJlZnJlc2ggJiYgKDAsIF90aW1lX2ludGVydmFsLmlzVmFsaWRUaW1lSW50ZXJ2YWwpKHJlZnJlc2gpKSB7CiAgICBvYmpbX3R5cGVzLkFwcFN0YXRlS2V5cy5SRUZSRVNIX0lOVEVSVkFMXSA9IHJlZnJlc2g7CiAgfSBlbHNlIHsKICAgIGRlbGV0ZSBvYmpbX3R5cGVzLkFwcFN0YXRlS2V5cy5SRUZSRVNIX0lOVEVSVkFMXTsKICB9CgogIHZhciBhdXRvcGxheSA9IEFycmF5LmlzQXJyYXkoYXV0b3BsYXlLZXkpID8gYXV0b3BsYXlLZXlbMF0gOiBhdXRvcGxheUtleTsKCiAgaWYgKGF1dG9wbGF5ICYmICgwLCBfdGltZV9pbnRlcnZhbC5pc1ZhbGlkVGltZUludGVydmFsKShhdXRvcGxheSkpIHsKICAgIG9ialtfdHlwZXMuQXBwU3RhdGVLZXlzLkFVVE9QTEFZX0lOVEVSVkFMXSA9IGF1dG9wbGF5OwogIH0gZWxzZSB7CiAgICBkZWxldGUgb2JqW190eXBlcy5BcHBTdGF0ZUtleXMuQVVUT1BMQVlfSU5URVJWQUxdOwogIH0KCiAgcmV0dXJuIG9iajsKfQoKZnVuY3Rpb24gc2V0RnVsbHNjcmVlbihwYXlsb2FkKSB7CiAgdmFyIGFwcFN0YXRlID0gZ2V0QXBwU3RhdGUoKTsKICB2YXIgYXBwVmFsdWUgPSBhcHBTdGF0ZVtfdHlwZXMuQXBwU3RhdGVLZXlzLkZVTExTQ1JFRU5dOwoKICBpZiAocGF5bG9hZCA9PT0gZmFsc2UgJiYgYXBwVmFsdWUpIHsKICAgIGRlbGV0ZSBhcHBTdGF0ZVtfdHlwZXMuQXBwU3RhdGVLZXlzLkZVTExTQ1JFRU5dOwogICAgKDAsIF9yb3V0ZXJfcHJvdmlkZXIucm91dGVyUHJvdmlkZXIpKCkudXBkYXRlQXBwU3RhdGUoYXBwU3RhdGUpOwogIH0gZWxzZSBpZiAocGF5bG9hZCA9PT0gdHJ1ZSAmJiAhYXBwVmFsdWUpIHsKICAgIGFwcFN0YXRlW190eXBlcy5BcHBTdGF0ZUtleXMuRlVMTFNDUkVFTl0gPSB0cnVlOwogICAgKDAsIF9yb3V0ZXJfcHJvdmlkZXIucm91dGVyUHJvdmlkZXIpKCkudXBkYXRlQXBwU3RhdGUoYXBwU3RhdGUpOwogIH0KfQoKZnVuY3Rpb24gc2V0QXV0b3BsYXlJbnRlcnZhbChwYXlsb2FkKSB7CiAgdmFyIGFwcFN0YXRlID0gZ2V0QXBwU3RhdGUoKTsKICB2YXIgYXBwVmFsdWUgPSBhcHBTdGF0ZVtfdHlwZXMuQXBwU3RhdGVLZXlzLkFVVE9QTEFZX0lOVEVSVkFMXTsKCiAgaWYgKHBheWxvYWQgIT09IGFwcFZhbHVlKSB7CiAgICBpZiAoIXBheWxvYWQgJiYgYXBwVmFsdWUpIHsKICAgICAgZGVsZXRlIGFwcFN0YXRlW190eXBlcy5BcHBTdGF0ZUtleXMuQVVUT1BMQVlfSU5URVJWQUxdOwogICAgICAoMCwgX3JvdXRlcl9wcm92aWRlci5yb3V0ZXJQcm92aWRlcikoKS51cGRhdGVBcHBTdGF0ZShhcHBTdGF0ZSk7CiAgICB9IGVsc2UgaWYgKHBheWxvYWQpIHsKICAgICAgYXBwU3RhdGVbX3R5cGVzLkFwcFN0YXRlS2V5cy5BVVRPUExBWV9JTlRFUlZBTF0gPSBwYXlsb2FkOwogICAgICAoMCwgX3JvdXRlcl9wcm92aWRlci5yb3V0ZXJQcm92aWRlcikoKS51cGRhdGVBcHBTdGF0ZShhcHBTdGF0ZSk7CiAgICB9CiAgfQp9CgpmdW5jdGlvbiBzZXRSZWZyZXNoSW50ZXJ2YWwocGF5bG9hZCkgewogIHZhciBhcHBTdGF0ZSA9IGdldEFwcFN0YXRlKCk7CiAgdmFyIGFwcFZhbHVlID0gYXBwU3RhdGVbX3R5cGVzLkFwcFN0YXRlS2V5cy5SRUZSRVNIX0lOVEVSVkFMXTsKCiAgaWYgKHBheWxvYWQgIT09IGFwcFZhbHVlKSB7CiAgICBpZiAoKDAsIF90aW1lX2ludGVydmFsLmdldFRpbWVJbnRlcnZhbCkocGF5bG9hZCkpIHsKICAgICAgYXBwU3RhdGVbX3R5cGVzLkFwcFN0YXRlS2V5cy5SRUZSRVNIX0lOVEVSVkFMXSA9IHBheWxvYWQ7CiAgICAgICgwLCBfcm91dGVyX3Byb3ZpZGVyLnJvdXRlclByb3ZpZGVyKSgpLnVwZGF0ZUFwcFN0YXRlKGFwcFN0YXRlKTsKICAgIH0gZWxzZSB7CiAgICAgIGRlbGV0ZSBhcHBTdGF0ZVtfdHlwZXMuQXBwU3RhdGVLZXlzLlJFRlJFU0hfSU5URVJWQUxdOwogICAgICAoMCwgX3JvdXRlcl9wcm92aWRlci5yb3V0ZXJQcm92aWRlcikoKS51cGRhdGVBcHBTdGF0ZShhcHBTdGF0ZSk7CiAgICB9CiAgfQp9"},null]}