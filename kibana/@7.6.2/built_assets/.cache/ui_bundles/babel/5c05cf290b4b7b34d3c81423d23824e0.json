{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/kibana/public/discover/np_ready/angular/context_app.js","dependencies":[{"path":"src/legacy/core_plugins/kibana/public/discover/np_ready/angular/context_app.js","mtime":1585205039480},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9sb2Rhc2ggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImxvZGFzaCIpKTsKCnZhciBfa2liYW5hX3NlcnZpY2VzID0gcmVxdWlyZSgiLi4vLi4va2liYW5hX3NlcnZpY2VzIik7Cgp2YXIgX2NvbnRleHRfYXBwID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL2NvbnRleHRfYXBwLmh0bWwiKSk7CgpyZXF1aXJlKCIuL2NvbnRleHQvY29tcG9uZW50cy9hY3Rpb25fYmFyIik7Cgp2YXIgX3NvcnRpbmcgPSByZXF1aXJlKCIuL2NvbnRleHQvYXBpL3V0aWxzL3NvcnRpbmciKTsKCnZhciBfcXVlcnlfcGFyYW1ldGVycyA9IHJlcXVpcmUoIi4vY29udGV4dC9xdWVyeV9wYXJhbWV0ZXJzIik7Cgp2YXIgX3F1ZXJ5ID0gcmVxdWlyZSgiLi9jb250ZXh0L3F1ZXJ5Iik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfQoKZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpOyB9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7IH0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikgeyBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChpdGVyKSB8fCBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaXRlcikgPT09ICJbb2JqZWN0IEFyZ3VtZW50c10iKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGFyci5sZW5ndGgpOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0gfQoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfQoKdmFyIF9nZXRTZXJ2aWNlcyA9ICgwLCBfa2liYW5hX3NlcnZpY2VzLmdldFNlcnZpY2VzKSgpLAogICAgdGltZWZpbHRlciA9IF9nZXRTZXJ2aWNlcy50aW1lZmlsdGVyOwoKdmFyIF9tb2R1bGUgPSAoMCwgX2tpYmFuYV9zZXJ2aWNlcy5nZXRBbmd1bGFyTW9kdWxlKSgpOwoKX21vZHVsZS5kaXJlY3RpdmUoJ2NvbnRleHRBcHAnLCBmdW5jdGlvbiBDb250ZXh0QXBwKCkgewogIHJldHVybiB7CiAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlLAogICAgY29udHJvbGxlcjogKDAsIF9raWJhbmFfc2VydmljZXMuY2FsbEFmdGVyQmluZGluZ3NXb3JrYXJvdW5kKShDb250ZXh0QXBwQ29udHJvbGxlciksCiAgICBjb250cm9sbGVyQXM6ICdjb250ZXh0QXBwJywKICAgIHJlc3RyaWN0OiAnRScsCiAgICBzY29wZTogewogICAgICBhbmNob3JJZDogJz0nLAogICAgICBjb2x1bW5zOiAnPScsCiAgICAgIGluZGV4UGF0dGVybjogJz0nLAogICAgICBmaWx0ZXJzOiAnPScsCiAgICAgIHByZWRlY2Vzc29yQ291bnQ6ICc9JywKICAgICAgc3VjY2Vzc29yQ291bnQ6ICc9JywKICAgICAgc29ydDogJz0nLAogICAgICBkaXNjb3ZlclVybDogJz0nCiAgICB9LAogICAgdGVtcGxhdGU6IF9jb250ZXh0X2FwcC5kZWZhdWx0CiAgfTsKfSk7CgpmdW5jdGlvbiBDb250ZXh0QXBwQ29udHJvbGxlcigkc2NvcGUsIGNvbmZpZywgUHJpdmF0ZSkgewogIHZhciBfdGhpcyA9IHRoaXM7CgogIHZhciBxdWVyeVBhcmFtZXRlckFjdGlvbnMgPSAoMCwgX3F1ZXJ5X3BhcmFtZXRlcnMuZ2V0UXVlcnlQYXJhbWV0ZXJBY3Rpb25zKSgpOwogIHZhciBxdWVyeUFjdGlvbnMgPSBQcml2YXRlKF9xdWVyeS5RdWVyeUFjdGlvbnNQcm92aWRlcik7CiAgdGltZWZpbHRlci5kaXNhYmxlQXV0b1JlZnJlc2hTZWxlY3RvcigpOwogIHRpbWVmaWx0ZXIuZGlzYWJsZVRpbWVSYW5nZVNlbGVjdG9yKCk7CiAgdGhpcy5zdGF0ZSA9IGNyZWF0ZUluaXRpYWxTdGF0ZShwYXJzZUludChjb25maWcuZ2V0KCdjb250ZXh0OnN0ZXAnKSwgMTApLCAoMCwgX3NvcnRpbmcuZ2V0Rmlyc3RTb3J0YWJsZUZpZWxkKSh0aGlzLmluZGV4UGF0dGVybiwgY29uZmlnLmdldCgnY29udGV4dDp0aWVCcmVha2VyRmllbGRzJykpLCB0aGlzLmRpc2NvdmVyVXJsKTsKICB0aGlzLmFjdGlvbnMgPSBfbG9kYXNoLmRlZmF1bHQubWFwVmFsdWVzKF9vYmplY3RTcHJlYWQoe30sIHF1ZXJ5UGFyYW1ldGVyQWN0aW9ucywge30sIHF1ZXJ5QWN0aW9ucyksIGZ1bmN0aW9uIChhY3Rpb24pIHsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBhY3Rpb24oX3RoaXMuc3RhdGUpLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTsKICAgIH07CiAgfSk7CiAgdGhpcy5jb25zdGFudHMgPSB7CiAgICBGQUlMVVJFX1JFQVNPTlM6IF9xdWVyeS5GQUlMVVJFX1JFQVNPTlMsCiAgICBMT0FESU5HX1NUQVRVUzogX3F1ZXJ5LkxPQURJTkdfU1RBVFVTCiAgfTsKICAkc2NvcGUuJHdhdGNoR3JvdXAoW2Z1bmN0aW9uICgpIHsKICAgIHJldHVybiBfdGhpcy5zdGF0ZS5yb3dzLnByZWRlY2Vzc29yczsKICB9LCBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gX3RoaXMuc3RhdGUucm93cy5hbmNob3I7CiAgfSwgZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIF90aGlzLnN0YXRlLnJvd3Muc3VjY2Vzc29yczsKICB9XSwgZnVuY3Rpb24gKG5ld1ZhbHVlcykgewogICAgdmFyIF90aGlzJGFjdGlvbnM7CgogICAgcmV0dXJuIChfdGhpcyRhY3Rpb25zID0gX3RoaXMuYWN0aW9ucykuc2V0QWxsUm93cy5hcHBseShfdGhpcyRhY3Rpb25zLCBfdG9Db25zdW1hYmxlQXJyYXkobmV3VmFsdWVzKSk7CiAgfSk7CiAgLyoqCiAgICogU3luYyBwcm9wZXJ0aWVzIHRvIHN0YXRlCiAgICovCgogICRzY29wZS4kd2F0Y2hDb2xsZWN0aW9uKGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBfbG9kYXNoLmRlZmF1bHQucGljayhfdGhpcywgX3F1ZXJ5X3BhcmFtZXRlcnMuUVVFUllfUEFSQU1FVEVSX0tFWVMpLCB7CiAgICAgIGluZGV4UGF0dGVybklkOiBfdGhpcy5pbmRleFBhdHRlcm4uaWQKICAgIH0pOwogIH0sIGZ1bmN0aW9uIChuZXdRdWVyeVBhcmFtZXRlcnMpIHsKICAgIHZhciBxdWVyeVBhcmFtZXRlcnMgPSBfdGhpcy5zdGF0ZS5xdWVyeVBhcmFtZXRlcnM7CgogICAgaWYgKG5ld1F1ZXJ5UGFyYW1ldGVycy5pbmRleFBhdHRlcm5JZCAhPT0gcXVlcnlQYXJhbWV0ZXJzLmluZGV4UGF0dGVybklkIHx8IG5ld1F1ZXJ5UGFyYW1ldGVycy5hbmNob3JJZCAhPT0gcXVlcnlQYXJhbWV0ZXJzLmFuY2hvcklkIHx8ICFfbG9kYXNoLmRlZmF1bHQuaXNFcXVhbChuZXdRdWVyeVBhcmFtZXRlcnMuc29ydCwgcXVlcnlQYXJhbWV0ZXJzLnNvcnQpKSB7CiAgICAgIF90aGlzLmFjdGlvbnMuZmV0Y2hBbGxSb3dzV2l0aE5ld1F1ZXJ5UGFyYW1ldGVycyhfbG9kYXNoLmRlZmF1bHQuY2xvbmVEZWVwKG5ld1F1ZXJ5UGFyYW1ldGVycykpOwogICAgfSBlbHNlIGlmIChuZXdRdWVyeVBhcmFtZXRlcnMucHJlZGVjZXNzb3JDb3VudCAhPT0gcXVlcnlQYXJhbWV0ZXJzLnByZWRlY2Vzc29yQ291bnQgfHwgbmV3UXVlcnlQYXJhbWV0ZXJzLnN1Y2Nlc3NvckNvdW50ICE9PSBxdWVyeVBhcmFtZXRlcnMuc3VjY2Vzc29yQ291bnQgfHwgIV9sb2Rhc2guZGVmYXVsdC5pc0VxdWFsKG5ld1F1ZXJ5UGFyYW1ldGVycy5maWx0ZXJzLCBxdWVyeVBhcmFtZXRlcnMuZmlsdGVycykpIHsKICAgICAgX3RoaXMuYWN0aW9ucy5mZXRjaENvbnRleHRSb3dzV2l0aE5ld1F1ZXJ5UGFyYW1ldGVycyhfbG9kYXNoLmRlZmF1bHQuY2xvbmVEZWVwKG5ld1F1ZXJ5UGFyYW1ldGVycykpOwogICAgfQogIH0pOwogIC8qKgogICAqIFN5bmMgc3RhdGUgdG8gcHJvcGVydGllcwogICAqLwoKICAkc2NvcGUuJHdhdGNoQ29sbGVjdGlvbihmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gewogICAgICBwcmVkZWNlc3NvckNvdW50OiBfdGhpcy5zdGF0ZS5xdWVyeVBhcmFtZXRlcnMucHJlZGVjZXNzb3JDb3VudCwKICAgICAgc3VjY2Vzc29yQ291bnQ6IF90aGlzLnN0YXRlLnF1ZXJ5UGFyYW1ldGVycy5zdWNjZXNzb3JDb3VudAogICAgfTsKICB9LCBmdW5jdGlvbiAobmV3UGFyYW1ldGVycykgewogICAgX2xvZGFzaC5kZWZhdWx0LmFzc2lnbihfdGhpcywgbmV3UGFyYW1ldGVycyk7CiAgfSk7Cn0KCmZ1bmN0aW9uIGNyZWF0ZUluaXRpYWxTdGF0ZShkZWZhdWx0U3RlcFNpemUsIHRpZUJyZWFrZXJGaWVsZCwgZGlzY292ZXJVcmwpIHsKICByZXR1cm4gewogICAgcXVlcnlQYXJhbWV0ZXJzOiAoMCwgX3F1ZXJ5X3BhcmFtZXRlcnMuY3JlYXRlSW5pdGlhbFF1ZXJ5UGFyYW1ldGVyc1N0YXRlKShkZWZhdWx0U3RlcFNpemUsIHRpZUJyZWFrZXJGaWVsZCksCiAgICByb3dzOiB7CiAgICAgIGFsbDogW10sCiAgICAgIGFuY2hvcjogbnVsbCwKICAgICAgcHJlZGVjZXNzb3JzOiBbXSwKICAgICAgc3VjY2Vzc29yczogW10KICAgIH0sCiAgICBsb2FkaW5nU3RhdHVzOiAoMCwgX3F1ZXJ5LmNyZWF0ZUluaXRpYWxMb2FkaW5nU3RhdHVzU3RhdGUpKCksCiAgICBuYXZpZ2F0aW9uOiB7CiAgICAgIGRpc2NvdmVyOiB7CiAgICAgICAgdXJsOiBkaXNjb3ZlclVybAogICAgICB9CiAgICB9CiAgfTsKfQ=="},null]}