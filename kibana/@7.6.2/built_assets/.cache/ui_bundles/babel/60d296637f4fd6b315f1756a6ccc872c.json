{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/infra/public/pages/metrics/index.js","dependencies":[{"path":"x-pack/legacy/plugins/infra/public/pages/metrics/index.js","mtime":1585205044785},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLk1ldHJpY0RldGFpbCA9IHZvaWQgMDsKCnZhciBfaTE4biA9IHJlcXVpcmUoIkBrYm4vaTE4biIpOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9ldWlfc3R5bGVkX2NvbXBvbmVudHMgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCIuLi8uLi8uLi8uLi8uLi9jb21tb24vZXVpX3N0eWxlZF9jb21wb25lbnRzIikpOwoKdmFyIF9kb2N1bWVudF90aXRsZSA9IHJlcXVpcmUoIi4uLy4uL2NvbXBvbmVudHMvZG9jdW1lbnRfdGl0bGUiKTsKCnZhciBfaGVhZGVyID0gcmVxdWlyZSgiLi4vLi4vY29tcG9uZW50cy9oZWFkZXIiKTsKCnZhciBfcGFnZSA9IHJlcXVpcmUoIi4uLy4uL2NvbXBvbmVudHMvcGFnZSIpOwoKdmFyIF93aXRoX21ldHJpY3NfdGltZSA9IHJlcXVpcmUoIi4vY29udGFpbmVycy93aXRoX21ldHJpY3NfdGltZSIpOwoKdmFyIF9wYWdlX3Byb3ZpZGVycyA9IHJlcXVpcmUoIi4vcGFnZV9wcm92aWRlcnMiKTsKCnZhciBfdXNlX21ldGFkYXRhID0gcmVxdWlyZSgiLi4vLi4vY29udGFpbmVycy9tZXRhZGF0YS91c2VfbWV0YWRhdGEiKTsKCnZhciBfc291cmNlID0gcmVxdWlyZSgiLi4vLi4vY29udGFpbmVycy9zb3VyY2UiKTsKCnZhciBfbG9hZGluZyA9IHJlcXVpcmUoIi4uLy4uL2NvbXBvbmVudHMvbG9hZGluZyIpOwoKdmFyIF9pbnZlbnRvcnlfbW9kZWxzID0gcmVxdWlyZSgiLi4vLi4vLi4vY29tbW9uL2ludmVudG9yeV9tb2RlbHMiKTsKCnZhciBfbm9kZV9kZXRhaWxzX3BhZ2UgPSByZXF1aXJlKCIuL2NvbXBvbmVudHMvbm9kZV9kZXRhaWxzX3BhZ2UiKTsKCnZhciBfcHVibGljID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3BsdWdpbnMva2liYW5hX3JlYWN0L3B1YmxpYyIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7CiAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgewogICAgcmV0dXJuIG9iajsKICB9IGVsc2UgewogICAgdmFyIG5ld09iaiA9IHt9OwoKICAgIGlmIChvYmogIT0gbnVsbCkgewogICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsKICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OwoKICAgICAgICAgIGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgewogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBuZXdPYmouZGVmYXVsdCA9IG9iajsKICAgIHJldHVybiBuZXdPYmo7CiAgfQp9CgpmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTsKfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkgewogIHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7Cn0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikgewogIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGl0ZXIpIHx8IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChpdGVyKSA9PT0gIltvYmplY3QgQXJndW1lbnRzXSIpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpOwp9CgpmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgewogICAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsKICAgICAgYXJyMltpXSA9IGFycltpXTsKICAgIH0KCiAgICByZXR1cm4gYXJyMjsKICB9Cn0KCmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgewogIHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7Cn0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7CiAgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZSIpOwp9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7CiAgdmFyIF9hcnIgPSBbXTsKICB2YXIgX24gPSB0cnVlOwogIHZhciBfZCA9IGZhbHNlOwogIHZhciBfZSA9IHVuZGVmaW5lZDsKCiAgdHJ5IHsKICAgIGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsKICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTsKCiAgICAgIGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsKICAgIH0KICB9IGNhdGNoIChlcnIpIHsKICAgIF9kID0gdHJ1ZTsKICAgIF9lID0gZXJyOwogIH0gZmluYWxseSB7CiAgICB0cnkgewogICAgICBpZiAoIV9uICYmIF9pWyJyZXR1cm4iXSAhPSBudWxsKSBfaVsicmV0dXJuIl0oKTsKICAgIH0gZmluYWxseSB7CiAgICAgIGlmIChfZCkgdGhyb3cgX2U7CiAgICB9CiAgfQoKICByZXR1cm4gX2FycjsKfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgewogIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIGJhY2tncm91bmQtY29sb3I6ICIsICI7XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKHN0cmluZ3MsIHJhdykgewogIGlmICghcmF3KSB7CiAgICByYXcgPSBzdHJpbmdzLnNsaWNlKDApOwogIH0KCiAgcmV0dXJuIE9iamVjdC5mcmVlemUoT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoc3RyaW5ncywgewogICAgcmF3OiB7CiAgICAgIHZhbHVlOiBPYmplY3QuZnJlZXplKHJhdykKICAgIH0KICB9KSk7Cn0KCnZhciBEZXRhaWxQYWdlQ29udGVudCA9ICgwLCBfZXVpX3N0eWxlZF9jb21wb25lbnRzLmRlZmF1bHQpKF9wYWdlLlBhZ2VDb250ZW50KShfdGVtcGxhdGVPYmplY3QoKSwgZnVuY3Rpb24gKHByb3BzKSB7CiAgcmV0dXJuIHByb3BzLnRoZW1lLmV1aS5ldWlDb2xvckxpZ2h0ZXN0U2hhZGU7Cn0pOwp2YXIgTWV0cmljRGV0YWlsID0gKDAsIF9wYWdlX3Byb3ZpZGVycy53aXRoTWV0cmljUGFnZVByb3ZpZGVycykoKDAsIF9ldWlfc3R5bGVkX2NvbXBvbmVudHMud2l0aFRoZW1lKShmdW5jdGlvbiAoX3JlZikgewogIHZhciBfdXNlS2liYW5hJHNlcnZpY2VzJGE7CgogIHZhciBtYXRjaCA9IF9yZWYubWF0Y2gsCiAgICAgIHRoZW1lID0gX3JlZi50aGVtZTsKICB2YXIgdWlDYXBhYmlsaXRpZXMgPSAoX3VzZUtpYmFuYSRzZXJ2aWNlcyRhID0gKDAsIF9wdWJsaWMudXNlS2liYW5hKSgpLnNlcnZpY2VzLmFwcGxpY2F0aW9uKSA9PT0gbnVsbCB8fCBfdXNlS2liYW5hJHNlcnZpY2VzJGEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF91c2VLaWJhbmEkc2VydmljZXMkYS5jYXBhYmlsaXRpZXM7CiAgdmFyIG5vZGVJZCA9IG1hdGNoLnBhcmFtcy5ub2RlOwogIHZhciBub2RlVHlwZSA9IG1hdGNoLnBhcmFtcy50eXBlOwogIHZhciBpbnZlbnRvcnlNb2RlbCA9ICgwLCBfaW52ZW50b3J5X21vZGVscy5maW5kSW52ZW50b3J5TW9kZWwpKG5vZGVUeXBlKTsKCiAgdmFyIF91c2VDb250ZXh0ID0gKDAsIF9yZWFjdC51c2VDb250ZXh0KShfc291cmNlLlNvdXJjZS5Db250ZXh0KSwKICAgICAgc291cmNlSWQgPSBfdXNlQ29udGV4dC5zb3VyY2VJZDsKCiAgdmFyIF91c2VNZXRhZGF0YSA9ICgwLCBfdXNlX21ldGFkYXRhLnVzZU1ldGFkYXRhKShub2RlSWQsIG5vZGVUeXBlLCBpbnZlbnRvcnlNb2RlbC5yZXF1aXJlZE1ldHJpY3MsIHNvdXJjZUlkKSwKICAgICAgbmFtZSA9IF91c2VNZXRhZGF0YS5uYW1lLAogICAgICBmaWx0ZXJlZFJlcXVpcmVkTWV0cmljcyA9IF91c2VNZXRhZGF0YS5maWx0ZXJlZFJlcXVpcmVkTWV0cmljcywKICAgICAgbWV0YWRhdGFMb2FkaW5nID0gX3VzZU1ldGFkYXRhLmxvYWRpbmcsCiAgICAgIGNsb3VkSWQgPSBfdXNlTWV0YWRhdGEuY2xvdWRJZCwKICAgICAgbWV0YWRhdGEgPSBfdXNlTWV0YWRhdGEubWV0YWRhdGE7CgogIHZhciBfdXNlU3RhdGUgPSAoMCwgX3JlYWN0LnVzZVN0YXRlKShbXSksCiAgICAgIF91c2VTdGF0ZTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUsIDIpLAogICAgICBzaWRlTmF2ID0gX3VzZVN0YXRlMlswXSwKICAgICAgc2V0U2lkZU5hdiA9IF91c2VTdGF0ZTJbMV07CgogIHZhciBhZGROYXZJdGVtID0gX3JlYWN0LmRlZmF1bHQudXNlQ2FsbGJhY2soZnVuY3Rpb24gKGl0ZW0pIHsKICAgIGlmICghc2lkZU5hdi5zb21lKGZ1bmN0aW9uIChuKSB7CiAgICAgIHJldHVybiBuLmlkID09PSBpdGVtLmlkOwogICAgfSkpIHsKICAgICAgc2V0U2lkZU5hdihbaXRlbV0uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShzaWRlTmF2KSkpOwogICAgfQogIH0sIFtzaWRlTmF2XSk7CgogIHZhciBicmVhZGNydW1icyA9IFt7CiAgICBocmVmOiAnIy8nLAogICAgdGV4dDogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLmluZnJhLmhlYWRlci5pbmZyYXN0cnVjdHVyZVRpdGxlJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ01ldHJpY3MnCiAgICB9KQogIH0sIHsKICAgIHRleHQ6IG5hbWUKICB9XTsKCiAgaWYgKG1ldGFkYXRhTG9hZGluZyAmJiAhZmlsdGVyZWRSZXF1aXJlZE1ldHJpY3MubGVuZ3RoKSB7CiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfbG9hZGluZy5JbmZyYUxvYWRpbmdQYW5lbCwgewogICAgICBoZWlnaHQ6ICIxMDB2aCIsCiAgICAgIHdpZHRoOiAiMTAwJSIsCiAgICAgIHRleHQ6IF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5pbmZyYS5tZXRyaWNzLmxvYWRpbmdOb2RlRGF0YVRleHQnLCB7CiAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdMb2FkaW5nIGRhdGEnCiAgICAgIH0pCiAgICB9KTsKICB9CgogIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF93aXRoX21ldHJpY3NfdGltZS5XaXRoTWV0cmljc1RpbWUsIG51bGwsIGZ1bmN0aW9uIChfcmVmMikgewogICAgdmFyIF91aUNhcGFiaWxpdGllcyRpbmZyYTsKCiAgICB2YXIgdGltZVJhbmdlID0gX3JlZjIudGltZVJhbmdlLAogICAgICAgIHBhcnNlZFRpbWVSYW5nZSA9IF9yZWYyLnBhcnNlZFRpbWVSYW5nZSwKICAgICAgICBzZXRUaW1lUmFuZ2UgPSBfcmVmMi5zZXRUaW1lUmFuZ2UsCiAgICAgICAgcmVmcmVzaEludGVydmFsID0gX3JlZjIucmVmcmVzaEludGVydmFsLAogICAgICAgIHNldFJlZnJlc2hJbnRlcnZhbCA9IF9yZWYyLnNldFJlZnJlc2hJbnRlcnZhbCwKICAgICAgICBpc0F1dG9SZWxvYWRpbmcgPSBfcmVmMi5pc0F1dG9SZWxvYWRpbmcsCiAgICAgICAgc2V0QXV0b1JlbG9hZCA9IF9yZWYyLnNldEF1dG9SZWxvYWQsCiAgICAgICAgdHJpZ2dlclJlZnJlc2ggPSBfcmVmMi50cmlnZ2VyUmVmcmVzaDsKICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9wYWdlLkNvbHVtbmFyUGFnZSwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfaGVhZGVyLkhlYWRlciwgewogICAgICBicmVhZGNydW1iczogYnJlYWRjcnVtYnMsCiAgICAgIHJlYWRPbmx5QmFkZ2U6ICEodWlDYXBhYmlsaXRpZXMgPT09IG51bGwgfHwgdWlDYXBhYmlsaXRpZXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfdWlDYXBhYmlsaXRpZXMkaW5mcmEgPSB1aUNhcGFiaWxpdGllcy5pbmZyYXN0cnVjdHVyZSkgPT09IG51bGwgfHwgX3VpQ2FwYWJpbGl0aWVzJGluZnJhID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdWlDYXBhYmlsaXRpZXMkaW5mcmEuc2F2ZSkKICAgIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF93aXRoX21ldHJpY3NfdGltZS5XaXRoTWV0cmljc1RpbWVVcmxTdGF0ZSwgbnVsbCksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2RvY3VtZW50X3RpdGxlLkRvY3VtZW50VGl0bGUsIHsKICAgICAgdGl0bGU6IF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5pbmZyYS5tZXRyaWNEZXRhaWxQYWdlLmRvY3VtZW50VGl0bGUnLCB7CiAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdJbmZyYXN0cnVjdHVyZSB8IE1ldHJpY3MgfCB7bmFtZX0nLAogICAgICAgIHZhbHVlczogewogICAgICAgICAgbmFtZTogbmFtZQogICAgICAgIH0KICAgICAgfSkKICAgIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KERldGFpbFBhZ2VDb250ZW50LCB7CiAgICAgICJkYXRhLXRlc3Qtc3ViaiI6ICJpbmZyYU1ldHJpY3NQYWdlIgogICAgfSwgbWV0YWRhdGEgPyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ub2RlX2RldGFpbHNfcGFnZS5Ob2RlRGV0YWlsc1BhZ2UsIHsKICAgICAgbmFtZTogbmFtZSwKICAgICAgcmVxdWlyZWRNZXRyaWNzOiBmaWx0ZXJlZFJlcXVpcmVkTWV0cmljcywKICAgICAgc291cmNlSWQ6IHNvdXJjZUlkLAogICAgICB0aW1lUmFuZ2U6IHRpbWVSYW5nZSwKICAgICAgcGFyc2VkVGltZVJhbmdlOiBwYXJzZWRUaW1lUmFuZ2UsCiAgICAgIG5vZGVUeXBlOiBub2RlVHlwZSwKICAgICAgbm9kZUlkOiBub2RlSWQsCiAgICAgIGNsb3VkSWQ6IGNsb3VkSWQsCiAgICAgIG1ldGFkYXRhTG9hZGluZzogbWV0YWRhdGFMb2FkaW5nLAogICAgICBpc0F1dG9SZWxvYWRpbmc6IGlzQXV0b1JlbG9hZGluZywKICAgICAgcmVmcmVzaEludGVydmFsOiByZWZyZXNoSW50ZXJ2YWwsCiAgICAgIHNpZGVOYXY6IHNpZGVOYXYsCiAgICAgIG1ldGFkYXRhOiBtZXRhZGF0YSwKICAgICAgYWRkTmF2SXRlbTogYWRkTmF2SXRlbSwKICAgICAgc2V0UmVmcmVzaEludGVydmFsOiBzZXRSZWZyZXNoSW50ZXJ2YWwsCiAgICAgIHNldEF1dG9SZWxvYWQ6IHNldEF1dG9SZWxvYWQsCiAgICAgIHRyaWdnZXJSZWZyZXNoOiB0cmlnZ2VyUmVmcmVzaCwKICAgICAgc2V0VGltZVJhbmdlOiBzZXRUaW1lUmFuZ2UKICAgIH0pIDogbnVsbCkpOwogIH0pOwp9KSk7CmV4cG9ydHMuTWV0cmljRGV0YWlsID0gTWV0cmljRGV0YWlsOw=="},null]}