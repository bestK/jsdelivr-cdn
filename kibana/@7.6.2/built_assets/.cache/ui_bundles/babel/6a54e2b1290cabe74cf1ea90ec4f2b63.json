{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/upgrade_assistant/public/np_ready/application/components/tabs/checkup/controls.js","dependencies":[{"path":"x-pack/legacy/plugins/upgrade_assistant/public/np_ready/application/components/tabs/checkup/controls.js","mtime":1585205048635},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkNoZWNrdXBDb250cm9scyA9IHZvaWQgMDsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfaTE4biA9IHJlcXVpcmUoIkBrYm4vaTE4biIpOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfcmVhY3QyID0gcmVxdWlyZSgiQGtibi9pMThuL3JlYWN0Iik7Cgp2YXIgX3R5cGVzID0gcmVxdWlyZSgiLi4vLi4vdHlwZXMiKTsKCnZhciBfZmlsdGVyX2JhciA9IHJlcXVpcmUoIi4vZmlsdGVyX2JhciIpOwoKdmFyIF9ncm91cF9ieV9iYXIgPSByZXF1aXJlKCIuL2dyb3VwX2J5X2JhciIpOwoKdmFyIF91dGlscyA9IHJlcXVpcmUoIi4uLy4uLy4uL3V0aWxzIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgewogIHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7Cn0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7CiAgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZSIpOwp9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7CiAgdmFyIF9hcnIgPSBbXTsKICB2YXIgX24gPSB0cnVlOwogIHZhciBfZCA9IGZhbHNlOwogIHZhciBfZSA9IHVuZGVmaW5lZDsKCiAgdHJ5IHsKICAgIGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsKICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTsKCiAgICAgIGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsKICAgIH0KICB9IGNhdGNoIChlcnIpIHsKICAgIF9kID0gdHJ1ZTsKICAgIF9lID0gZXJyOwogIH0gZmluYWxseSB7CiAgICB0cnkgewogICAgICBpZiAoIV9uICYmIF9pWyJyZXR1cm4iXSAhPSBudWxsKSBfaVsicmV0dXJuIl0oKTsKICAgIH0gZmluYWxseSB7CiAgICAgIGlmIChfZCkgdGhyb3cgX2U7CiAgICB9CiAgfQoKICByZXR1cm4gX2FycjsKfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgewogIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7Cn0KCnZhciBDaGVja3VwQ29udHJvbHMgPSBmdW5jdGlvbiBDaGVja3VwQ29udHJvbHMoX3JlZikgewogIHZhciBhbGxEZXByZWNhdGlvbnMgPSBfcmVmLmFsbERlcHJlY2F0aW9ucywKICAgICAgbG9hZGluZ1N0YXRlID0gX3JlZi5sb2FkaW5nU3RhdGUsCiAgICAgIGxvYWREYXRhID0gX3JlZi5sb2FkRGF0YSwKICAgICAgY3VycmVudEZpbHRlciA9IF9yZWYuY3VycmVudEZpbHRlciwKICAgICAgb25GaWx0ZXJDaGFuZ2UgPSBfcmVmLm9uRmlsdGVyQ2hhbmdlLAogICAgICBvblNlYXJjaENoYW5nZSA9IF9yZWYub25TZWFyY2hDaGFuZ2UsCiAgICAgIGF2YWlsYWJsZUdyb3VwQnlPcHRpb25zID0gX3JlZi5hdmFpbGFibGVHcm91cEJ5T3B0aW9ucywKICAgICAgY3VycmVudEdyb3VwQnkgPSBfcmVmLmN1cnJlbnRHcm91cEJ5LAogICAgICBvbkdyb3VwQnlDaGFuZ2UgPSBfcmVmLm9uR3JvdXBCeUNoYW5nZTsKCiAgdmFyIF91c2VTdGF0ZSA9ICgwLCBfcmVhY3QudXNlU3RhdGUpKG51bGwpLAogICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSwKICAgICAgc2VhcmNoVGVybUVycm9yID0gX3VzZVN0YXRlMlswXSwKICAgICAgc2V0U2VhcmNoVGVybUVycm9yID0gX3VzZVN0YXRlMlsxXTsKCiAgdmFyIGZpbHRlckludmFsaWQgPSBCb29sZWFuKHNlYXJjaFRlcm1FcnJvcik7CiAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4R3JvdXAsIHsKICAgIGRpcmVjdGlvbjogImNvbHVtbiIsCiAgICByZXNwb25zaXZlOiBmYWxzZQogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgZ3JvdzogdHJ1ZQogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4R3JvdXAsIHsKICAgIGFsaWduSXRlbXM6ICJjZW50ZXIiLAogICAgd3JhcDogdHJ1ZSwKICAgIHJlc3BvbnNpdmU6IGZhbHNlCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmllbGRTZWFyY2gsIHsKICAgIGlzSW52YWxpZDogZmlsdGVySW52YWxpZCwKICAgICJhcmlhLWxhYmVsIjogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLnVwZ3JhZGVBc3Npc3RhbnQuY2hlY2t1cFRhYi5jb250cm9scy5zZWFyY2hCYXJQbGFjZWhvbGRlckFyaWFMYWJlbCcsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdGaWx0ZXInCiAgICB9KSwKICAgIHBsYWNlaG9sZGVyOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2sudXBncmFkZUFzc2lzdGFudC5jaGVja3VwVGFiLmNvbnRyb2xzLnNlYXJjaEJhclBsYWNlaG9sZGVyJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ0ZpbHRlcicKICAgIH0pLAogICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKGUpIHsKICAgICAgdmFyIHN0cmluZyA9IGUudGFyZ2V0LnZhbHVlOwogICAgICB2YXIgZXJyb3JNZXNzYWdlID0gKDAsIF91dGlscy52YWxpZGF0ZVJlZ0V4cFN0cmluZykoc3RyaW5nKTsKCiAgICAgIGlmIChlcnJvck1lc3NhZ2UpIHsKICAgICAgICAvLyBFbWl0IGFuIGVtcHR5IHNlYXJjaCB0ZXJtIHRvIGxpc3RlbmVycyBpZiBzZWFyY2ggdGVybSBpcyBpbnZhbGlkLgogICAgICAgIG9uU2VhcmNoQ2hhbmdlKCcnKTsKICAgICAgICBzZXRTZWFyY2hUZXJtRXJyb3IoZXJyb3JNZXNzYWdlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBvblNlYXJjaENoYW5nZShlLnRhcmdldC52YWx1ZSk7CgogICAgICAgIGlmIChzZWFyY2hUZXJtRXJyb3IpIHsKICAgICAgICAgIHNldFNlYXJjaFRlcm1FcnJvcihudWxsKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9KSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2ZpbHRlcl9iYXIuRmlsdGVyQmFyLCB7CiAgICBhbGxEZXByZWNhdGlvbnM6IGFsbERlcHJlY2F0aW9ucywKICAgIGN1cnJlbnRGaWx0ZXI6IGN1cnJlbnRGaWx0ZXIsCiAgICBvbkZpbHRlckNoYW5nZTogb25GaWx0ZXJDaGFuZ2UKICB9KSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZ3JvdXBfYnlfYmFyLkdyb3VwQnlCYXIsIHsKICAgIGF2YWlsYWJsZUdyb3VwQnlPcHRpb25zOiBhdmFpbGFibGVHcm91cEJ5T3B0aW9ucywKICAgIGN1cnJlbnRHcm91cEJ5OiBjdXJyZW50R3JvdXBCeSwKICAgIG9uR3JvdXBCeUNoYW5nZTogb25Hcm91cEJ5Q2hhbmdlCiAgfSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgZ3JvdzogZmFsc2UKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQnV0dG9uLCB7CiAgICBmaWxsOiB0cnVlLAogICAgb25DbGljazogbG9hZERhdGEsCiAgICBpY29uVHlwZTogInJlZnJlc2giLAogICAgaXNMb2FkaW5nOiBsb2FkaW5nU3RhdGUgPT09IF90eXBlcy5Mb2FkaW5nU3RhdGUuTG9hZGluZwogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Mi5Gb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICBpZDogInhwYWNrLnVwZ3JhZGVBc3Npc3RhbnQuY2hlY2t1cFRhYi5jb250cm9scy5yZWZyZXNoQnV0dG9uTGFiZWwiLAogICAgZGVmYXVsdE1lc3NhZ2U6ICJSZWZyZXNoIgogIH0pKSkpKSwgZmlsdGVySW52YWxpZCAmJiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEl0ZW0sIHsKICAgIGdyb3c6IGZhbHNlCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUNhbGxPdXQsIHsKICAgIGNvbG9yOiAiZGFuZ2VyIiwKICAgIHRpdGxlOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2sudXBncmFkZUFzc2lzdGFudC5jaGVja3VwVGFiLmNvbnRyb2xzLmZpbHRlckVycm9yTWVzc2FnZUxhYmVsJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ0ZpbHRlciBpbnZhbGlkOiB7c2VhcmNoVGVybUVycm9yfScsCiAgICAgIHZhbHVlczogewogICAgICAgIHNlYXJjaFRlcm1FcnJvcjogc2VhcmNoVGVybUVycm9yCiAgICAgIH0KICAgIH0pLAogICAgaWNvblR5cGU6ICJmYWNlU2FkIgogIH0pKSk7Cn07CgpleHBvcnRzLkNoZWNrdXBDb250cm9scyA9IENoZWNrdXBDb250cm9sczs="},null]}