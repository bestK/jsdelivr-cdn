{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/apm/public/components/app/Main/route_config/index.js","dependencies":[{"path":"x-pack/legacy/plugins/apm/public/components/app/Main/route_config/index.js","mtime":1585205042558},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnJvdXRlcyA9IHZvaWQgMDsKCnZhciBfaTE4biA9IHJlcXVpcmUoIkBrYm4vaTE4biIpOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX3JlYWN0Um91dGVyRG9tID0gcmVxdWlyZSgicmVhY3Qtcm91dGVyLWRvbSIpOwoKdmFyIF9zZXJ2aWNlX25vZGVzID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vLi4vY29tbW9uL3NlcnZpY2Vfbm9kZXMiKTsKCnZhciBfRXJyb3JHcm91cERldGFpbHMgPSByZXF1aXJlKCIuLi8uLi9FcnJvckdyb3VwRGV0YWlscyIpOwoKdmFyIF9TZXJ2aWNlRGV0YWlscyA9IHJlcXVpcmUoIi4uLy4uL1NlcnZpY2VEZXRhaWxzIik7Cgp2YXIgX1RyYW5zYWN0aW9uRGV0YWlscyA9IHJlcXVpcmUoIi4uLy4uL1RyYW5zYWN0aW9uRGV0YWlscyIpOwoKdmFyIF9Ib21lID0gcmVxdWlyZSgiLi4vLi4vSG9tZSIpOwoKdmFyIF9yb3V0ZV9uYW1lcyA9IHJlcXVpcmUoIi4vcm91dGVfbmFtZXMiKTsKCnZhciBfU2V0dGluZ3MgPSByZXF1aXJlKCIuLi8uLi9TZXR0aW5ncyIpOwoKdmFyIF9BZ2VudENvbmZpZ3VyYXRpb25zID0gcmVxdWlyZSgiLi4vLi4vU2V0dGluZ3MvQWdlbnRDb25maWd1cmF0aW9ucyIpOwoKdmFyIF9BcG1JbmRpY2VzID0gcmVxdWlyZSgiLi4vLi4vU2V0dGluZ3MvQXBtSW5kaWNlcyIpOwoKdmFyIF91cmxfaGVscGVycyA9IHJlcXVpcmUoIi4uLy4uLy4uL3NoYXJlZC9MaW5rcy91cmxfaGVscGVycyIpOwoKdmFyIF9TZXJ2aWNlTm9kZU1ldHJpY3MgPSByZXF1aXJlKCIuLi8uLi9TZXJ2aWNlTm9kZU1ldHJpY3MiKTsKCnZhciBfcmVzb2x2ZVVybFBhcmFtczIgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi9jb250ZXh0L1VybFBhcmFtc0NvbnRleHQvcmVzb2x2ZVVybFBhcmFtcyIpOwoKdmFyIF9pMThuMiA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uLy4uL2NvbW1vbi9pMThuIik7Cgp2YXIgX1RyYWNlTGluayA9IHJlcXVpcmUoIi4uLy4uL1RyYWNlTGluayIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7CiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOwoKICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgewogICAgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7CiAgICBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7CiAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOwogICAgfSk7CiAgICBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7CiAgfQoKICByZXR1cm4ga2V5czsKfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsKICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgewogICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307CgogICAgaWYgKGkgJSAyKSB7CiAgICAgIG93bktleXMoc291cmNlLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsKICAgICAgfSk7CiAgICB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7CiAgICB9IGVsc2UgewogICAgICBvd25LZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7CiAgICAgIH0pOwogICAgfQogIH0KCiAgcmV0dXJuIHRhcmdldDsKfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgewogIGlmIChrZXkgaW4gb2JqKSB7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsKICAgICAgdmFsdWU6IHZhbHVlLAogICAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgIHdyaXRhYmxlOiB0cnVlCiAgICB9KTsKICB9IGVsc2UgewogICAgb2JqW2tleV0gPSB2YWx1ZTsKICB9CgogIHJldHVybiBvYmo7Cn0KCnZhciBtZXRyaWNzQnJlYWRjcnVtYiA9IF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5hcG0uYnJlYWRjcnVtYi5tZXRyaWNzVGl0bGUnLCB7CiAgZGVmYXVsdE1lc3NhZ2U6ICdNZXRyaWNzJwp9KTsKCnZhciByZW5kZXJBc1JlZGlyZWN0VG8gPSBmdW5jdGlvbiByZW5kZXJBc1JlZGlyZWN0VG8odG8pIHsKICByZXR1cm4gZnVuY3Rpb24gKF9yZWYpIHsKICAgIHZhciBsb2NhdGlvbiA9IF9yZWYubG9jYXRpb247CiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3RSb3V0ZXJEb20uUmVkaXJlY3QsIHsKICAgICAgdG86IF9vYmplY3RTcHJlYWQoe30sIGxvY2F0aW9uLCB7CiAgICAgICAgcGF0aG5hbWU6IHRvCiAgICAgIH0pCiAgICB9KTsKICB9Owp9OwoKdmFyIHJvdXRlcyA9IFt7CiAgZXhhY3Q6IHRydWUsCiAgcGF0aDogJy8nLAogIHJlbmRlcjogcmVuZGVyQXNSZWRpcmVjdFRvKCcvc2VydmljZXMnKSwKICBicmVhZGNydW1iOiAnQVBNJywKICBuYW1lOiBfcm91dGVfbmFtZXMuUm91dGVOYW1lLkhPTUUKfSwgewogIGV4YWN0OiB0cnVlLAogIHBhdGg6ICcvc2VydmljZXMnLAogIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX0hvbWUuSG9tZSwgewogICAgICB0YWI6ICJzZXJ2aWNlcyIKICAgIH0pOwogIH0sCiAgYnJlYWRjcnVtYjogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLmFwbS5icmVhZGNydW1iLnNlcnZpY2VzVGl0bGUnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ1NlcnZpY2VzJwogIH0pLAogIG5hbWU6IF9yb3V0ZV9uYW1lcy5Sb3V0ZU5hbWUuU0VSVklDRVMKfSwgewogIGV4YWN0OiB0cnVlLAogIHBhdGg6ICcvdHJhY2VzJywKICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9Ib21lLkhvbWUsIHsKICAgICAgdGFiOiAidHJhY2VzIgogICAgfSk7CiAgfSwKICBicmVhZGNydW1iOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2suYXBtLmJyZWFkY3J1bWIudHJhY2VzVGl0bGUnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ1RyYWNlcycKICB9KSwKICBuYW1lOiBfcm91dGVfbmFtZXMuUm91dGVOYW1lLlRSQUNFUwp9LCB7CiAgZXhhY3Q6IHRydWUsCiAgcGF0aDogJy9zZXR0aW5ncycsCiAgcmVuZGVyOiByZW5kZXJBc1JlZGlyZWN0VG8oJy9zZXR0aW5ncy9hZ2VudC1jb25maWd1cmF0aW9uJyksCiAgYnJlYWRjcnVtYjogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLmFwbS5icmVhZGNydW1iLmxpc3RTZXR0aW5nc1RpdGxlJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdTZXR0aW5ncycKICB9KSwKICBuYW1lOiBfcm91dGVfbmFtZXMuUm91dGVOYW1lLlNFVFRJTkdTCn0sIHsKICBleGFjdDogdHJ1ZSwKICBwYXRoOiAnL3NldHRpbmdzL2FwbS1pbmRpY2VzJywKICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9TZXR0aW5ncy5TZXR0aW5ncywgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfQXBtSW5kaWNlcy5BcG1JbmRpY2VzLCBudWxsKSk7CiAgfSwKICBicmVhZGNydW1iOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2suYXBtLmJyZWFkY3J1bWIuc2V0dGluZ3MuaW5kaWNlc1RpdGxlJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdJbmRpY2VzJwogIH0pLAogIG5hbWU6IF9yb3V0ZV9uYW1lcy5Sb3V0ZU5hbWUuSU5ESUNFUwp9LCB7CiAgZXhhY3Q6IHRydWUsCiAgcGF0aDogJy9zZXR0aW5ncy9hZ2VudC1jb25maWd1cmF0aW9uJywKICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9TZXR0aW5ncy5TZXR0aW5ncywgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfQWdlbnRDb25maWd1cmF0aW9ucy5BZ2VudENvbmZpZ3VyYXRpb25zLCBudWxsKSk7CiAgfSwKICBicmVhZGNydW1iOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2suYXBtLmJyZWFkY3J1bWIuc2V0dGluZ3MuYWdlbnRDb25maWd1cmF0aW9uVGl0bGUnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ0FnZW50IENvbmZpZ3VyYXRpb24nCiAgfSksCiAgbmFtZTogX3JvdXRlX25hbWVzLlJvdXRlTmFtZS5BR0VOVF9DT05GSUdVUkFUSU9OCn0sIHsKICBleGFjdDogdHJ1ZSwKICBwYXRoOiAnL3NlcnZpY2VzLzpzZXJ2aWNlTmFtZScsCiAgYnJlYWRjcnVtYjogZnVuY3Rpb24gYnJlYWRjcnVtYihfcmVmMikgewogICAgdmFyIG1hdGNoID0gX3JlZjIubWF0Y2g7CiAgICByZXR1cm4gbWF0Y2gucGFyYW1zLnNlcnZpY2VOYW1lOwogIH0sCiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHsKICAgIHJldHVybiByZW5kZXJBc1JlZGlyZWN0VG8oIi9zZXJ2aWNlcy8iLmNvbmNhdChwcm9wcy5tYXRjaC5wYXJhbXMuc2VydmljZU5hbWUsICIvdHJhbnNhY3Rpb25zIikpKHByb3BzKTsKICB9LAogIG5hbWU6IF9yb3V0ZV9uYW1lcy5Sb3V0ZU5hbWUuU0VSVklDRQp9LCAvLyBlcnJvcnMKewogIGV4YWN0OiB0cnVlLAogIHBhdGg6ICcvc2VydmljZXMvOnNlcnZpY2VOYW1lL2Vycm9ycy86Z3JvdXBJZCcsCiAgY29tcG9uZW50OiBfRXJyb3JHcm91cERldGFpbHMuRXJyb3JHcm91cERldGFpbHMsCiAgYnJlYWRjcnVtYjogZnVuY3Rpb24gYnJlYWRjcnVtYihfcmVmMykgewogICAgdmFyIG1hdGNoID0gX3JlZjMubWF0Y2g7CiAgICByZXR1cm4gbWF0Y2gucGFyYW1zLmdyb3VwSWQ7CiAgfSwKICBuYW1lOiBfcm91dGVfbmFtZXMuUm91dGVOYW1lLkVSUk9SCn0sIHsKICBleGFjdDogdHJ1ZSwKICBwYXRoOiAnL3NlcnZpY2VzLzpzZXJ2aWNlTmFtZS9lcnJvcnMnLAogIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX1NlcnZpY2VEZXRhaWxzLlNlcnZpY2VEZXRhaWxzLCB7CiAgICAgIHRhYjogImVycm9ycyIKICAgIH0pOwogIH0sCiAgYnJlYWRjcnVtYjogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLmFwbS5icmVhZGNydW1iLmVycm9yc1RpdGxlJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdFcnJvcnMnCiAgfSksCiAgbmFtZTogX3JvdXRlX25hbWVzLlJvdXRlTmFtZS5FUlJPUlMKfSwgLy8gdHJhbnNhY3Rpb25zCnsKICBleGFjdDogdHJ1ZSwKICBwYXRoOiAnL3NlcnZpY2VzLzpzZXJ2aWNlTmFtZS90cmFuc2FjdGlvbnMnLAogIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX1NlcnZpY2VEZXRhaWxzLlNlcnZpY2VEZXRhaWxzLCB7CiAgICAgIHRhYjogInRyYW5zYWN0aW9ucyIKICAgIH0pOwogIH0sCiAgYnJlYWRjcnVtYjogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLmFwbS5icmVhZGNydW1iLnRyYW5zYWN0aW9uc1RpdGxlJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdUcmFuc2FjdGlvbnMnCiAgfSksCiAgbmFtZTogX3JvdXRlX25hbWVzLlJvdXRlTmFtZS5UUkFOU0FDVElPTlMKfSwgLy8gbWV0cmljcwp7CiAgZXhhY3Q6IHRydWUsCiAgcGF0aDogJy9zZXJ2aWNlcy86c2VydmljZU5hbWUvbWV0cmljcycsCiAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfU2VydmljZURldGFpbHMuU2VydmljZURldGFpbHMsIHsKICAgICAgdGFiOiAibWV0cmljcyIKICAgIH0pOwogIH0sCiAgYnJlYWRjcnVtYjogbWV0cmljc0JyZWFkY3J1bWIsCiAgbmFtZTogX3JvdXRlX25hbWVzLlJvdXRlTmFtZS5NRVRSSUNTCn0sIC8vIHNlcnZpY2Ugbm9kZXMsIG9ubHkgZW5hYmxlZCBmb3IgamF2YSBhZ2VudHMgZm9yIG5vdwp7CiAgZXhhY3Q6IHRydWUsCiAgcGF0aDogJy9zZXJ2aWNlcy86c2VydmljZU5hbWUvbm9kZXMnLAogIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX1NlcnZpY2VEZXRhaWxzLlNlcnZpY2VEZXRhaWxzLCB7CiAgICAgIHRhYjogIm5vZGVzIgogICAgfSk7CiAgfSwKICBicmVhZGNydW1iOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2suYXBtLmJyZWFkY3J1bWIubm9kZXNUaXRsZScsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnSlZNcycKICB9KSwKICBuYW1lOiBfcm91dGVfbmFtZXMuUm91dGVOYW1lLlNFUlZJQ0VfTk9ERVMKfSwgLy8gbm9kZSBtZXRyaWNzCnsKICBleGFjdDogdHJ1ZSwKICBwYXRoOiAnL3NlcnZpY2VzLzpzZXJ2aWNlTmFtZS9ub2Rlcy86c2VydmljZU5vZGVOYW1lL21ldHJpY3MnLAogIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX1NlcnZpY2VOb2RlTWV0cmljcy5TZXJ2aWNlTm9kZU1ldHJpY3MsIG51bGwpOwogIH0sCiAgYnJlYWRjcnVtYjogZnVuY3Rpb24gYnJlYWRjcnVtYihfcmVmNCkgewogICAgdmFyIGxvY2F0aW9uID0gX3JlZjQubG9jYXRpb247CgogICAgdmFyIF9yZXNvbHZlVXJsUGFyYW1zID0gKDAsIF9yZXNvbHZlVXJsUGFyYW1zMi5yZXNvbHZlVXJsUGFyYW1zKShsb2NhdGlvbiwge30pLAogICAgICAgIHNlcnZpY2VOb2RlTmFtZSA9IF9yZXNvbHZlVXJsUGFyYW1zLnNlcnZpY2VOb2RlTmFtZTsKCiAgICBpZiAoc2VydmljZU5vZGVOYW1lID09PSBfc2VydmljZV9ub2Rlcy5TRVJWSUNFX05PREVfTkFNRV9NSVNTSU5HKSB7CiAgICAgIHJldHVybiBfaTE4bjIuVU5JREVOVElGSUVEX1NFUlZJQ0VfTk9ERVNfTEFCRUw7CiAgICB9CgogICAgcmV0dXJuIHNlcnZpY2VOb2RlTmFtZSB8fCAnJzsKICB9LAogIG5hbWU6IF9yb3V0ZV9uYW1lcy5Sb3V0ZU5hbWUuU0VSVklDRV9OT0RFX01FVFJJQ1MKfSwgewogIGV4YWN0OiB0cnVlLAogIHBhdGg6ICcvc2VydmljZXMvOnNlcnZpY2VOYW1lL3RyYW5zYWN0aW9ucy92aWV3JywKICBjb21wb25lbnQ6IF9UcmFuc2FjdGlvbkRldGFpbHMuVHJhbnNhY3Rpb25EZXRhaWxzLAogIGJyZWFkY3J1bWI6IGZ1bmN0aW9uIGJyZWFkY3J1bWIoX3JlZjUpIHsKICAgIHZhciBsb2NhdGlvbiA9IF9yZWY1LmxvY2F0aW9uOwogICAgdmFyIHF1ZXJ5ID0gKDAsIF91cmxfaGVscGVycy50b1F1ZXJ5KShsb2NhdGlvbi5zZWFyY2gpOwogICAgcmV0dXJuIHF1ZXJ5LnRyYW5zYWN0aW9uTmFtZTsKICB9LAogIG5hbWU6IF9yb3V0ZV9uYW1lcy5Sb3V0ZU5hbWUuVFJBTlNBQ1RJT05fTkFNRQp9LCB7CiAgZXhhY3Q6IHRydWUsCiAgcGF0aDogJy9saW5rLXRvL3RyYWNlLzp0cmFjZUlkJywKICBjb21wb25lbnQ6IF9UcmFjZUxpbmsuVHJhY2VMaW5rLAogIGJyZWFkY3J1bWI6IG51bGwsCiAgbmFtZTogX3JvdXRlX25hbWVzLlJvdXRlTmFtZS5MSU5LX1RPX1RSQUNFCn0sIHsKICBleGFjdDogdHJ1ZSwKICBwYXRoOiAnL3NlcnZpY2UtbWFwJywKICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9Ib21lLkhvbWUsIHsKICAgICAgdGFiOiAic2VydmljZS1tYXAiCiAgICB9KTsKICB9LAogIGJyZWFkY3J1bWI6IF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5hcG0uYnJlYWRjcnVtYi5zZXJ2aWNlTWFwVGl0bGUnLCB7CiAgICBkZWZhdWx0TWVzc2FnZTogJ1NlcnZpY2UgTWFwJwogIH0pLAogIG5hbWU6IF9yb3V0ZV9uYW1lcy5Sb3V0ZU5hbWUuU0VSVklDRV9NQVAKfSwgewogIGV4YWN0OiB0cnVlLAogIHBhdGg6ICcvc2VydmljZXMvOnNlcnZpY2VOYW1lL3NlcnZpY2UtbWFwJywKICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9TZXJ2aWNlRGV0YWlscy5TZXJ2aWNlRGV0YWlscywgewogICAgICB0YWI6ICJzZXJ2aWNlLW1hcCIKICAgIH0pOwogIH0sCiAgYnJlYWRjcnVtYjogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLmFwbS5icmVhZGNydW1iLnNlcnZpY2VNYXBUaXRsZScsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnU2VydmljZSBNYXAnCiAgfSksCiAgbmFtZTogX3JvdXRlX25hbWVzLlJvdXRlTmFtZS5TSU5HTEVfU0VSVklDRV9NQVAKfV07CmV4cG9ydHMucm91dGVzID0gcm91dGVzOw=="},null]}