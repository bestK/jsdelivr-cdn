{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/vis_type_vega/public/components/vega_vis_editor.js","dependencies":[{"path":"src/legacy/core_plugins/vis_type_vega/public/components/vega_vis_editor.js","mtime":1585205040483},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlZlZ2FWaXNFZGl0b3IgPSBWZWdhVmlzRWRpdG9yOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfanNvblN0cmluZ2lmeVByZXR0eUNvbXBhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImpzb24tc3RyaW5naWZ5LXByZXR0eS1jb21wYWN0IikpOwoKdmFyIF9oanNvbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiaGpzb24iKSk7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCnZhciBfbm90aWZ5ID0gcmVxdWlyZSgidWkvbm90aWZ5Iik7Cgp2YXIgX3ZlZ2FfaGVscF9tZW51ID0gcmVxdWlyZSgiLi92ZWdhX2hlbHBfbWVudSIpOwoKdmFyIF92ZWdhX2FjdGlvbnNfbWVudSA9IHJlcXVpcmUoIi4vdmVnYV9hY3Rpb25zX21lbnUiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQovKgogKiBMaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lIG9yIG1vcmUgY29udHJpYnV0b3IKICogbGljZW5zZSBhZ3JlZW1lbnRzLiBTZWUgdGhlIE5PVElDRSBmaWxlIGRpc3RyaWJ1dGVkIHdpdGgKICogdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQKICogb3duZXJzaGlwLiBFbGFzdGljc2VhcmNoIEIuVi4gbGljZW5zZXMgdGhpcyBmaWxlIHRvIHlvdSB1bmRlcgogKiB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsgeW91IG1heQogKiBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywKICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4KICogIkFTIElTIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZCiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZQogKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zCiAqIHVuZGVyIHRoZSBMaWNlbnNlLgogKi8KLy8gQHRzLWlnbm9yZQoKCnZhciBhY2VPcHRpb25zID0gewogIG1heExpbmVzOiBJbmZpbml0eSwKICBoaWdobGlnaHRBY3RpdmVMaW5lOiBmYWxzZSwKICBzaG93UHJpbnRNYXJnaW46IGZhbHNlLAogIHRhYlNpemU6IDIsCiAgdXNlU29mdFRhYnM6IHRydWUsCiAgd3JhcDogdHJ1ZQp9Owp2YXIgaGpzb25TdHJpbmdpZnlPcHRpb25zID0gewogIGJyYWNlc1NhbWVMaW5lOiB0cnVlLAogIGtlZXBXc2M6IHRydWUKfTsKCmZ1bmN0aW9uIGZvcm1hdCh2YWx1ZSwgc3RyaW5naWZ5LCBvcHRpb25zKSB7CiAgdHJ5IHsKICAgIHZhciBzcGVjID0gX2hqc29uLmRlZmF1bHQucGFyc2UodmFsdWUsIHsKICAgICAgbGVnYWN5Um9vdDogZmFsc2UsCiAgICAgIGtlZXBXc2M6IHRydWUKICAgIH0pOwoKICAgIHJldHVybiBzdHJpbmdpZnkoc3BlYywgb3B0aW9ucyk7CiAgfSBjYXRjaCAoZXJyKSB7CiAgICAvLyBUaGlzIGlzIGEgY29tbW9uIGNhc2UgLSB1c2VyIHRyaWVzIHRvIGZvcm1hdCBhbiBpbnZhbGlkIEhKU09OIHRleHQKICAgIF9ub3RpZnkudG9hc3ROb3RpZmljYXRpb25zLmFkZEVycm9yKGVyciwgewogICAgICB0aXRsZTogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3Zpc1R5cGVWZWdhLmVkaXRvci5mb3JtYXRFcnJvcicsIHsKICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ0Vycm9yIGZvcm1hdHRpbmcgc3BlYycKICAgICAgfSkKICAgIH0pOwoKICAgIHJldHVybiB2YWx1ZTsKICB9Cn0KCmZ1bmN0aW9uIFZlZ2FWaXNFZGl0b3IoX3JlZikgewogIHZhciBzdGF0ZVBhcmFtcyA9IF9yZWYuc3RhdGVQYXJhbXMsCiAgICAgIHNldFZhbHVlID0gX3JlZi5zZXRWYWx1ZTsKICB2YXIgb25DaGFuZ2UgPSAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKShmdW5jdGlvbiAodmFsdWUpIHsKICAgIHNldFZhbHVlKCdzcGVjJywgdmFsdWUpOwogIH0sIFtzZXRWYWx1ZV0pOwogIHZhciBmb3JtYXRKc29uID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHNldFZhbHVlKCdzcGVjJywgZm9ybWF0KHN0YXRlUGFyYW1zLnNwZWMsIF9qc29uU3RyaW5naWZ5UHJldHR5Q29tcGFjdC5kZWZhdWx0KSk7CiAgfSwgW3NldFZhbHVlLCBzdGF0ZVBhcmFtcy5zcGVjXSk7CiAgdmFyIGZvcm1hdEhKc29uID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHNldFZhbHVlKCdzcGVjJywgZm9ybWF0KHN0YXRlUGFyYW1zLnNwZWMsIF9oanNvbi5kZWZhdWx0LnN0cmluZ2lmeSwgaGpzb25TdHJpbmdpZnlPcHRpb25zKSk7CiAgfSwgW3NldFZhbHVlLCBzdGF0ZVBhcmFtcy5zcGVjXSk7CiAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIGNsYXNzTmFtZTogInZnYUVkaXRvciIKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQ29kZUVkaXRvciwgewogICAgImRhdGEtdGVzdC1zdWJqIjogInZlZ2EtZWRpdG9yIiwKICAgIG1vZGU6ICJoanNvbiIsCiAgICB0aGVtZTogInRleHRtYXRlIiwKICAgIHdpZHRoOiAiMTAwJSIsCiAgICBoZWlnaHQ6ICJhdXRvIiwKICAgIG9uQ2hhbmdlOiBvbkNoYW5nZSwKICAgIHZhbHVlOiBzdGF0ZVBhcmFtcy5zcGVjLAogICAgc2V0T3B0aW9uczogYWNlT3B0aW9ucwogIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBjbGFzc05hbWU6ICJ2Z2FFZGl0b3JfX2FjZUVkaXRvckFjdGlvbnMiCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfdmVnYV9oZWxwX21lbnUuVmVnYUhlbHBNZW51LCBudWxsKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfdmVnYV9hY3Rpb25zX21lbnUuVmVnYUFjdGlvbnNNZW51LCB7CiAgICBmb3JtYXRISnNvbjogZm9ybWF0SEpzb24sCiAgICBmb3JtYXRKc29uOiBmb3JtYXRKc29uCiAgfSkpKTsKfQ=="},null]}