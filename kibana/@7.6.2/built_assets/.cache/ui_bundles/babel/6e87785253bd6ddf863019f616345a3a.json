{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/remote_clusters/public/app/store/actions/add_cluster.js","dependencies":[{"path":"x-pack/legacy/plugins/remote_clusters/public/app/store/actions/add_cluster.js","mtime":1585205046656},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmNsZWFyQWRkQ2x1c3RlckVycm9ycyA9IGV4cG9ydHMuYWRkQ2x1c3RlciA9IHZvaWQgMDsKCnZhciBfaTE4biA9IHJlcXVpcmUoIkBrYm4vaTE4biIpOwoKdmFyIF9jb25zdGFudHMgPSByZXF1aXJlKCIuLi8uLi9jb25zdGFudHMiKTsKCnZhciBfc2VydmljZXMgPSByZXF1aXJlKCIuLi8uLi9zZXJ2aWNlcyIpOwoKdmFyIF9ub3RpZmljYXRpb24gPSByZXF1aXJlKCIuLi8uLi9zZXJ2aWNlcy9ub3RpZmljYXRpb24iKTsKCnZhciBfYWN0aW9uX3R5cGVzID0gcmVxdWlyZSgiLi4vYWN0aW9uX3R5cGVzIik7CgovKgogKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lCiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBMaWNlbnNlZCB1bmRlciB0aGUgRWxhc3RpYyBMaWNlbnNlOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS4KICovCnZhciBhZGRDbHVzdGVyID0gZnVuY3Rpb24gYWRkQ2x1c3RlcihjbHVzdGVyKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIF9jYWxsZWUoZGlzcGF0Y2gpIHsKICAgIHZhciBzdGF0dXNDb2RlLCBkYXRhLCBfZ2V0Um91dGVyLCBoaXN0b3J5LCBzZWFyY2gsIF9leHRyYWN0UXVlcnlQYXJhbXMsIHJlZGlyZWN0VXJsLCBkZWNvZGVkUmVkaXJlY3Q7CgogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgZGlzcGF0Y2goewogICAgICAgICAgICAgIHR5cGU6IF9hY3Rpb25fdHlwZXMuQUREX0NMVVNURVJfU1RBUlQKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcChQcm9taXNlLmFsbChbKDAsIF9zZXJ2aWNlcy5hZGRDbHVzdGVyKShjbHVzdGVyKSwgLy8gV2FpdCBhdCBsZWFzdCBoYWxmIGEgc2Vjb25kIHRvIGF2b2lkIGEgd2VpcmQgZmxpY2tlciBvZiB0aGUgc2F2aW5nIGZlZWRiYWNrLgogICAgICAgICAgICBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgICAgICAgIHJldHVybiBzZXRUaW1lb3V0KHJlc29sdmUsIDUwMCk7CiAgICAgICAgICAgIH0pXSkpOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE1OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA2OwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwoKICAgICAgICAgICAgaWYgKCFfY29udGV4dC50MCkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgc3RhdHVzQ29kZSA9IF9jb250ZXh0LnQwLnN0YXR1c0NvZGUsIGRhdGEgPSBfY29udGV4dC50MC5kYXRhOyAvLyBFeHBlY3QgYW4gZXJyb3IgaW4gdGhlIHNoYXBlIHByb3ZpZGVkIGJ5IEFuZ3VsYXIncyAkaHR0cCBzZXJ2aWNlLgoKICAgICAgICAgICAgaWYgKCFkYXRhKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoISgoc3RhdHVzQ29kZSB8fCBkYXRhICYmIGRhdGEuc3RhdHVzQ29kZSkgPT09IDQwOSkpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGRpc3BhdGNoKHsKICAgICAgICAgICAgICB0eXBlOiBfYWN0aW9uX3R5cGVzLkFERF9DTFVTVEVSX0ZBSUxVUkUsCiAgICAgICAgICAgICAgcGF5bG9hZDogewogICAgICAgICAgICAgICAgZXJyb3I6IHsKICAgICAgICAgICAgICAgICAgbWVzc2FnZTogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLnJlbW90ZUNsdXN0ZXJzLmFkZEFjdGlvbi5jbHVzdGVyTmFtZUFscmVhZHlFeGlzdHNFcnJvck1lc3NhZ2UnLCB7CiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJBIGNsdXN0ZXIgd2l0aCB0aGUgbmFtZSAne2NsdXN0ZXJOYW1lfScgYWxyZWFkeSBleGlzdHMuIiwKICAgICAgICAgICAgICAgICAgICB2YWx1ZXM6IHsKICAgICAgICAgICAgICAgICAgICAgIGNsdXN0ZXJOYW1lOiBjbHVzdGVyLm5hbWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KSk7CgogICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgZGlzcGF0Y2goewogICAgICAgICAgICAgIHR5cGU6IF9hY3Rpb25fdHlwZXMuQUREX0NMVVNURVJfRkFJTFVSRSwKICAgICAgICAgICAgICBwYXlsb2FkOiB7CiAgICAgICAgICAgICAgICBlcnJvcjogewogICAgICAgICAgICAgICAgICBtZXNzYWdlOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2sucmVtb3RlQ2x1c3RlcnMuYWRkQWN0aW9uLmZhaWxlZERlZmF1bHRFcnJvck1lc3NhZ2UnLCB7CiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdSZXF1ZXN0IGZhaWxlZCB3aXRoIGEge3N0YXR1c0NvZGV9IGVycm9yLiB7bWVzc2FnZX0nLAogICAgICAgICAgICAgICAgICAgIHZhbHVlczogewogICAgICAgICAgICAgICAgICAgICAgc3RhdHVzQ29kZTogc3RhdHVzQ29kZSwKICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGRhdGEubWVzc2FnZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgIGNhdXNlOiBkYXRhLmNhdXNlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KSk7CgogICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgKDAsIF9ub3RpZmljYXRpb24uZmF0YWxFcnJvcikoX2NvbnRleHQudDAsIF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5yZW1vdGVDbHVzdGVycy5hZGRBY3Rpb24uZXJyb3JUaXRsZScsIHsKICAgICAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ0Vycm9yIGFkZGluZyBjbHVzdGVyJwogICAgICAgICAgICB9KSkpOwoKICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgIGRpc3BhdGNoKHsKICAgICAgICAgICAgICB0eXBlOiBfYWN0aW9uX3R5cGVzLkFERF9DTFVTVEVSX1NVQ0NFU1MKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIF9nZXRSb3V0ZXIgPSAoMCwgX3NlcnZpY2VzLmdldFJvdXRlcikoKSwgaGlzdG9yeSA9IF9nZXRSb3V0ZXIuaGlzdG9yeSwgc2VhcmNoID0gX2dldFJvdXRlci5yb3V0ZS5sb2NhdGlvbi5zZWFyY2g7CiAgICAgICAgICAgIF9leHRyYWN0UXVlcnlQYXJhbXMgPSAoMCwgX3NlcnZpY2VzLmV4dHJhY3RRdWVyeVBhcmFtcykoc2VhcmNoKSwgcmVkaXJlY3RVcmwgPSBfZXh0cmFjdFF1ZXJ5UGFyYW1zLnJlZGlyZWN0OwoKICAgICAgICAgICAgaWYgKHJlZGlyZWN0VXJsKSB7CiAgICAgICAgICAgICAgLy8gQSB0b2FzdCBpcyBvbmx5IG5lZWRlZCBpZiB3ZSdyZSBsZWF2aW5nIHRoZSBhcHAuCiAgICAgICAgICAgICAgX25vdGlmaWNhdGlvbi50b2FzdHMuYWRkU3VjY2VzcyhfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2sucmVtb3RlQ2x1c3RlcnMuYWRkQWN0aW9uLnN1Y2Nlc3NUaXRsZScsIHsKICAgICAgICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAiQWRkZWQgcmVtb3RlIGNsdXN0ZXIgJ3tuYW1lfSciLAogICAgICAgICAgICAgICAgdmFsdWVzOiB7CiAgICAgICAgICAgICAgICAgIG5hbWU6IGNsdXN0ZXIubmFtZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgZGVjb2RlZFJlZGlyZWN0ID0gZGVjb2RlVVJJQ29tcG9uZW50KHJlZGlyZWN0VXJsKTsKICAgICAgICAgICAgICAoMCwgX3NlcnZpY2VzLnJlZGlyZWN0KSgiIi5jb25jYXQoZGVjb2RlZFJlZGlyZWN0LCAiP2NsdXN0ZXI9IikuY29uY2F0KGNsdXN0ZXIubmFtZSkpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vIFRoaXMgd2lsbCBvcGVuIHRoZSBuZXcgam9iIGluIHRoZSBkZXRhaWwgcGFuZWwuIE5vdGUgdGhhdCB3ZSdyZSAqbm90KiBzaG93aW5nIGEgc3VjY2VzcyB0b2FzdAogICAgICAgICAgICAgIC8vIGhlcmUsIGJlY2F1c2UgaXQgd291bGQgcGFydGlhbGx5IG9ic2N1cmUgdGhlIGRldGFpbCBwYW5lbC4KICAgICAgICAgICAgICBoaXN0b3J5LnB1c2goewogICAgICAgICAgICAgICAgcGF0aG5hbWU6ICIiLmNvbmNhdChfY29uc3RhbnRzLkNSVURfQVBQX0JBU0VfUEFUSCwgIi9saXN0IiksCiAgICAgICAgICAgICAgICBzZWFyY2g6ICI/Y2x1c3Rlcj0iLmNvbmNhdChjbHVzdGVyLm5hbWUpCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICBjYXNlIDE5OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIG51bGwsIG51bGwsIFtbMSwgNl1dKTsKICB9Owp9OwoKZXhwb3J0cy5hZGRDbHVzdGVyID0gYWRkQ2x1c3RlcjsKCnZhciBjbGVhckFkZENsdXN0ZXJFcnJvcnMgPSBmdW5jdGlvbiBjbGVhckFkZENsdXN0ZXJFcnJvcnMoKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChkaXNwYXRjaCkgewogICAgZGlzcGF0Y2goewogICAgICB0eXBlOiBfYWN0aW9uX3R5cGVzLkNMRUFSX0FERF9DTFVTVEVSX0VSUk9SUwogICAgfSk7CiAgfTsKfTsKCmV4cG9ydHMuY2xlYXJBZGRDbHVzdGVyRXJyb3JzID0gY2xlYXJBZGRDbHVzdGVyRXJyb3JzOw=="},null]}