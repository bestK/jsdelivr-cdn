{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/canvas/canvas_plugin_src/renderers/embeddable/embeddable.js","dependencies":[{"path":"x-pack/legacy/plugins/canvas/canvas_plugin_src/renderers/embeddable/embeddable.js","mtime":1585205043418},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmVtYmVkZGFibGUgPSB2b2lkIDA7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfcmVhY3REb20gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInJlYWN0LWRvbSIpKTsKCnZhciBfaTE4biA9IHJlcXVpcmUoInVpL2kxOG4iKTsKCnZhciBfbmV3X3BsYXRmb3JtID0gcmVxdWlyZSgidWkvbmV3X3BsYXRmb3JtIik7Cgp2YXIgX3B1YmxpYyA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9wbHVnaW5zL2VtYmVkZGFibGUvcHVibGljIik7Cgp2YXIgX2xlZ2FjeSA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9sZWdhY3kvY29yZV9wbHVnaW5zL2VtYmVkZGFibGVfYXBpL3B1YmxpYy9ucF9yZWFkeS9wdWJsaWMvbGVnYWN5Iik7Cgp2YXIgX2kxOG4yID0gcmVxdWlyZSgiLi4vLi4vLi4vaTE4biIpOwoKdmFyIF9wdWJsaWMyID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3BsdWdpbnMva2liYW5hX3JlYWN0L3B1YmxpYyIpOwoKdmFyIF9lbWJlZGRhYmxlX2lucHV0X3RvX2V4cHJlc3Npb24gPSByZXF1aXJlKCIuL2VtYmVkZGFibGVfaW5wdXRfdG9fZXhwcmVzc2lvbiIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQoKZnVuY3Rpb24gX2V4dGVuZHMoKSB7CiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsKICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7CiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07CgogICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsKICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgcmV0dXJuIHRhcmdldDsKICB9OwoKICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKdmFyIHN0cmluZ3MgPSBfaTE4bjIuUmVuZGVyZXJTdHJpbmdzLmVtYmVkZGFibGU7CnZhciBlbWJlZGRhYmxlc1JlZ2lzdHJ5ID0ge307Cgp2YXIgcmVuZGVyRW1iZWRkYWJsZSA9IGZ1bmN0aW9uIHJlbmRlckVtYmVkZGFibGUoZW1iZWRkYWJsZU9iamVjdCwgZG9tTm9kZSkgewogIHZhciBTYXZlZE9iamVjdEZpbmRlciA9IGZ1bmN0aW9uIFNhdmVkT2JqZWN0RmluZGVyKHByb3BzKSB7CiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcHVibGljMi5TYXZlZE9iamVjdEZpbmRlclVpLCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHsKICAgICAgc2F2ZWRPYmplY3RzOiBfbmV3X3BsYXRmb3JtLm5wU3RhcnQuY29yZS5zYXZlZE9iamVjdHMsCiAgICAgIHVpU2V0dGluZ3M6IF9uZXdfcGxhdGZvcm0ubnBTdGFydC5jb3JlLnVpU2V0dGluZ3MKICAgIH0pKTsKICB9OwoKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgY2xhc3NOYW1lOiAiZW1iZWRkYWJsZSIsCiAgICBzdHlsZTogewogICAgICB3aWR0aDogZG9tTm9kZS5vZmZzZXRXaWR0aCwKICAgICAgaGVpZ2h0OiBkb21Ob2RlLm9mZnNldEhlaWdodCwKICAgICAgY3Vyc29yOiAnYXV0bycKICAgIH0KICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9pMThuLkkxOG5Db250ZXh0LCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9wdWJsaWMuRW1iZWRkYWJsZVBhbmVsLCB7CiAgICBlbWJlZGRhYmxlOiBlbWJlZGRhYmxlT2JqZWN0LAogICAgZ2V0QWN0aW9uczogX25ld19wbGF0Zm9ybS5ucFN0YXJ0LnBsdWdpbnMudWlBY3Rpb25zLmdldFRyaWdnZXJDb21wYXRpYmxlQWN0aW9ucywKICAgIGdldEVtYmVkZGFibGVGYWN0b3J5OiBfbGVnYWN5LnN0YXJ0LmdldEVtYmVkZGFibGVGYWN0b3J5LAogICAgZ2V0QWxsRW1iZWRkYWJsZUZhY3RvcmllczogX2xlZ2FjeS5zdGFydC5nZXRFbWJlZGRhYmxlRmFjdG9yaWVzLAogICAgbm90aWZpY2F0aW9uczogX25ld19wbGF0Zm9ybS5ucFN0YXJ0LmNvcmUubm90aWZpY2F0aW9ucywKICAgIG92ZXJsYXlzOiBfbmV3X3BsYXRmb3JtLm5wU3RhcnQuY29yZS5vdmVybGF5cywKICAgIGluc3BlY3RvcjogX25ld19wbGF0Zm9ybS5ucFN0YXJ0LnBsdWdpbnMuaW5zcGVjdG9yLAogICAgU2F2ZWRPYmplY3RGaW5kZXI6IFNhdmVkT2JqZWN0RmluZGVyCiAgfSkpKTsKfTsKCnZhciBlbWJlZGRhYmxlID0gZnVuY3Rpb24gZW1iZWRkYWJsZSgpIHsKICByZXR1cm4gewogICAgbmFtZTogJ2VtYmVkZGFibGUnLAogICAgZGlzcGxheU5hbWU6IHN0cmluZ3MuZ2V0RGlzcGxheU5hbWUoKSwKICAgIGhlbHA6IHN0cmluZ3MuZ2V0SGVscERlc2NyaXB0aW9uKCksCiAgICByZXVzZURvbU5vZGU6IHRydWUsCiAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihkb21Ob2RlLCBfcmVmLCBoYW5kbGVycykgewogICAgICB2YXIgaW5wdXQsIGVtYmVkZGFibGVUeXBlLCB1bmlxdWVJZCwgZmFjdG9yeSwgZW1iZWRkYWJsZU9iamVjdCwgc3Vic2NyaXB0aW9uOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIHJlbmRlciQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgaW5wdXQgPSBfcmVmLmlucHV0LCBlbWJlZGRhYmxlVHlwZSA9IF9yZWYuZW1iZWRkYWJsZVR5cGU7CiAgICAgICAgICAgICAgdW5pcXVlSWQgPSBoYW5kbGVycy5nZXRFbGVtZW50SWQoKTsKCiAgICAgICAgICAgICAgaWYgKGVtYmVkZGFibGVzUmVnaXN0cnlbdW5pcXVlSWRdKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTg7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGZhY3RvcnkgPSBBcnJheS5mcm9tKF9sZWdhY3kuc3RhcnQuZ2V0RW1iZWRkYWJsZUZhY3RvcmllcygpKS5maW5kKGZ1bmN0aW9uIChlbWJlZGRhYmxlRmFjdG9yeSkgewogICAgICAgICAgICAgICAgcmV0dXJuIGVtYmVkZGFibGVGYWN0b3J5LnR5cGUgPT09IGVtYmVkZGFibGVUeXBlOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBpZiAoZmFjdG9yeSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGhhbmRsZXJzLmRvbmUoKTsKICAgICAgICAgICAgICB0aHJvdyBuZXcgX3B1YmxpYy5FbWJlZGRhYmxlRmFjdG9yeU5vdEZvdW5kRXJyb3IoZW1iZWRkYWJsZVR5cGUpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoZmFjdG9yeS5jcmVhdGVGcm9tU2F2ZWRPYmplY3QoaW5wdXQuaWQsIGlucHV0KSk7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgZW1iZWRkYWJsZU9iamVjdCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgZW1iZWRkYWJsZXNSZWdpc3RyeVt1bmlxdWVJZF0gPSBlbWJlZGRhYmxlT2JqZWN0OwoKICAgICAgICAgICAgICBfcmVhY3REb20uZGVmYXVsdC51bm1vdW50Q29tcG9uZW50QXROb2RlKGRvbU5vZGUpOwoKICAgICAgICAgICAgICBzdWJzY3JpcHRpb24gPSBlbWJlZGRhYmxlT2JqZWN0LmdldElucHV0JCgpLnN1YnNjcmliZShmdW5jdGlvbiAodXBkYXRlZElucHV0KSB7CiAgICAgICAgICAgICAgICBoYW5kbGVycy5vbkVtYmVkZGFibGVJbnB1dENoYW5nZSgoMCwgX2VtYmVkZGFibGVfaW5wdXRfdG9fZXhwcmVzc2lvbi5lbWJlZGRhYmxlSW5wdXRUb0V4cHJlc3Npb24pKHVwZGF0ZWRJbnB1dCwgZW1iZWRkYWJsZVR5cGUpKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgX3JlYWN0RG9tLmRlZmF1bHQucmVuZGVyKHJlbmRlckVtYmVkZGFibGUoZW1iZWRkYWJsZU9iamVjdCwgZG9tTm9kZSksIGRvbU5vZGUsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiBoYW5kbGVycy5kb25lKCk7CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGhhbmRsZXJzLm9uUmVzaXplKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIF9yZWFjdERvbS5kZWZhdWx0LnJlbmRlcihyZW5kZXJFbWJlZGRhYmxlKGVtYmVkZGFibGVPYmplY3QsIGRvbU5vZGUpLCBkb21Ob2RlLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBoYW5kbGVycy5kb25lKCk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBoYW5kbGVycy5vbkRlc3Ryb3koZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7CiAgICAgICAgICAgICAgICBoYW5kbGVycy5vbkVtYmVkZGFibGVEZXN0cm95ZWQoKTsKICAgICAgICAgICAgICAgIGRlbGV0ZSBlbWJlZGRhYmxlc1JlZ2lzdHJ5W3VuaXF1ZUlkXTsKICAgICAgICAgICAgICAgIHJldHVybiBfcmVhY3REb20uZGVmYXVsdC51bm1vdW50Q29tcG9uZW50QXROb2RlKGRvbU5vZGUpOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxOTsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgICAgZW1iZWRkYWJsZXNSZWdpc3RyeVt1bmlxdWVJZF0udXBkYXRlSW5wdXQoaW5wdXQpOwoKICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfTsKfTsKCmV4cG9ydHMuZW1iZWRkYWJsZSA9IGVtYmVkZGFibGU7"},null]}