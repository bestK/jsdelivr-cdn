{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/pages/overview/events_by_dataset/index.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/pages/overview/events_by_dataset/index.js","mtime":1585205047927},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkV2ZW50c0J5RGF0YXNldCA9IHZvaWQgMDsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX251bWVyYWwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkBlbGFzdGljL251bWVyYWwiKSk7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX3RyYW5zbGF0aW9ucyA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbXBvbmVudHMvZXZlbnRzX3ZpZXdlci90cmFuc2xhdGlvbnMiKTsKCnZhciBfa2V1cnkgPSByZXF1aXJlKCIuLi8uLi8uLi9saWIva2V1cnkiKTsKCnZhciBfcmVkaXJlY3RfdG9faG9zdHMgPSByZXF1aXJlKCIuLi8uLi8uLi9jb21wb25lbnRzL2xpbmtfdG8vcmVkaXJlY3RfdG9faG9zdHMiKTsKCnZhciBfbWF0cml4X2hpc3RvZ3JhbSA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbnRhaW5lcnMvbWF0cml4X2hpc3RvZ3JhbSIpOwoKdmFyIF9pbmRleCA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbnRhaW5lcnMvbWF0cml4X2hpc3RvZ3JhbS9pbmRleC5ncWxfcXVlcnkiKTsKCnZhciBfbmF2aWdhdGlvbiA9IHJlcXVpcmUoIi4uLy4uL2hvc3RzL25hdmlnYXRpb24iKTsKCnZhciBfa2liYW5hID0gcmVxdWlyZSgiLi4vLi4vLi4vbGliL2tpYmFuYSIpOwoKdmFyIF9wdWJsaWMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvcGx1Z2lucy9kYXRhL3B1YmxpYyIpOwoKdmFyIF9tb2RlbCA9IHJlcXVpcmUoIi4uLy4uLy4uL3N0b3JlL2hvc3RzL21vZGVsIik7Cgp2YXIgX2NvbnN0YW50cyA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uL2NvbW1vbi9jb25zdGFudHMiKTsKCnZhciBpMThuID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgiLi4vdHJhbnNsYXRpb25zIikpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7CiAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgewogICAgcmV0dXJuIG9iajsKICB9IGVsc2UgewogICAgdmFyIG5ld09iaiA9IHt9OwoKICAgIGlmIChvYmogIT0gbnVsbCkgewogICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsKICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OwoKICAgICAgICAgIGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgewogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBuZXdPYmouZGVmYXVsdCA9IG9iajsKICAgIHJldHVybiBuZXdPYmo7CiAgfQp9CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9CgpmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsKICByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOwp9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgewogIHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UiKTsKfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgewogIHZhciBfYXJyID0gW107CiAgdmFyIF9uID0gdHJ1ZTsKICB2YXIgX2QgPSBmYWxzZTsKICB2YXIgX2UgPSB1bmRlZmluZWQ7CgogIHRyeSB7CiAgICBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7CiAgICAgIF9hcnIucHVzaChfcy52YWx1ZSk7CgogICAgICBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7CiAgICB9CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBfZCA9IHRydWU7CiAgICBfZSA9IGVycjsKICB9IGZpbmFsbHkgewogICAgdHJ5IHsKICAgICAgaWYgKCFfbiAmJiBfaVsicmV0dXJuIl0gIT0gbnVsbCkgX2lbInJldHVybiJdKCk7CiAgICB9IGZpbmFsbHkgewogICAgICBpZiAoX2QpIHRocm93IF9lOwogICAgfQogIH0KCiAgcmV0dXJuIF9hcnI7Cn0KCmZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsKICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOwp9Cgp2YXIgTk9fRklMVEVSUyA9IFtdOwp2YXIgREVGQVVMVF9RVUVSWSA9IHsKICBxdWVyeTogJycsCiAgbGFuZ3VhZ2U6ICdrdWVyeScKfTsKdmFyIERFRkFVTFRfU1RBQ0tfQlkgPSAnZXZlbnQuZGF0YXNldCc7CnZhciBJRCA9ICdldmVudHNCeURhdGFzZXRPdmVydmlldyc7Cgp2YXIgRXZlbnRzQnlEYXRhc2V0Q29tcG9uZW50ID0gZnVuY3Rpb24gRXZlbnRzQnlEYXRhc2V0Q29tcG9uZW50KF9yZWYpIHsKICB2YXIgX2V2ZW50c1N0YWNrQnlPcHRpb25zOwoKICB2YXIgZGVsZXRlUXVlcnkgPSBfcmVmLmRlbGV0ZVF1ZXJ5LAogICAgICBfcmVmJGZpbHRlcnMgPSBfcmVmLmZpbHRlcnMsCiAgICAgIGZpbHRlcnMgPSBfcmVmJGZpbHRlcnMgPT09IHZvaWQgMCA/IE5PX0ZJTFRFUlMgOiBfcmVmJGZpbHRlcnMsCiAgICAgIGZyb20gPSBfcmVmLmZyb20sCiAgICAgIGluZGV4UGF0dGVybiA9IF9yZWYuaW5kZXhQYXR0ZXJuLAogICAgICBfcmVmJHF1ZXJ5ID0gX3JlZi5xdWVyeSwKICAgICAgcXVlcnkgPSBfcmVmJHF1ZXJ5ID09PSB2b2lkIDAgPyBERUZBVUxUX1FVRVJZIDogX3JlZiRxdWVyeSwKICAgICAgc2V0QWJzb2x1dGVSYW5nZURhdGVQaWNrZXIgPSBfcmVmLnNldEFic29sdXRlUmFuZ2VEYXRlUGlja2VyLAogICAgICBzZXRRdWVyeSA9IF9yZWYuc2V0UXVlcnksCiAgICAgIHRvID0gX3JlZi50bzsKICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKGRlbGV0ZVF1ZXJ5KSB7CiAgICAgICAgZGVsZXRlUXVlcnkoewogICAgICAgICAgaWQ6IElECiAgICAgICAgfSk7CiAgICAgIH0KICAgIH07CiAgfSwgW10pOwogIHZhciBraWJhbmEgPSAoMCwgX2tpYmFuYS51c2VLaWJhbmEpKCk7CgogIHZhciBfdXNlVWlTZXR0aW5nJCA9ICgwLCBfa2liYW5hLnVzZVVpU2V0dGluZyQpKF9jb25zdGFudHMuREVGQVVMVF9OVU1CRVJfRk9STUFUKSwKICAgICAgX3VzZVVpU2V0dGluZyQyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVVpU2V0dGluZyQsIDEpLAogICAgICBkZWZhdWx0TnVtYmVyRm9ybWF0ID0gX3VzZVVpU2V0dGluZyQyWzBdOwoKICB2YXIgdXBkYXRlRGF0ZVJhbmdlQ2FsbGJhY2sgPSAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKShmdW5jdGlvbiAobWluLCBtYXgpIHsKICAgIHNldEFic29sdXRlUmFuZ2VEYXRlUGlja2VyKHsKICAgICAgaWQ6ICdnbG9iYWwnLAogICAgICBmcm9tOiBtaW4sCiAgICAgIHRvOiBtYXgKICAgIH0pOwogIH0sIFtzZXRBYnNvbHV0ZVJhbmdlRGF0ZVBpY2tlcl0pOwogIHZhciBldmVudHNDb3VudFZpZXdFdmVudHNCdXR0b24gPSAoMCwgX3JlYWN0LnVzZU1lbW8pKGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQnV0dG9uLCB7CiAgICAgIGhyZWY6ICgwLCBfcmVkaXJlY3RfdG9faG9zdHMuZ2V0VGFic09uSG9zdHNVcmwpKF9tb2RlbC5Ib3N0c1RhYmxlVHlwZS5ldmVudHMpCiAgICB9LCBpMThuLlZJRVdfRVZFTlRTKTsKICB9LCBbXSk7CiAgdmFyIGdldFN1YnRpdGxlID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKHRvdGFsQ291bnQpIHsKICAgIHJldHVybiAiIi5jb25jYXQoX3RyYW5zbGF0aW9ucy5TSE9XSU5HLCAiOiAiKS5jb25jYXQoKDAsIF9udW1lcmFsLmRlZmF1bHQpKHRvdGFsQ291bnQpLmZvcm1hdChkZWZhdWx0TnVtYmVyRm9ybWF0KSwgIiAiKS5jb25jYXQoKDAsIF90cmFuc2xhdGlvbnMuVU5JVCkodG90YWxDb3VudCkpOwogIH0sIFtdKTsKICB2YXIgZGVmYXVsdFN0YWNrQnlPcHRpb24gPSAoX2V2ZW50c1N0YWNrQnlPcHRpb25zID0gX25hdmlnYXRpb24uZXZlbnRzU3RhY2tCeU9wdGlvbnMuZmluZChmdW5jdGlvbiAobykgewogICAgcmV0dXJuIG8udGV4dCA9PT0gREVGQVVMVF9TVEFDS19CWTsKICB9KSkgIT09IG51bGwgJiYgX2V2ZW50c1N0YWNrQnlPcHRpb25zICE9PSB2b2lkIDAgPyBfZXZlbnRzU3RhY2tCeU9wdGlvbnMgOiBfbmF2aWdhdGlvbi5ldmVudHNTdGFja0J5T3B0aW9uc1swXTsKICB2YXIgZmlsdGVyUXVlcnkgPSAoMCwgX3JlYWN0LnVzZU1lbW8pKGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiAoMCwgX2tldXJ5LmNvbnZlcnRUb0J1aWxkRXNRdWVyeSkoewogICAgICBjb25maWc6IF9wdWJsaWMuZXNRdWVyeS5nZXRFc1F1ZXJ5Q29uZmlnKGtpYmFuYS5zZXJ2aWNlcy51aVNldHRpbmdzKSwKICAgICAgaW5kZXhQYXR0ZXJuOiBpbmRleFBhdHRlcm4sCiAgICAgIHF1ZXJpZXM6IFtxdWVyeV0sCiAgICAgIGZpbHRlcnM6IGZpbHRlcnMKICAgIH0pOwogIH0sIFtraWJhbmEsIGluZGV4UGF0dGVybiwgcXVlcnksIGZpbHRlcnNdKTsKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfbWF0cml4X2hpc3RvZ3JhbS5NYXRyaXhIaXN0b2dyYW1Db250YWluZXIsIHsKICAgIGRhdGFLZXk6ICJFdmVudHNIaXN0b2dyYW0iLAogICAgZGVmYXVsdFN0YWNrQnlPcHRpb246IGRlZmF1bHRTdGFja0J5T3B0aW9uLAogICAgZW5kRGF0ZTogdG8sCiAgICBlcnJvck1lc3NhZ2U6IF90cmFuc2xhdGlvbnMuRVJST1JfRkVUQ0hJTkdfRVZFTlRTX0RBVEEsCiAgICBmaWx0ZXJRdWVyeTogZmlsdGVyUXVlcnksCiAgICBoZWFkZXJDaGlsZHJlbjogZXZlbnRzQ291bnRWaWV3RXZlbnRzQnV0dG9uLAogICAgaWQ6IElELAogICAgaXNFdmVudHNIaXN0b2dyYW06IHRydWUsCiAgICBsZWdlbmRQb3NpdGlvbjogJ3JpZ2h0JywKICAgIHF1ZXJ5OiBfaW5kZXguTWF0cml4SGlzdG9ncmFtR3FsUXVlcnksCiAgICBzZXRRdWVyeTogc2V0UXVlcnksCiAgICBzb3VyY2VJZDogImRlZmF1bHQiLAogICAgc3RhY2tCeU9wdGlvbnM6IF9uYXZpZ2F0aW9uLmV2ZW50c1N0YWNrQnlPcHRpb25zLAogICAgc3RhcnREYXRlOiBmcm9tLAogICAgdGl0bGU6IGkxOG4uRVZFTlRTLAogICAgc3VidGl0bGU6IGdldFN1YnRpdGxlLAogICAgdHlwZTogX21vZGVsLkhvc3RzVHlwZS5wYWdlLAogICAgdXBkYXRlRGF0ZVJhbmdlOiB1cGRhdGVEYXRlUmFuZ2VDYWxsYmFjawogIH0pOwp9OwoKRXZlbnRzQnlEYXRhc2V0Q29tcG9uZW50LmRpc3BsYXlOYW1lID0gJ0V2ZW50c0J5RGF0YXNldENvbXBvbmVudCc7Cgp2YXIgRXZlbnRzQnlEYXRhc2V0ID0gX3JlYWN0LmRlZmF1bHQubWVtbyhFdmVudHNCeURhdGFzZXRDb21wb25lbnQpOwoKZXhwb3J0cy5FdmVudHNCeURhdGFzZXQgPSBFdmVudHNCeURhdGFzZXQ7"},null]}