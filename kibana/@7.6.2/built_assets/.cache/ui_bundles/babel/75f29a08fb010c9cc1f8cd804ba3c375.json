{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/plugins/share/public/services/share_menu_manager.js","dependencies":[{"path":"src/plugins/share/public/services/share_menu_manager.js","mtime":1585205041914},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlNoYXJlTWVudU1hbmFnZXIgPSB2b2lkIDA7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfcmVhY3REb20gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInJlYWN0LWRvbSIpKTsKCnZhciBfcmVhY3QyID0gcmVxdWlyZSgiQGtibi9pMThuL3JlYWN0Iik7Cgp2YXIgX2V1aSA9IHJlcXVpcmUoIkBlbGFzdGljL2V1aSIpOwoKdmFyIF9zaGFyZV9jb250ZXh0X21lbnUgPSByZXF1aXJlKCIuLi9jb21wb25lbnRzL3NoYXJlX2NvbnRleHRfbWVudSIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7CiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOwoKICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgewogICAgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7CiAgICBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7CiAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOwogICAgfSk7CiAgICBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7CiAgfQoKICByZXR1cm4ga2V5czsKfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsKICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgewogICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307CgogICAgaWYgKGkgJSAyKSB7CiAgICAgIG93bktleXMoc291cmNlLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsKICAgICAgfSk7CiAgICB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7CiAgICB9IGVsc2UgewogICAgICBvd25LZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7CiAgICAgIH0pOwogICAgfQogIH0KCiAgcmV0dXJuIHRhcmdldDsKfQoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgewogIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7CiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsKICB9Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsKICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOwogICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOwogICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOwogICAgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7CiAgfQp9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7CiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7CiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOwogIHJldHVybiBDb25zdHJ1Y3RvcjsKfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgewogIGlmIChrZXkgaW4gb2JqKSB7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsKICAgICAgdmFsdWU6IHZhbHVlLAogICAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgIHdyaXRhYmxlOiB0cnVlCiAgICB9KTsKICB9IGVsc2UgewogICAgb2JqW2tleV0gPSB2YWx1ZTsKICB9CgogIHJldHVybiBvYmo7Cn0KCnZhciBTaGFyZU1lbnVNYW5hZ2VyID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gU2hhcmVNZW51TWFuYWdlcigpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNoYXJlTWVudU1hbmFnZXIpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiaXNPcGVuIiwgZmFsc2UpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiY29udGFpbmVyIiwgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JykpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAib25DbG9zZSIsIGZ1bmN0aW9uICgpIHsKICAgICAgX3JlYWN0RG9tLmRlZmF1bHQudW5tb3VudENvbXBvbmVudEF0Tm9kZShfdGhpcy5jb250YWluZXIpOwoKICAgICAgX3RoaXMuaXNPcGVuID0gZmFsc2U7CiAgICB9KTsKICB9CgogIF9jcmVhdGVDbGFzcyhTaGFyZU1lbnVNYW5hZ2VyLCBbewogICAga2V5OiAic3RhcnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHN0YXJ0KGNvcmUsIHNoYXJlUmVnaXN0cnkpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gewogICAgICAgIC8qKgogICAgICAgICAqIENvbGxlY3RzIHNoYXJlIG1lbnUgaXRlbXMgZnJvbSByZWdpc3RlcmVkIHByb3ZpZGVycyBhbmQgbW91bnRzIHRoZSBzaGFyZSBjb250ZXh0IG1lbnUgdW5kZXIKICAgICAgICAgKiB0aGUgZ2l2ZW4gYGFuY2hvckVsZW1lbnRgLiBJZiB0aGUgY29udGV4dCBtZW51IGlzIGFscmVhZHkgb3BlbmVkLCBhIGNhbGwgdG8gdGhpcyBtZXRob2QgY2xvc2VzIGl0LgogICAgICAgICAqIEBwYXJhbSBvcHRpb25zCiAgICAgICAgICovCiAgICAgICAgdG9nZ2xlU2hhcmVDb250ZXh0TWVudTogZnVuY3Rpb24gdG9nZ2xlU2hhcmVDb250ZXh0TWVudShvcHRpb25zKSB7CiAgICAgICAgICB2YXIgbWVudUl0ZW1zID0gc2hhcmVSZWdpc3RyeS5nZXRTaGFyZU1lbnVJdGVtcyhfb2JqZWN0U3ByZWFkKHt9LCBvcHRpb25zLCB7CiAgICAgICAgICAgIG9uQ2xvc2U6IF90aGlzMi5vbkNsb3NlCiAgICAgICAgICB9KSk7CgogICAgICAgICAgX3RoaXMyLnRvZ2dsZVNoYXJlQ29udGV4dE1lbnUoX29iamVjdFNwcmVhZCh7fSwgb3B0aW9ucywgewogICAgICAgICAgICBtZW51SXRlbXM6IG1lbnVJdGVtcywKICAgICAgICAgICAgcG9zdDogY29yZS5odHRwLnBvc3QsCiAgICAgICAgICAgIGJhc2VQYXRoOiBjb3JlLmh0dHAuYmFzZVBhdGguZ2V0KCkKICAgICAgICAgIH0pKTsKICAgICAgICB9CiAgICAgIH07CiAgICB9CiAgfSwgewogICAga2V5OiAidG9nZ2xlU2hhcmVDb250ZXh0TWVudSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdG9nZ2xlU2hhcmVDb250ZXh0TWVudShfcmVmKSB7CiAgICAgIHZhciBhbmNob3JFbGVtZW50ID0gX3JlZi5hbmNob3JFbGVtZW50LAogICAgICAgICAgYWxsb3dFbWJlZCA9IF9yZWYuYWxsb3dFbWJlZCwKICAgICAgICAgIGFsbG93U2hvcnRVcmwgPSBfcmVmLmFsbG93U2hvcnRVcmwsCiAgICAgICAgICBvYmplY3RJZCA9IF9yZWYub2JqZWN0SWQsCiAgICAgICAgICBvYmplY3RUeXBlID0gX3JlZi5vYmplY3RUeXBlLAogICAgICAgICAgc2hhcmluZ0RhdGEgPSBfcmVmLnNoYXJpbmdEYXRhLAogICAgICAgICAgbWVudUl0ZW1zID0gX3JlZi5tZW51SXRlbXMsCiAgICAgICAgICBzaGFyZWFibGVVcmwgPSBfcmVmLnNoYXJlYWJsZVVybCwKICAgICAgICAgIHBvc3QgPSBfcmVmLnBvc3QsCiAgICAgICAgICBiYXNlUGF0aCA9IF9yZWYuYmFzZVBhdGg7CgogICAgICBpZiAodGhpcy5pc09wZW4pIHsKICAgICAgICB0aGlzLm9uQ2xvc2UoKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuaXNPcGVuID0gdHJ1ZTsKICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLmNvbnRhaW5lcik7CgogICAgICB2YXIgZWxlbWVudCA9IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Mi5JMThuUHJvdmlkZXIsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlXcmFwcGluZ1BvcG92ZXIsIHsKICAgICAgICBpZDogInNoYXJlUG9wb3ZlciIsCiAgICAgICAgYnV0dG9uOiBhbmNob3JFbGVtZW50LAogICAgICAgIGlzT3BlbjogdHJ1ZSwKICAgICAgICBjbG9zZVBvcG92ZXI6IHRoaXMub25DbG9zZSwKICAgICAgICBwYW5lbFBhZGRpbmdTaXplOiAibm9uZSIsCiAgICAgICAgd2l0aFRpdGxlOiB0cnVlLAogICAgICAgIGFuY2hvclBvc2l0aW9uOiAiZG93bkxlZnQiCiAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3NoYXJlX2NvbnRleHRfbWVudS5TaGFyZUNvbnRleHRNZW51LCB7CiAgICAgICAgYWxsb3dFbWJlZDogYWxsb3dFbWJlZCwKICAgICAgICBhbGxvd1Nob3J0VXJsOiBhbGxvd1Nob3J0VXJsLAogICAgICAgIG9iamVjdElkOiBvYmplY3RJZCwKICAgICAgICBvYmplY3RUeXBlOiBvYmplY3RUeXBlLAogICAgICAgIHNoYXJlTWVudUl0ZW1zOiBtZW51SXRlbXMsCiAgICAgICAgc2hhcmluZ0RhdGE6IHNoYXJpbmdEYXRhLAogICAgICAgIHNoYXJlYWJsZVVybDogc2hhcmVhYmxlVXJsLAogICAgICAgIG9uQ2xvc2U6IHRoaXMub25DbG9zZSwKICAgICAgICBwb3N0OiBwb3N0LAogICAgICAgIGJhc2VQYXRoOiBiYXNlUGF0aAogICAgICB9KSkpOwoKICAgICAgX3JlYWN0RG9tLmRlZmF1bHQucmVuZGVyKGVsZW1lbnQsIHRoaXMuY29udGFpbmVyKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBTaGFyZU1lbnVNYW5hZ2VyOwp9KCk7CgpleHBvcnRzLlNoYXJlTWVudU1hbmFnZXIgPSBTaGFyZU1lbnVNYW5hZ2VyOw=="},null]}