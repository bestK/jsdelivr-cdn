{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/maps/public/layers/sources/es_geo_grid_source/geo_tile_utils.js","dependencies":[{"path":"x-pack/legacy/plugins/maps/public/layers/sources/es_geo_grid_source/geo_tile_utils.js","mtime":1585205045333},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnBhcnNlVGlsZUtleSA9IHBhcnNlVGlsZUtleTsKZXhwb3J0cy5nZXRUaWxlQm91bmRpbmdCb3ggPSBnZXRUaWxlQm91bmRpbmdCb3g7CmV4cG9ydHMuZXhwYW5kVG9UaWxlQm91bmRhcmllcyA9IGV4cGFuZFRvVGlsZUJvdW5kYXJpZXM7Cgp2YXIgX2xvZGFzaCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgibG9kYXNoIikpOwoKdmFyIF9jb25zdGFudHMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi9jb21tb24vY29uc3RhbnRzIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfQoKLyoKICogQ29weXJpZ2h0IEVsYXN0aWNzZWFyY2ggQi5WLiBhbmQvb3IgbGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZQogKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZTsKICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBFbGFzdGljIExpY2Vuc2UuCiAqLwp2YXIgWk9PTV9USUxFX0tFWV9JTkRFWCA9IDA7CnZhciBYX1RJTEVfS0VZX0lOREVYID0gMTsKdmFyIFlfVElMRV9LRVlfSU5ERVggPSAyOwoKZnVuY3Rpb24gZ2V0VGlsZUNvdW50KHpvb20pIHsKICByZXR1cm4gTWF0aC5wb3coMiwgem9vbSk7Cn0KCmZ1bmN0aW9uIHBhcnNlVGlsZUtleSh0aWxlS2V5KSB7CiAgdmFyIHRpbGVLZXlQYXJ0cyA9IHRpbGVLZXkuc3BsaXQoJy8nKTsKCiAgaWYgKHRpbGVLZXlQYXJ0cy5sZW5ndGggIT09IDMpIHsKICAgIHRocm93IG5ldyBFcnJvcigiSW52YWxpZCB0aWxlIGtleSwgZXhwZWN0aW5nIFwiem9vbS94L3lcIiBmb3JtYXQgYnV0IGdvdCAiLmNvbmNhdCh0aWxlS2V5KSk7CiAgfQoKICB2YXIgem9vbSA9IHBhcnNlSW50KHRpbGVLZXlQYXJ0c1taT09NX1RJTEVfS0VZX0lOREVYXSwgMTApOwogIHZhciB4ID0gcGFyc2VJbnQodGlsZUtleVBhcnRzW1hfVElMRV9LRVlfSU5ERVhdLCAxMCk7CiAgdmFyIHkgPSBwYXJzZUludCh0aWxlS2V5UGFydHNbWV9USUxFX0tFWV9JTkRFWF0sIDEwKTsKICB2YXIgdGlsZUNvdW50ID0gZ2V0VGlsZUNvdW50KHpvb20pOwoKICBpZiAoeCA+PSB0aWxlQ291bnQpIHsKICAgIHRocm93IG5ldyBFcnJvcigiVGlsZSBrZXkgaXMgbWFsZm9ybWVkLCBleHBlY3RlZCB4IHRvIGJlIGxlc3MgdGhhbiAiLmNvbmNhdCh0aWxlQ291bnQsICIsIHlvdSBwcm92aWRlZCAiKS5jb25jYXQoeCkpOwogIH0KCiAgaWYgKHkgPj0gdGlsZUNvdW50KSB7CiAgICB0aHJvdyBuZXcgRXJyb3IoIlRpbGUga2V5IGlzIG1hbGZvcm1lZCwgZXhwZWN0ZWQgeSB0byBiZSBsZXNzIHRoYW4gIi5jb25jYXQodGlsZUNvdW50LCAiLCB5b3UgcHJvdmlkZWQgIikuY29uY2F0KHkpKTsKICB9CgogIHJldHVybiB7CiAgICB4OiB4LAogICAgeTogeSwKICAgIHpvb206IHpvb20sCiAgICB0aWxlQ291bnQ6IHRpbGVDb3VudAogIH07Cn0KCmZ1bmN0aW9uIHNpbmgoeCkgewogIHJldHVybiAoTWF0aC5leHAoeCkgLSBNYXRoLmV4cCgteCkpIC8gMjsKfSAvLyBDYWxjdWxhdGUgdGhlIG1pbmltdW0gcHJlY2lzaW9uIHJlcXVpcmVkIHRvIGFkZXF1dGVseSBkcmF3IHRoZSBib3gKLy8gYm91bmRzLgovLwovLyBjZWlsKGFicyhsb2cxMCh0aWxlU2l6ZSkpKSB0ZWxscyB1cyBob3cgbWFueSBkZWNpbWFscyBvZiBwcmVjaXNpb24KLy8gYXJlIG1pbmltYWxseSByZXF1aXJlZCB0byByZXByZXNlbnQgdGhlIG51bWJlciBhZnRlciByb3VuZGluZy4KLy8KLy8gV2UgYWRkIG9uZSBleHRyYSBkZWNpbWFsIGxldmVsIG9mIHByZWNpc2lvbiBiZWNhdXNlLCBhdCBoaWdoIHpvb20KLy8gbGV2ZWxzIHJvdW5kaW5nIGV4YWN0bHkgY2FuIGNhdXNlIHRoZSBib3hlcyB0byByZW5kZXIgYXMgdW5ldmVuIHNpemVzCi8vIChzb21lIHdpbGwgYmUgc2xpZ2h0bHkgbGFyZ2VyIGFuZCBzb21lIHNsaWdodGx5IHNtYWxsZXIpCgoKZnVuY3Rpb24gcHJlY2lzaW9uUm91bmRpbmcodiwgbWluUHJlY2lzaW9uLCBiaW5TaXplKSB7CiAgdmFyIHByZWNpc2lvbiA9IE1hdGguY2VpbChNYXRoLmFicyhNYXRoLmxvZzEwKGJpblNpemUpKSkgKyAxOwogIHByZWNpc2lvbiA9IE1hdGgubWF4KHByZWNpc2lvbiwgbWluUHJlY2lzaW9uKTsKICByZXR1cm4gX2xvZGFzaC5kZWZhdWx0LnJvdW5kKHYsIHByZWNpc2lvbik7Cn0KCmZ1bmN0aW9uIHRpbGVUb0xhdGl0dWRlKHksIHRpbGVDb3VudCkgewogIHZhciByYWRpYW5zID0gTWF0aC5hdGFuKHNpbmgoTWF0aC5QSSAtIDIgKiBNYXRoLlBJICogeSAvIHRpbGVDb3VudCkpOwogIHZhciBsYXQgPSAxODAgLyBNYXRoLlBJICogcmFkaWFuczsKICByZXR1cm4gcHJlY2lzaW9uUm91bmRpbmcobGF0LCBfY29uc3RhbnRzLkRFQ0lNQUxfREVHUkVFU19QUkVDSVNJT04sIDE4MCAvIHRpbGVDb3VudCk7Cn0KCmZ1bmN0aW9uIHRpbGVUb0xvbmdpdHVkZSh4LCB0aWxlQ291bnQpIHsKICB2YXIgbG9uID0geCAvIHRpbGVDb3VudCAqIDM2MCAtIDE4MDsKICByZXR1cm4gcHJlY2lzaW9uUm91bmRpbmcobG9uLCBfY29uc3RhbnRzLkRFQ0lNQUxfREVHUkVFU19QUkVDSVNJT04sIDM2MCAvIHRpbGVDb3VudCk7Cn0KCmZ1bmN0aW9uIGdldFRpbGVCb3VuZGluZ0JveCh0aWxlS2V5KSB7CiAgdmFyIF9wYXJzZVRpbGVLZXkgPSBwYXJzZVRpbGVLZXkodGlsZUtleSksCiAgICAgIHggPSBfcGFyc2VUaWxlS2V5LngsCiAgICAgIHkgPSBfcGFyc2VUaWxlS2V5LnksCiAgICAgIHRpbGVDb3VudCA9IF9wYXJzZVRpbGVLZXkudGlsZUNvdW50OwoKICByZXR1cm4gewogICAgdG9wOiB0aWxlVG9MYXRpdHVkZSh5LCB0aWxlQ291bnQpLAogICAgYm90dG9tOiB0aWxlVG9MYXRpdHVkZSh5ICsgMSwgdGlsZUNvdW50KSwKICAgIGxlZnQ6IHRpbGVUb0xvbmdpdHVkZSh4LCB0aWxlQ291bnQpLAogICAgcmlnaHQ6IHRpbGVUb0xvbmdpdHVkZSh4ICsgMSwgdGlsZUNvdW50KQogIH07Cn0KCmZ1bmN0aW9uIHNlYyh2YWx1ZSkgewogIHJldHVybiAxIC8gTWF0aC5jb3ModmFsdWUpOwp9CgpmdW5jdGlvbiBsYXRpdHVkZVRvVGlsZShsYXQsIHRpbGVDb3VudCkgewogIHZhciByYWRpYW5zID0gbGF0ICogTWF0aC5QSSAvIDE4MDsKICB2YXIgeSA9ICgxIC0gTWF0aC5sb2coTWF0aC50YW4ocmFkaWFucykgKyBzZWMocmFkaWFucykpIC8gTWF0aC5QSSkgLyAyICogdGlsZUNvdW50OwogIHJldHVybiBNYXRoLmZsb29yKHkpOwp9CgpmdW5jdGlvbiBsb25naXR1ZGVUb1RpbGUobG9uLCB0aWxlQ291bnQpIHsKICB2YXIgeCA9IChsb24gKyAxODApIC8gMzYwICogdGlsZUNvdW50OwogIHJldHVybiBNYXRoLmZsb29yKHgpOwp9CgpmdW5jdGlvbiBleHBhbmRUb1RpbGVCb3VuZGFyaWVzKGV4dGVudCwgem9vbSkgewogIHZhciB0aWxlQ291bnQgPSBnZXRUaWxlQ291bnQoem9vbSk7CiAgdmFyIHVwcGVyTGVmdFggPSBsb25naXR1ZGVUb1RpbGUoZXh0ZW50Lm1pbkxvbiwgdGlsZUNvdW50KTsKICB2YXIgdXBwZXJMZWZ0WSA9IGxhdGl0dWRlVG9UaWxlKE1hdGgubWluKGV4dGVudC5tYXhMYXQsIDkwKSwgdGlsZUNvdW50KTsKICB2YXIgbG93ZXJSaWdodFggPSBsb25naXR1ZGVUb1RpbGUoZXh0ZW50Lm1heExvbiwgdGlsZUNvdW50KTsKICB2YXIgbG93ZXJSaWdodFkgPSBsYXRpdHVkZVRvVGlsZShNYXRoLm1heChleHRlbnQubWluTGF0LCAtOTApLCB0aWxlQ291bnQpOwogIHJldHVybiB7CiAgICBtaW5Mb246IHRpbGVUb0xvbmdpdHVkZSh1cHBlckxlZnRYLCB0aWxlQ291bnQpLAogICAgbWluTGF0OiB0aWxlVG9MYXRpdHVkZShsb3dlclJpZ2h0WSArIDEsIHRpbGVDb3VudCksCiAgICBtYXhMb246IHRpbGVUb0xvbmdpdHVkZShsb3dlclJpZ2h0WCArIDEsIHRpbGVDb3VudCksCiAgICBtYXhMYXQ6IHRpbGVUb0xhdGl0dWRlKHVwcGVyTGVmdFksIHRpbGVDb3VudCkKICB9Owp9"},null]}