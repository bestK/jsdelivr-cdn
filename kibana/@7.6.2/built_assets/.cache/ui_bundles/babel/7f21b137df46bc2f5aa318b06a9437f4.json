{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/kbn_vislib_vis_types/public/components/options/metrics_axes/custom_extents_options.js","dependencies":[{"path":"src/legacy/core_plugins/kbn_vislib_vis_types/public/components/options/metrics_axes/custom_extents_options.js","mtime":1585205039380},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkN1c3RvbUV4dGVudHNPcHRpb25zID0gQ3VzdG9tRXh0ZW50c09wdGlvbnM7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCnZhciBfY29tbW9uID0gcmVxdWlyZSgiLi4vLi4vY29tbW9uIik7Cgp2YXIgX3lfZXh0ZW50cyA9IHJlcXVpcmUoIi4veV9leHRlbnRzIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgewogIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsKCiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsKICAgIHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOwogICAgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgewogICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsKICAgIH0pOwogICAga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOwogIH0KCiAgcmV0dXJuIGtleXM7Cn0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7CiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsKICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OwoKICAgIGlmIChpICUgMikgewogICAgICBvd25LZXlzKHNvdXJjZSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7CiAgICAgIH0pOwogICAgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgewogICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOwogICAgfSBlbHNlIHsKICAgICAgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOwogICAgICB9KTsKICAgIH0KICB9CgogIHJldHVybiB0YXJnZXQ7Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsKICBpZiAoa2V5IGluIG9iaikgewogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7CiAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgICB3cml0YWJsZTogdHJ1ZQogICAgfSk7CiAgfSBlbHNlIHsKICAgIG9ialtrZXldID0gdmFsdWU7CiAgfQoKICByZXR1cm4gb2JqOwp9CgpmdW5jdGlvbiBDdXN0b21FeHRlbnRzT3B0aW9ucyhfcmVmKSB7CiAgdmFyIGF4aXMgPSBfcmVmLmF4aXMsCiAgICAgIHNldE11bHRpcGxlVmFsaWRpdHkgPSBfcmVmLnNldE11bHRpcGxlVmFsaWRpdHksCiAgICAgIHNldFZhbHVlQXhpcyA9IF9yZWYuc2V0VmFsdWVBeGlzLAogICAgICBzZXRWYWx1ZUF4aXNTY2FsZSA9IF9yZWYuc2V0VmFsdWVBeGlzU2NhbGU7CgogIHZhciBpbnZhbGlkQm91bmRzTWFyZ2luTWVzc2FnZSA9IF9pMThuLmkxOG4udHJhbnNsYXRlKCdrYm5WaXNsaWJWaXNUeXBlcy5jb250cm9scy5wb2ludFNlcmllcy52YWx1ZUF4ZXMuc2NhbGVUb0RhdGFCb3VuZHMubWluTmVlZGVkQm91bmRzTWFyZ2luJywgewogICAgZGVmYXVsdE1lc3NhZ2U6ICdCb3VuZHMgbWFyZ2luIG11c3QgYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIDAuJwogIH0pOwoKICB2YXIgaXNCb3VuZHNNYXJnaW5WYWxpZCA9ICFheGlzLnNjYWxlLmRlZmF1bHRZRXh0ZW50cyB8fCAhYXhpcy5zY2FsZS5ib3VuZHNNYXJnaW4gfHwgYXhpcy5zY2FsZS5ib3VuZHNNYXJnaW4gPj0gMDsKICB2YXIgc2V0Qm91bmRzTWFyZ2luID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKHBhcmFtTmFtZSwgdmFsdWUpIHsKICAgIHJldHVybiBzZXRWYWx1ZUF4aXNTY2FsZShwYXJhbU5hbWUsIHZhbHVlID09PSAnJyA/IHVuZGVmaW5lZCA6IHZhbHVlKTsKICB9LCBbc2V0VmFsdWVBeGlzU2NhbGVdKTsKICB2YXIgb25EZWZhdWx0WUV4dGVudHNDaGFuZ2UgPSAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKShmdW5jdGlvbiAocGFyYW1OYW1lLCB2YWx1ZSkgewogICAgdmFyIHNjYWxlID0gX29iamVjdFNwcmVhZCh7fSwgYXhpcy5zY2FsZSwgX2RlZmluZVByb3BlcnR5KHt9LCBwYXJhbU5hbWUsIHZhbHVlKSk7CgogICAgaWYgKCFzY2FsZS5kZWZhdWx0WUV4dGVudHMpIHsKICAgICAgZGVsZXRlIHNjYWxlLmJvdW5kc01hcmdpbjsKICAgIH0KCiAgICBzZXRWYWx1ZUF4aXMoJ3NjYWxlJywgc2NhbGUpOwogIH0sIFtzZXRWYWx1ZUF4aXMsIGF4aXMuc2NhbGVdKTsKICB2YXIgb25TZXRZRXh0ZW50c0NoYW5nZSA9ICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKGZ1bmN0aW9uIChwYXJhbU5hbWUsIHZhbHVlKSB7CiAgICB2YXIgc2NhbGUgPSBfb2JqZWN0U3ByZWFkKHt9LCBheGlzLnNjYWxlLCBfZGVmaW5lUHJvcGVydHkoe30sIHBhcmFtTmFtZSwgdmFsdWUpKTsKCiAgICBpZiAoIXNjYWxlLnNldFlFeHRlbnRzKSB7CiAgICAgIGRlbGV0ZSBzY2FsZS5taW47CiAgICAgIGRlbGV0ZSBzY2FsZS5tYXg7CiAgICB9CgogICAgc2V0VmFsdWVBeGlzKCdzY2FsZScsIHNjYWxlKTsKICB9LCBbc2V0VmFsdWVBeGlzLCBheGlzLnNjYWxlXSk7CiAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKGZ1bmN0aW9uICgpIHsKICAgIHNldE11bHRpcGxlVmFsaWRpdHkoJ2JvdW5kc01hcmdpbicsIGlzQm91bmRzTWFyZ2luVmFsaWQpOwogICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHNldE11bHRpcGxlVmFsaWRpdHkoJ2JvdW5kc01hcmdpbicsIHRydWUpOwogICAgfTsKICB9LCBbaXNCb3VuZHNNYXJnaW5WYWxpZCwgc2V0TXVsdGlwbGVWYWxpZGl0eV0pOwogIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5kZWZhdWx0LkZyYWdtZW50LCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9jb21tb24uU3dpdGNoT3B0aW9uLCB7CiAgICBsYWJlbDogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2tiblZpc2xpYlZpc1R5cGVzLmNvbnRyb2xzLnBvaW50U2VyaWVzLnZhbHVlQXhlcy5zY2FsZVRvRGF0YUJvdW5kc0xhYmVsJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ1NjYWxlIHRvIGRhdGEgYm91bmRzJwogICAgfSksCiAgICBwYXJhbU5hbWU6ICJkZWZhdWx0WUV4dGVudHMiLAogICAgdmFsdWU6IGF4aXMuc2NhbGUuZGVmYXVsdFlFeHRlbnRzLAogICAgc2V0VmFsdWU6IG9uRGVmYXVsdFlFeHRlbnRzQ2hhbmdlCiAgfSksIGF4aXMuc2NhbGUuZGVmYXVsdFlFeHRlbnRzICYmIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2NvbW1vbi5OdW1iZXJJbnB1dE9wdGlvbiwgewogICAgZXJyb3I6ICFpc0JvdW5kc01hcmdpblZhbGlkICYmIGludmFsaWRCb3VuZHNNYXJnaW5NZXNzYWdlLAogICAgaXNJbnZhbGlkOiAhaXNCb3VuZHNNYXJnaW5WYWxpZCwKICAgIGxhYmVsOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgna2JuVmlzbGliVmlzVHlwZXMuY29udHJvbHMucG9pbnRTZXJpZXMudmFsdWVBeGVzLnNjYWxlVG9EYXRhQm91bmRzLmJvdW5kc01hcmdpbicsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdCb3VuZHMgbWFyZ2luJwogICAgfSksCiAgICBzdGVwOiAwLjEsCiAgICBtaW46IDAsCiAgICBwYXJhbU5hbWU6ICJib3VuZHNNYXJnaW4iLAogICAgdmFsdWU6IGF4aXMuc2NhbGUuYm91bmRzTWFyZ2luLAogICAgc2V0VmFsdWU6IHNldEJvdW5kc01hcmdpbgogIH0pKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfY29tbW9uLlN3aXRjaE9wdGlvbiwgewogICAgImRhdGEtdGVzdC1zdWJqIjogInlBeGlzU2V0WUV4dGVudHMiLAogICAgbGFiZWw6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdrYm5WaXNsaWJWaXNUeXBlcy5jb250cm9scy5wb2ludFNlcmllcy52YWx1ZUF4ZXMuc2V0QXhpc0V4dGVudHNMYWJlbCcsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdTZXQgYXhpcyBleHRlbnRzJwogICAgfSksCiAgICBwYXJhbU5hbWU6ICJzZXRZRXh0ZW50cyIsCiAgICB2YWx1ZTogYXhpcy5zY2FsZS5zZXRZRXh0ZW50cywKICAgIHNldFZhbHVlOiBvblNldFlFeHRlbnRzQ2hhbmdlCiAgfSksIGF4aXMuc2NhbGUuc2V0WUV4dGVudHMgJiYgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfeV9leHRlbnRzLllFeHRlbnRzLCB7CiAgICBzY2FsZTogYXhpcy5zY2FsZSwKICAgIHNldFNjYWxlOiBzZXRWYWx1ZUF4aXNTY2FsZSwKICAgIHNldE11bHRpcGxlVmFsaWRpdHk6IHNldE11bHRpcGxlVmFsaWRpdHkKICB9KSk7Cn0="},null]}