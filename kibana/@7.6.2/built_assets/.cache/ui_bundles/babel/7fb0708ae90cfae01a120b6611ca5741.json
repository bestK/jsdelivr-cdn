{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/security/public/views/management/role_mappings/edit_role_mapping/components/rule_editor_panel/json_rule_editor.js","dependencies":[{"path":"x-pack/legacy/plugins/security/public/views/management/role_mappings/edit_role_mapping/components/rule_editor_panel/json_rule_editor.js","mtime":1585205047244},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkpTT05SdWxlRWRpdG9yID0gdm9pZCAwOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKcmVxdWlyZSgiYnJhY2UvbW9kZS9qc29uIik7CgpyZXF1aXJlKCJicmFjZS90aGVtZS9naXRodWIiKTsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX3JlYWN0MiA9IHJlcXVpcmUoIkBrYm4vaTE4bi9yZWFjdCIpOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiQGtibi9pMThuIik7Cgp2YXIgX21vZGVsID0gcmVxdWlyZSgiLi4vLi4vLi4vbW9kZWwiKTsKCnZhciBfZG9jdW1lbnRhdGlvbl9saW5rcyA9IHJlcXVpcmUoIi4uLy4uLy4uL3NlcnZpY2VzL2RvY3VtZW50YXRpb25fbGlua3MiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsKfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsKICB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7Cn0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsKICB2YXIgX2FyciA9IFtdOwogIHZhciBfbiA9IHRydWU7CiAgdmFyIF9kID0gZmFsc2U7CiAgdmFyIF9lID0gdW5kZWZpbmVkOwoKICB0cnkgewogICAgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgewogICAgICBfYXJyLnB1c2goX3MudmFsdWUpOwoKICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOwogICAgfQogIH0gY2F0Y2ggKGVycikgewogICAgX2QgPSB0cnVlOwogICAgX2UgPSBlcnI7CiAgfSBmaW5hbGx5IHsKICAgIHRyeSB7CiAgICAgIGlmICghX24gJiYgX2lbInJldHVybiJdICE9IG51bGwpIF9pWyJyZXR1cm4iXSgpOwogICAgfSBmaW5hbGx5IHsKICAgICAgaWYgKF9kKSB0aHJvdyBfZTsKICAgIH0KICB9CgogIHJldHVybiBfYXJyOwp9CgpmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsKfQoKdmFyIEpTT05SdWxlRWRpdG9yID0gZnVuY3Rpb24gSlNPTlJ1bGVFZGl0b3IocHJvcHMpIHsKICB2YXIgX3VzZVN0YXRlID0gKDAsIF9yZWFjdC51c2VTdGF0ZSkoSlNPTi5zdHJpbmdpZnkocHJvcHMucnVsZXMgPyBwcm9wcy5ydWxlcy50b1JhdygpIDoge30sIG51bGwsIDIpKSwKICAgICAgX3VzZVN0YXRlMiA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZSwgMiksCiAgICAgIHJhd1J1bGVzID0gX3VzZVN0YXRlMlswXSwKICAgICAgc2V0UmF3UnVsZXMgPSBfdXNlU3RhdGUyWzFdOwoKICB2YXIgX3VzZVN0YXRlMyA9ICgwLCBfcmVhY3QudXNlU3RhdGUpKG51bGwpLAogICAgICBfdXNlU3RhdGU0ID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlMywgMiksCiAgICAgIHJ1bGVCdWlsZGVyRXJyb3IgPSBfdXNlU3RhdGU0WzBdLAogICAgICBzZXRSdWxlQnVpbGRlckVycm9yID0gX3VzZVN0YXRlNFsxXTsKCiAgZnVuY3Rpb24gb25SdWxlc0NoYW5nZSh1cGRhdGVkUnVsZXMpIHsKICAgIHNldFJhd1J1bGVzKHVwZGF0ZWRSdWxlcyk7IC8vIEZpcmUgb25DaGFuZ2Ugb25seSBpZiBydWxlcyBhcmUgdmFsaWQKCiAgICB0cnkgewogICAgICB2YXIgcnVsZUpTT04gPSBKU09OLnBhcnNlKHVwZGF0ZWRSdWxlcyk7CiAgICAgIHByb3BzLm9uQ2hhbmdlKCgwLCBfbW9kZWwuZ2VuZXJhdGVSdWxlc0Zyb21SYXcpKHJ1bGVKU09OKS5ydWxlcyk7CiAgICAgIHByb3BzLm9uVmFsaWRpdHlDaGFuZ2UodHJ1ZSk7CiAgICAgIHNldFJ1bGVCdWlsZGVyRXJyb3IobnVsbCk7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIGlmIChlIGluc3RhbmNlb2YgX21vZGVsLlJ1bGVCdWlsZGVyRXJyb3IpIHsKICAgICAgICBzZXRSdWxlQnVpbGRlckVycm9yKGUpOwogICAgICB9IGVsc2UgewogICAgICAgIHNldFJ1bGVCdWlsZGVyRXJyb3IobnVsbCk7CiAgICAgIH0KCiAgICAgIHByb3BzLm9uVmFsaWRpdHlDaGFuZ2UoZmFsc2UpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gcmVmb3JtYXRSdWxlcygpIHsKICAgIHRyeSB7CiAgICAgIHZhciBydWxlSlNPTiA9IEpTT04ucGFyc2UocmF3UnVsZXMpOwogICAgICBzZXRSYXdSdWxlcyhKU09OLnN0cmluZ2lmeShydWxlSlNPTiwgbnVsbCwgMikpOwogICAgfSBjYXRjaCAoaWdub3JlKSB7Ly8gaWdub3JlCiAgICB9CiAgfQoKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZvcm1Sb3csIHsKICAgIGlzSW52YWxpZDogQm9vbGVhbihydWxlQnVpbGRlckVycm9yKSwKICAgIGVycm9yOiBydWxlQnVpbGRlckVycm9yICYmIF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5zZWN1cml0eS5tYW5hZ2VtZW50LmVkaXRSb2xlTWFwcGluZy5KU09ORWRpdG9yUnVsZUVycm9yJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ0ludmFsaWQgcnVsZSBkZWZpbml0aW9uIGF0IHtydWxlTG9jYXRpb259OiB7ZXJyb3JNZXNzYWdlfScsCiAgICAgIHZhbHVlczogewogICAgICAgIHJ1bGVMb2NhdGlvbjogcnVsZUJ1aWxkZXJFcnJvci5ydWxlVHJhY2Uuam9pbignLicpLAogICAgICAgIGVycm9yTWVzc2FnZTogcnVsZUJ1aWxkZXJFcnJvci5tZXNzYWdlCiAgICAgIH0KICAgIH0pLAogICAgZnVsbFdpZHRoOiB0cnVlLAogICAgImRhdGEtdGVzdC1zdWJqIjogInJvbGVNYXBwaW5nc0pTT05FZGl0b3IiCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRnJhZ21lbnQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlDb2RlRWRpdG9yLCB7CiAgICAiYXJpYS1sYWJlbCI6ICcnLAogICAgbW9kZTogJ2pzb24nLAogICAgdGhlbWU6ICJnaXRodWIiLAogICAgdmFsdWU6IHJhd1J1bGVzLAogICAgb25DaGFuZ2U6IG9uUnVsZXNDaGFuZ2UsCiAgICB3aWR0aDogIjEwMCUiLAogICAgaGVpZ2h0OiAiYXV0byIsCiAgICBtaW5MaW5lczogNiwKICAgIG1heExpbmVzOiAzMCwKICAgIGlzUmVhZE9ubHk6IGZhbHNlLAogICAgc2V0T3B0aW9uczogewogICAgICBzaG93TGluZU51bWJlcnM6IHRydWUsCiAgICAgIHRhYlNpemU6IDIKICAgIH0sCiAgICBlZGl0b3JQcm9wczogewogICAgICAkYmxvY2tTY3JvbGxpbmc6IEluZmluaXR5CiAgICB9LAogICAgc2hvd0d1dHRlcjogdHJ1ZQogIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpU3BhY2VyLCB7CiAgICBzaXplOiAicyIKICB9KSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUJ1dHRvbiwgewogICAgaWNvblR5cGU6ICJicm9vbSIsCiAgICBvbkNsaWNrOiByZWZvcm1hdFJ1bGVzLAogICAgc2l6ZTogInMiCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgIGlkOiAieHBhY2suc2VjdXJpdHkubWFuYWdlbWVudC5lZGl0Um9sZU1hcHBpbmcuYXV0b0Zvcm1hdFJ1bGVUZXh0IiwKICAgIGRlZmF1bHRNZXNzYWdlOiAiUmVmb3JtYXQiCiAgfSkpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpU3BhY2VyLCB7CiAgICBzaXplOiAicyIKICB9KSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVRleHQsIHsKICAgIHNpemU6ICJzIgogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoInAiLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdDIuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgaWQ6ICJ4cGFjay5zZWN1cml0eS5tYW5hZ2VtZW50LmVkaXRSb2xlTWFwcGluZy5KU09ORWRpdG9ySGVscFRleHQiLAogICAgZGVmYXVsdE1lc3NhZ2U6ICJTcGVjaWZ5IHlvdXIgcnVsZXMgaW4gSlNPTiBmb3JtYXQgY29uc2lzdGVudCB3aXRoIHRoZSB7cm9sZU1hcHBpbmdBUEl9IiwKICAgIHZhbHVlczogewogICAgICByb2xlTWFwcGluZ0FQSTogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUxpbmssIHsKICAgICAgICBocmVmOiBfZG9jdW1lbnRhdGlvbl9saW5rcy5kb2N1bWVudGF0aW9uTGlua3MuZ2V0Um9sZU1hcHBpbmdBUElEb2NVcmwoKSwKICAgICAgICBleHRlcm5hbDogdHJ1ZSwKICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiCiAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Mi5Gb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICAgICAgaWQ6ICJ4cGFjay5zZWN1cml0eS5tYW5hZ2VtZW50LmVkaXRSb2xlTWFwcGluZy5KU09ORWRpdG9yRXNBcGkiLAogICAgICAgIGRlZmF1bHRNZXNzYWdlOiAiRWxhc3RpY3NlYXJjaCByb2xlIG1hcHBpbmcgQVBJLiIKICAgICAgfSkpCiAgICB9CiAgfSkpKSkpOwp9OwoKZXhwb3J0cy5KU09OUnVsZUVkaXRvciA9IEpTT05SdWxlRWRpdG9yOw=="},null]}