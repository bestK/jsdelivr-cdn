{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/ml/public/application/jobs/new_job/pages/components/job_details_step/components/advanced_section/components/model_plot/model_plot_switch.js","dependencies":[{"path":"x-pack/legacy/plugins/ml/public/application/jobs/new_job/pages/components/job_details_step/components/advanced_section/components/model_plot/model_plot_switch.js","mtime":1585205045892},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLk1vZGVsUGxvdFN3aXRjaCA9IHZvaWQgMDsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfaTE4biA9IHJlcXVpcmUoIkBrYm4vaTE4biIpOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfam9iX2NyZWF0b3JfY29udGV4dCA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uLy4uL2pvYl9jcmVhdG9yX2NvbnRleHQiKTsKCnZhciBfZGVzY3JpcHRpb24gPSByZXF1aXJlKCIuL2Rlc2NyaXB0aW9uIik7Cgp2YXIgX21tbF9jYWxsb3V0ID0gcmVxdWlyZSgiLi4vbW1sX2NhbGxvdXQiKTsKCnZhciBfYWdncmVnYXRpb25fdHlwZXMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9jb21tb24vY29uc3RhbnRzL2FnZ3JlZ2F0aW9uX3R5cGVzIik7Cgp2YXIgX2pvYl9jcmVhdG9yID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vLi4vLi4vLi4vY29tbW9uL2pvYl9jcmVhdG9yIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgewogIHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7Cn0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7CiAgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZSIpOwp9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7CiAgdmFyIF9hcnIgPSBbXTsKICB2YXIgX24gPSB0cnVlOwogIHZhciBfZCA9IGZhbHNlOwogIHZhciBfZSA9IHVuZGVmaW5lZDsKCiAgdHJ5IHsKICAgIGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsKICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTsKCiAgICAgIGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsKICAgIH0KICB9IGNhdGNoIChlcnIpIHsKICAgIF9kID0gdHJ1ZTsKICAgIF9lID0gZXJyOwogIH0gZmluYWxseSB7CiAgICB0cnkgewogICAgICBpZiAoIV9uICYmIF9pWyJyZXR1cm4iXSAhPSBudWxsKSBfaVsicmV0dXJuIl0oKTsKICAgIH0gZmluYWxseSB7CiAgICAgIGlmIChfZCkgdGhyb3cgX2U7CiAgICB9CiAgfQoKICByZXR1cm4gX2FycjsKfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgewogIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7Cn0KCnZhciBNb2RlbFBsb3RTd2l0Y2ggPSBmdW5jdGlvbiBNb2RlbFBsb3RTd2l0Y2goKSB7CiAgdmFyIF91c2VDb250ZXh0ID0gKDAsIF9yZWFjdC51c2VDb250ZXh0KShfam9iX2NyZWF0b3JfY29udGV4dC5Kb2JDcmVhdG9yQ29udGV4dCksCiAgICAgIGpvYkNyZWF0b3IgPSBfdXNlQ29udGV4dC5qb2JDcmVhdG9yLAogICAgICBqb2JDcmVhdG9yVXBkYXRlID0gX3VzZUNvbnRleHQuam9iQ3JlYXRvclVwZGF0ZSwKICAgICAgam9iQ3JlYXRvclVwZGF0ZWQgPSBfdXNlQ29udGV4dC5qb2JDcmVhdG9yVXBkYXRlZDsKCiAgdmFyIF91c2VTdGF0ZSA9ICgwLCBfcmVhY3QudXNlU3RhdGUpKGpvYkNyZWF0b3IubW9kZWxQbG90KSwKICAgICAgX3VzZVN0YXRlMiA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZSwgMiksCiAgICAgIG1vZGVsUGxvdEVuYWJsZWQgPSBfdXNlU3RhdGUyWzBdLAogICAgICBzZXRNb2RlbFBsb3RFbmFibGVkID0gX3VzZVN0YXRlMlsxXTsKCiAgdmFyIF91c2VTdGF0ZTMgPSAoMCwgX3JlYWN0LnVzZVN0YXRlKShmYWxzZSksCiAgICAgIF91c2VTdGF0ZTQgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUzLCAyKSwKICAgICAgZW5hYmxlZCA9IF91c2VTdGF0ZTRbMF0sCiAgICAgIHNldEVuYWJsZWQgPSBfdXNlU3RhdGU0WzFdOwoKICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoZnVuY3Rpb24gKCkgewogICAgam9iQ3JlYXRvci5tb2RlbFBsb3QgPSBtb2RlbFBsb3RFbmFibGVkOwogICAgam9iQ3JlYXRvclVwZGF0ZSgpOwogIH0sIFttb2RlbFBsb3RFbmFibGVkXSk7CiAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKGZ1bmN0aW9uICgpIHsKICAgIHZhciBhZ2dzID0gW19hZ2dyZWdhdGlvbl90eXBlcy5NTF9KT0JfQUdHUkVHQVRJT04uUkFSRV07IC8vIGRpc2FibGUgbW9kZWwgcGxvdCBzd2l0Y2ggaWYgdGhlIHdpemFyZCBpcyBjcmVhdGluZyBhIGNhdGVnb3JpemF0aW9uIGpvYgogICAgLy8gYW5kIGEgcmFyZSBkZXRlY3RvciBpcyBiZWluZyB1c2VkLgoKICAgIHZhciBpc1JhcmVDYXRlZ29yeUpvYiA9ICgwLCBfam9iX2NyZWF0b3IuaXNDYXRlZ29yaXphdGlvbkpvYkNyZWF0b3IpKGpvYkNyZWF0b3IpICYmIGpvYkNyZWF0b3IuYWdncmVnYXRpb25zLnNvbWUoZnVuY3Rpb24gKGFnZykgewogICAgICByZXR1cm4gYWdncy5pbmNsdWRlcyhhZ2cuaWQpOwogICAgfSk7CiAgICBzZXRFbmFibGVkKGlzUmFyZUNhdGVnb3J5Sm9iID09PSBmYWxzZSk7CiAgfSwgW2pvYkNyZWF0b3JVcGRhdGVkXSk7CgogIGZ1bmN0aW9uIHRvZ2dsZU1vZGVsUGxvdCgpIHsKICAgIHNldE1vZGVsUGxvdEVuYWJsZWQoIW1vZGVsUGxvdEVuYWJsZWQpOwogIH0KCiAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2Rlc2NyaXB0aW9uLkRlc2NyaXB0aW9uLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpU3dpdGNoLCB7CiAgICBuYW1lOiAic3dpdGNoIiwKICAgIGRpc2FibGVkOiBlbmFibGVkID09PSBmYWxzZSwKICAgIGNoZWNrZWQ6IG1vZGVsUGxvdEVuYWJsZWQsCiAgICBvbkNoYW5nZTogdG9nZ2xlTW9kZWxQbG90LAogICAgImRhdGEtdGVzdC1zdWJqIjogIm1sSm9iV2l6YXJkU3dpdGNoTW9kZWxQbG90IiwKICAgIGxhYmVsOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2subWwubmV3Sm9iLndpemFyZC5qb2JEZXRhaWxzU3RlcC5hZHZhbmNlZFNlY3Rpb24uZW5hYmxlTW9kZWxQbG90LnRpdGxlJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ0VuYWJsZSBtb2RlbCBwbG90JwogICAgfSkKICB9KSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX21tbF9jYWxsb3V0Lk1NTENhbGxvdXQsIG51bGwpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpU3BhY2VyLCBudWxsKSk7Cn07CgpleHBvcnRzLk1vZGVsUGxvdFN3aXRjaCA9IE1vZGVsUGxvdFN3aXRjaDs="},null]}