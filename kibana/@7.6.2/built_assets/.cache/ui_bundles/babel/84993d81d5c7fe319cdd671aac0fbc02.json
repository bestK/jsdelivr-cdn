{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/beats_management/public/pages/tag/create.js","dependencies":[{"path":"x-pack/legacy/plugins/beats_management/public/pages/tag/create.js","mtime":1585205043218},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKZnVuY3Rpb24gX3R5cGVvZjIob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09ICJzeW1ib2wiKSB7IF90eXBlb2YyID0gZnVuY3Rpb24gX3R5cGVvZjIob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mMiA9IGZ1bmN0aW9uIF90eXBlb2YyKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gInN5bWJvbCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mMihvYmopOyB9CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuVGFnQ3JlYXRlUGFnZSA9IHZvaWQgMDsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX2V1aV90aGVtZV9saWdodCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiQGVsYXN0aWMvZXVpL2Rpc3QvZXVpX3RoZW1lX2xpZ2h0Lmpzb24iKSk7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCnZhciBfcmVhY3QgPSByZXF1aXJlKCJAa2JuL2kxOG4vcmVhY3QiKTsKCnJlcXVpcmUoImJyYWNlL21vZGUveWFtbCIpOwoKcmVxdWlyZSgiYnJhY2UvdGhlbWUvZ2l0aHViIik7Cgp2YXIgX2xvZGFzaCA9IHJlcXVpcmUoImxvZGFzaCIpOwoKdmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9jb25maWd1cmF0aW9uX2Jsb2NrcyA9IHJlcXVpcmUoIi4uLy4uLy4uL2NvbW1vbi9jb25zdGFudHMvY29uZmlndXJhdGlvbl9ibG9ja3MiKTsKCnZhciBfcHJpbWFyeSA9IHJlcXVpcmUoIi4uLy4uL2NvbXBvbmVudHMvbGF5b3V0cy9wcmltYXJ5Iik7Cgp2YXIgX3RhZyA9IHJlcXVpcmUoIi4uLy4uL2NvbXBvbmVudHMvdGFnIik7Cgp2YXIgX3JhbmRvbV9ldWlfY29sb3IgPSByZXF1aXJlKCIuLi8uLi91dGlscy9yYW5kb21fZXVpX2NvbG9yIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9CgpmdW5jdGlvbiBfdHlwZW9mKG9iaikgewogIGlmICh0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIF90eXBlb2YyKFN5bWJvbC5pdGVyYXRvcikgPT09ICJzeW1ib2wiKSB7CiAgICBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsKICAgICAgcmV0dXJuIF90eXBlb2YyKG9iaik7CiAgICB9OwogIH0gZWxzZSB7CiAgICBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsKICAgICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogX3R5cGVvZjIob2JqKTsKICAgIH07CiAgfQoKICByZXR1cm4gX3R5cGVvZihvYmopOwp9CgpmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTsKfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkgewogIHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7Cn0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikgewogIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGl0ZXIpIHx8IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChpdGVyKSA9PT0gIltvYmplY3QgQXJndW1lbnRzXSIpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpOwp9CgpmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgewogICAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsKICAgICAgYXJyMltpXSA9IGFycltpXTsKICAgIH0KCiAgICByZXR1cm4gYXJyMjsKICB9Cn0KCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgewogIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsKCiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsKICAgIHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOwogICAgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgewogICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsKICAgIH0pOwogICAga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOwogIH0KCiAgcmV0dXJuIGtleXM7Cn0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7CiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsKICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OwoKICAgIGlmIChpICUgMikgewogICAgICBvd25LZXlzKHNvdXJjZSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7CiAgICAgIH0pOwogICAgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgewogICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOwogICAgfSBlbHNlIHsKICAgICAgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOwogICAgICB9KTsKICAgIH0KICB9CgogIHJldHVybiB0YXJnZXQ7Cn0KCmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsKICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgewogICAgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7CiAgfQp9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7CiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgewogICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsKICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsKICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsKICAgIGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOwogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOwogIH0KfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgewogIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOwogIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsKICByZXR1cm4gQ29uc3RydWN0b3I7Cn0KCmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsKICBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gIm9iamVjdCIgfHwgdHlwZW9mIGNhbGwgPT09ICJmdW5jdGlvbiIpKSB7CiAgICByZXR1cm4gY2FsbDsKICB9CgogIHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOwp9CgpmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgewogIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7CiAgICByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOwogIH07CiAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsKfQoKZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7CiAgaWYgKHNlbGYgPT09IHZvaWQgMCkgewogICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWQiKTsKICB9CgogIHJldHVybiBzZWxmOwp9CgpmdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsKICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09ICJmdW5jdGlvbiIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgewogICAgdGhyb3cgbmV3IFR5cGVFcnJvcigiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24iKTsKICB9CgogIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgewogICAgY29uc3RydWN0b3I6IHsKICAgICAgdmFsdWU6IHN1YkNsYXNzLAogICAgICB3cml0YWJsZTogdHJ1ZSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlCiAgICB9CiAgfSk7CiAgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7Cn0KCmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7CiAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7CiAgICBvLl9fcHJvdG9fXyA9IHA7CiAgICByZXR1cm4gbzsKICB9OwoKICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOwp9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7CiAgaWYgKGtleSBpbiBvYmopIHsKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgewogICAgICB2YWx1ZTogdmFsdWUsCiAgICAgIGVudW1lcmFibGU6IHRydWUsCiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgICAgd3JpdGFibGU6IHRydWUKICAgIH0pOwogIH0gZWxzZSB7CiAgICBvYmpba2V5XSA9IHZhbHVlOwogIH0KCiAgcmV0dXJuIG9iajsKfQoKdmFyIFRhZ0NyZWF0ZVBhZ2VDb21wb25lbnQgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkgewogIF9pbmhlcml0cyhUYWdDcmVhdGVQYWdlQ29tcG9uZW50LCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7CgogIGZ1bmN0aW9uIFRhZ0NyZWF0ZVBhZ2VDb21wb25lbnQocHJvcHMpIHsKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVGFnQ3JlYXRlUGFnZUNvbXBvbmVudCk7CgogICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoVGFnQ3JlYXRlUGFnZUNvbXBvbmVudCkuY2FsbCh0aGlzLCBwcm9wcykpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgInNhdmVUYWciLCBmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgbmV3VGFnLCBjcmVhdGVCbG9ja3NSZXNwb25zZSwgY3JlYXRpb25FcnJvcjsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKF90aGlzLnByb3BzLmNvbnRhaW5lcnMudGFncy51cHNlcnRUYWcoX3RoaXMuc3RhdGUudGFnKSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgbmV3VGFnID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgaWYgKG5ld1RhZykgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGFsZXJ0KF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5iZWF0c01hbmFnZW1lbnQuY3JlYXRlVGFnLmVycm9yU2F2aW5nVGFnVGl0bGUnLCB7CiAgICAgICAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ2Vycm9yIHNhdmluZyB0YWcnCiAgICAgICAgICAgICAgfSkpKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKF90aGlzLnByb3BzLmxpYnMuY29uZmlnQmxvY2tzLnVwc2VydChfdGhpcy5zdGF0ZS5jb25maWd1cmF0aW9uX2Jsb2Nrcy5tYXAoZnVuY3Rpb24gKGJsb2NrKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgYmxvY2ssIHsKICAgICAgICAgICAgICAgICAgdGFnOiBfdGhpcy5zdGF0ZS50YWcuaWQKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0pKSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY3JlYXRlQmxvY2tzUmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGNyZWF0aW9uRXJyb3IgPSBjcmVhdGVCbG9ja3NSZXNwb25zZS5yZXN1bHRzLnJlZHVjZShmdW5jdGlvbiAoZXJyLCByZXNwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIWVyciA/IGVyciA9IHJlc3AuZXJyb3IgPyByZXNwLmVycm9yLm1lc3NhZ2UgOiAnJyA6IGVycjsKICAgICAgICAgICAgICB9LCAnJyk7CgogICAgICAgICAgICAgIGlmICghY3JlYXRpb25FcnJvcikgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBhbGVydChjcmVhdGlvbkVycm9yKSk7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIF90aGlzLnByb3BzLmdvVG8oIi9vdmVydmlldy9jb25maWd1cmF0aW9uX3RhZ3MiKTsKCiAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAiZ2V0TnVtRXhjbHVzaXZlQ29uZmlndXJhdGlvbkJsb2NrcyIsIGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIF90aGlzLnN0YXRlLmNvbmZpZ3VyYXRpb25fYmxvY2tzLm1hcChmdW5jdGlvbiAoX3JlZikgewogICAgICAgIHZhciB0eXBlID0gX3JlZi50eXBlOwogICAgICAgIHJldHVybiBfY29uZmlndXJhdGlvbl9ibG9ja3MuVU5JUVVFTkVTU19FTkZPUkNJTkdfVFlQRVMuc29tZShmdW5jdGlvbiAodW5pcXVlVHlwZSkgewogICAgICAgICAgcmV0dXJuIHVuaXF1ZVR5cGUgPT09IHR5cGU7CiAgICAgICAgfSk7CiAgICAgIH0pLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBjdXIpIHsKICAgICAgICByZXR1cm4gY3VyID8gYWNjICsgMSA6IGFjYzsKICAgICAgfSwgMCk7CiAgICB9KTsKCiAgICBfdGhpcy5zdGF0ZSA9IHsKICAgICAgc2hvd0ZseW91dDogZmFsc2UsCiAgICAgIGN1cnJlbnRDb25maWdQYWdlOiAwLAogICAgICB0YWc6IHsKICAgICAgICBpZDogJycsCiAgICAgICAgbmFtZTogJycsCiAgICAgICAgY29sb3I6ICgwLCBfcmFuZG9tX2V1aV9jb2xvci5yYW5kb21FVUlDb2xvcikoX2V1aV90aGVtZV9saWdodC5kZWZhdWx0KSwKICAgICAgICBoYXNDb25maWd1cmF0aW9uQmxvY2tzVHlwZXM6IFtdCiAgICAgIH0sCiAgICAgIGNvbmZpZ3VyYXRpb25fYmxvY2tzOiBbXQogICAgfTsKICAgIHJldHVybiBfdGhpczsKICB9CgogIF9jcmVhdGVDbGFzcyhUYWdDcmVhdGVQYWdlQ29tcG9uZW50LCBbewogICAga2V5OiAicmVuZGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIGludGwgPSB0aGlzLnByb3BzLmludGw7CiAgICAgIHZhciBibG9ja1N0YXJ0aW5nSW5kZXggPSB0aGlzLnN0YXRlLmN1cnJlbnRDb25maWdQYWdlICogNTsKICAgICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9wcmltYXJ5LlByaW1hcnlMYXlvdXQsIHsKICAgICAgICBoaWRlQnJlYWRjcnVtYnM6IHRoaXMucHJvcHMubGlicy5mcmFtZXdvcmsudmVyc2lvbkdyZWF0ZXJUaGVuKCc2LjcuMCcpLAogICAgICAgIHRpdGxlOiBpbnRsLmZvcm1hdE1lc3NhZ2UoewogICAgICAgICAgaWQ6ICd4cGFjay5iZWF0c01hbmFnZW1lbnQudGFnLmNyZWF0ZVRhZ1RpdGxlJywKICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAnQ3JlYXRlIFRhZycKICAgICAgICB9KQogICAgICB9LCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudCgiZGl2IiwgbnVsbCwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3RhZy5UYWdFZGl0LCB7CiAgICAgICAgdGFnOiB0aGlzLnN0YXRlLnRhZywKICAgICAgICBjb25maWd1cmF0aW9uX2Jsb2NrczogewogICAgICAgICAgbGlzdDogdGhpcy5zdGF0ZS5jb25maWd1cmF0aW9uX2Jsb2Nrcy5zbGljZShibG9ja1N0YXJ0aW5nSW5kZXgsIDUgKyBibG9ja1N0YXJ0aW5nSW5kZXgpLAogICAgICAgICAgcGFnZTogdGhpcy5zdGF0ZS5jdXJyZW50Q29uZmlnUGFnZSwKICAgICAgICAgIHRvdGFsOiB0aGlzLnN0YXRlLmNvbmZpZ3VyYXRpb25fYmxvY2tzLmxlbmd0aAogICAgICAgIH0sCiAgICAgICAgb25UYWdDaGFuZ2U6IGZ1bmN0aW9uIG9uVGFnQ2hhbmdlKGZpZWxkLCB2YWx1ZSkgewogICAgICAgICAgcmV0dXJuIF90aGlzMi5zZXRTdGF0ZShmdW5jdGlvbiAob2xkU3RhdGUpIHsKICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICB0YWc6IF9vYmplY3RTcHJlYWQoe30sIG9sZFN0YXRlLnRhZywgX2RlZmluZVByb3BlcnR5KHt9LCBmaWVsZCwgdmFsdWUpKQogICAgICAgICAgICB9OwogICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBvbkNvbmZpZ0xpc3RDaGFuZ2U6IGZ1bmN0aW9uIG9uQ29uZmlnTGlzdENoYW5nZShpbmRleCkgewogICAgICAgICAgX3RoaXMyLnNldFN0YXRlKHsKICAgICAgICAgICAgY3VycmVudENvbmZpZ1BhZ2U6IGluZGV4CiAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIG9uQ29uZmlnQWRkT3JFZGl0OiBmdW5jdGlvbiBvbkNvbmZpZ0FkZE9yRWRpdChibG9jaykgewogICAgICAgICAgX3RoaXMyLnNldFN0YXRlKGZ1bmN0aW9uIChwcmV2aW91c1N0YXRlKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgY29uZmlndXJhdGlvbl9ibG9ja3M6IHByZXZpb3VzU3RhdGUuY29uZmlndXJhdGlvbl9ibG9ja3MuY29uY2F0KFtibG9ja10pCiAgICAgICAgICAgIH07CiAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIG9uQ29uZmlnUmVtb3ZlZDogZnVuY3Rpb24gb25Db25maWdSZW1vdmVkKGJsb2NrKSB7CiAgICAgICAgICBfdGhpczIuc2V0U3RhdGUoZnVuY3Rpb24gKHByZXZpb3VzU3RhdGUpIHsKICAgICAgICAgICAgdmFyIHNlbGVjdGVkSW5kZXggPSBwcmV2aW91c1N0YXRlLmNvbmZpZ3VyYXRpb25fYmxvY2tzLmZpbmRJbmRleChmdW5jdGlvbiAoYykgewogICAgICAgICAgICAgIHJldHVybiAoMCwgX2xvZGFzaC5pc0VxdWFsKShibG9jaywgYyk7CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgdmFyIGJsb2NrcyA9IF90b0NvbnN1bWFibGVBcnJheShwcmV2aW91c1N0YXRlLmNvbmZpZ3VyYXRpb25fYmxvY2tzKTsKCiAgICAgICAgICAgIGJsb2Nrcy5zcGxpY2Uoc2VsZWN0ZWRJbmRleCwgMSk7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgY29uZmlndXJhdGlvbl9ibG9ja3M6IGJsb2NrcwogICAgICAgICAgICB9OwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlTcGFjZXIsIHsKICAgICAgICBzaXplOiAibSIKICAgICAgfSksIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEdyb3VwLCBudWxsLCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICAgICAgZ3JvdzogZmFsc2UKICAgICAgfSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlCdXR0b24sIHsKICAgICAgICBmaWxsOiB0cnVlLAogICAgICAgIGRpc2FibGVkOiB0aGlzLnN0YXRlLnRhZy5uYW1lLnNlYXJjaCgvXltBLVphLXowLTk/ICxfLV0rJC8pID09PSAtMSB8fCB0aGlzLnN0YXRlLnRhZy5uYW1lID09PSAnJyB8fCB0aGlzLmdldE51bUV4Y2x1c2l2ZUNvbmZpZ3VyYXRpb25CbG9ja3MoKSA+IDEgLy8gfHwgdGhpcy5zdGF0ZS50YWcuY29uZmlndXJhdGlvbl9ibG9ja3MubGVuZ3RoID09PSAwCiAgICAgICAgLAogICAgICAgIG9uQ2xpY2s6IHRoaXMuc2F2ZVRhZwogICAgICB9LCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICAgIGlkOiAieHBhY2suYmVhdHNNYW5hZ2VtZW50LnRhZy5zYXZlQnV0dG9uTGFiZWwiLAogICAgICAgIGRlZmF1bHRNZXNzYWdlOiAiU2F2ZSIKICAgICAgfSkpKSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgICAgIGdyb3c6IGZhbHNlCiAgICAgIH0sIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQnV0dG9uRW1wdHksIHsKICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkgewogICAgICAgICAgcmV0dXJuIF90aGlzMi5wcm9wcy5nb1RvKCcvb3ZlcnZpZXcvY29uZmlndXJhdGlvbl90YWdzJyk7CiAgICAgICAgfQogICAgICB9LCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICAgIGlkOiAieHBhY2suYmVhdHNNYW5hZ2VtZW50LnRhZy5jYW5jZWxCdXR0b25MYWJlbCIsCiAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJDYW5jZWwiCiAgICAgIH0pKSkpKSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gVGFnQ3JlYXRlUGFnZUNvbXBvbmVudDsKfShfcmVhY3QyLmRlZmF1bHQuUHVyZUNvbXBvbmVudCk7Cgp2YXIgVGFnQ3JlYXRlUGFnZSA9ICgwLCBfcmVhY3QuaW5qZWN0STE4bikoVGFnQ3JlYXRlUGFnZUNvbXBvbmVudCk7CmV4cG9ydHMuVGFnQ3JlYXRlUGFnZSA9IFRhZ0NyZWF0ZVBhZ2U7"},null]}