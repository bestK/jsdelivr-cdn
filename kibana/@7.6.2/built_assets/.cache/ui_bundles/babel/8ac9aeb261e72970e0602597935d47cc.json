{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/beats_management/public/lib/adapters/elasticsearch/rest.js","dependencies":[{"path":"x-pack/legacy/plugins/beats_management/public/lib/adapters/elasticsearch/rest.js","mtime":1585205043206},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlJlc3RFbGFzdGljc2VhcmNoQWRhcHRlciA9IHZvaWQgMDsKCnZhciBfbG9kYXNoID0gcmVxdWlyZSgibG9kYXNoIik7Cgp2YXIgX25ld19wbGF0Zm9ybSA9IHJlcXVpcmUoInVpL25ld19wbGF0Zm9ybSIpOwoKdmFyIF9wdWJsaWMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvcGx1Z2lucy9kYXRhL3B1YmxpYyIpOwoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgewogIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7CiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsKICB9Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsKICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOwogICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOwogICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOwogICAgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7CiAgfQp9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7CiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7CiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOwogIHJldHVybiBDb25zdHJ1Y3RvcjsKfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgewogIGlmIChrZXkgaW4gb2JqKSB7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsKICAgICAgdmFsdWU6IHZhbHVlLAogICAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgIHdyaXRhYmxlOiB0cnVlCiAgICB9KTsKICB9IGVsc2UgewogICAgb2JqW2tleV0gPSB2YWx1ZTsKICB9CgogIHJldHVybiBvYmo7Cn0KCnZhciBnZXRBdXRvY29tcGxldGVQcm92aWRlciA9IGZ1bmN0aW9uIGdldEF1dG9jb21wbGV0ZVByb3ZpZGVyKGxhbmd1YWdlKSB7CiAgcmV0dXJuIF9uZXdfcGxhdGZvcm0ubnBTdGFydC5wbHVnaW5zLmRhdGEuYXV0b2NvbXBsZXRlLmdldFByb3ZpZGVyKGxhbmd1YWdlKTsKfTsKCnZhciBSZXN0RWxhc3RpY3NlYXJjaEFkYXB0ZXIgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBSZXN0RWxhc3RpY3NlYXJjaEFkYXB0ZXIoaW5kZXhQYXR0ZXJuTmFtZSkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlc3RFbGFzdGljc2VhcmNoQWRhcHRlcik7CgogICAgdGhpcy5pbmRleFBhdHRlcm5OYW1lID0gaW5kZXhQYXR0ZXJuTmFtZTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgImNhY2hlZEluZGV4UGF0dGVybiIsIG51bGwpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFJlc3RFbGFzdGljc2VhcmNoQWRhcHRlciwgW3sKICAgIGtleTogImlzS3VlcnlWYWxpZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaXNLdWVyeVZhbGlkKGt1ZXJ5KSB7CiAgICAgIHRyeSB7CiAgICAgICAgX3B1YmxpYy5lc0t1ZXJ5LmZyb21LdWVyeUV4cHJlc3Npb24oa3VlcnkpOwogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIHJldHVybiB0cnVlOwogICAgfQogIH0sIHsKICAgIGtleTogImNvbnZlcnRLdWVyeVRvRXNRdWVyeSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY29udmVydEt1ZXJ5VG9Fc1F1ZXJ5KGt1ZXJ5KSB7CiAgICAgIHZhciBhc3QsIGluZGV4UGF0dGVybjsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBjb252ZXJ0S3VlcnlUb0VzUXVlcnkkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGlmICh0aGlzLmlzS3VlcnlWYWxpZChrdWVyeSkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCAnJyk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgYXN0ID0gX3B1YmxpYy5lc0t1ZXJ5LmZyb21LdWVyeUV4cHJlc3Npb24oa3VlcnkpOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAodGhpcy5nZXRJbmRleFBhdHRlcm4oKSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgaW5kZXhQYXR0ZXJuID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBKU09OLnN0cmluZ2lmeShfcHVibGljLmVzS3VlcnkudG9FbGFzdGljc2VhcmNoUXVlcnkoYXN0LCBpbmRleFBhdHRlcm4pKSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIG51bGwsIHRoaXMpOwogICAgfQogIH0sIHsKICAgIGtleTogImdldFN1Z2dlc3Rpb25zIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRTdWdnZXN0aW9ucyhrdWVyeSwgc2VsZWN0aW9uU3RhcnQpIHsKICAgICAgdmFyIGF1dG9jb21wbGV0ZVByb3ZpZGVyLCBjb25maWcsIGluZGV4UGF0dGVybiwgZ2V0QXV0b2NvbXBsZXRlU3VnZ2VzdGlvbnMsIHJlc3VsdHM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gZ2V0U3VnZ2VzdGlvbnMkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGF1dG9jb21wbGV0ZVByb3ZpZGVyID0gZ2V0QXV0b2NvbXBsZXRlUHJvdmlkZXIoJ2t1ZXJ5Jyk7CgogICAgICAgICAgICAgIGlmIChhdXRvY29tcGxldGVQcm92aWRlcikgewogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgW10pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNvbmZpZyA9IHsKICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKHRoaXMuZ2V0SW5kZXhQYXR0ZXJuKCkpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGluZGV4UGF0dGVybiA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIGdldEF1dG9jb21wbGV0ZVN1Z2dlc3Rpb25zID0gYXV0b2NvbXBsZXRlUHJvdmlkZXIoewogICAgICAgICAgICAgICAgY29uZmlnOiBjb25maWcsCiAgICAgICAgICAgICAgICBpbmRleFBhdHRlcm5zOiBbaW5kZXhQYXR0ZXJuXSwKICAgICAgICAgICAgICAgIGJvb2xGaWx0ZXI6IG51bGwKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICByZXN1bHRzID0gZ2V0QXV0b2NvbXBsZXRlU3VnZ2VzdGlvbnMoewogICAgICAgICAgICAgICAgcXVlcnk6IGt1ZXJ5IHx8ICcnLAogICAgICAgICAgICAgICAgc2VsZWN0aW9uU3RhcnQ6IHNlbGVjdGlvblN0YXJ0LAogICAgICAgICAgICAgICAgc2VsZWN0aW9uRW5kOiBzZWxlY3Rpb25TdGFydAogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXN1bHRzKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBudWxsLCB0aGlzKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRJbmRleFBhdHRlcm4iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEluZGV4UGF0dGVybigpIHsKICAgICAgdmFyIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBnZXRJbmRleFBhdHRlcm4kKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGlmICghdGhpcy5jYWNoZWRJbmRleFBhdHRlcm4pIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIHRoaXMuY2FjaGVkSW5kZXhQYXR0ZXJuKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcChfbmV3X3BsYXRmb3JtLm5wU3RhcnQucGx1Z2lucy5kYXRhLmluZGV4UGF0dGVybnMuZ2V0RmllbGRzRm9yV2lsZGNhcmQoewogICAgICAgICAgICAgICAgcGF0dGVybjogdGhpcy5pbmRleFBhdHRlcm5OYW1lCiAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0My5zZW50OwoKICAgICAgICAgICAgICBpZiAoISgwLCBfbG9kYXNoLmlzRW1wdHkpKHJlcy5maWVsZHMpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDc7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICB0aGlzLmNhY2hlZEluZGV4UGF0dGVybiA9IHsKICAgICAgICAgICAgICAgIGZpZWxkczogcmVzLmZpZWxkcywKICAgICAgICAgICAgICAgIHRpdGxlOiAiIi5jb25jYXQodGhpcy5pbmRleFBhdHRlcm5OYW1lKQogICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIHRoaXMuY2FjaGVkSW5kZXhQYXR0ZXJuKTsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIG51bGwsIHRoaXMpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFJlc3RFbGFzdGljc2VhcmNoQWRhcHRlcjsKfSgpOwoKZXhwb3J0cy5SZXN0RWxhc3RpY3NlYXJjaEFkYXB0ZXIgPSBSZXN0RWxhc3RpY3NlYXJjaEFkYXB0ZXI7"},null]}