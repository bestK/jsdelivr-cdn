{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/file_upload/public/util/http_service.js","dependencies":[{"path":"x-pack/legacy/plugins/file_upload/public/util/http_service.js","mtime":1585205044193},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmh0dHAgPSBodHRwOwoKdmFyIF9zeXN0ZW1fYXBpID0gcmVxdWlyZSgidWkvc3lzdGVtX2FwaSIpOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiQGtibi9pMThuIik7Cgp2YXIgX2tpYmFuYV9zZXJ2aWNlcyA9IHJlcXVpcmUoIi4uL2tpYmFuYV9zZXJ2aWNlcyIpOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfQoKZnVuY3Rpb24gaHR0cChvcHRpb25zKSB7CiAgdmFyIHVybCwgaGVhZGVycywgYWxsSGVhZGVycywgYm9keSwgcGF5bG9hZDsKICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIGh0dHAkKF9jb250ZXh0KSB7CiAgICB3aGlsZSAoMSkgewogICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy51cmwpIHsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQoKICAgICAgICAgIHRocm93IF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5maWxlVXBsb2FkLmh0dHBTZXJ2aWNlLm5vVXJsJywgewogICAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ05vIFVSTCBwcm92aWRlZCcKICAgICAgICAgIH0pOwoKICAgICAgICBjYXNlIDI6CiAgICAgICAgICB1cmwgPSBvcHRpb25zLnVybCB8fCAnJzsKICAgICAgICAgIGhlYWRlcnMgPSAoMCwgX3N5c3RlbV9hcGkuYWRkU3lzdGVtQXBpSGVhZGVyKShfb2JqZWN0U3ByZWFkKHsKICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgJ2tibi12ZXJzaW9uJzogX2tpYmFuYV9zZXJ2aWNlcy5rYm5WZXJzaW9uCiAgICAgICAgICB9LCBvcHRpb25zLmhlYWRlcnMpKTsKICAgICAgICAgIGFsbEhlYWRlcnMgPSBvcHRpb25zLmhlYWRlcnMgPT09IHVuZGVmaW5lZCA/IGhlYWRlcnMgOiBfb2JqZWN0U3ByZWFkKHt9LCBvcHRpb25zLmhlYWRlcnMsIHt9LCBoZWFkZXJzKTsKICAgICAgICAgIGJvZHkgPSBvcHRpb25zLmRhdGEgPT09IHVuZGVmaW5lZCA/IG51bGwgOiBKU09OLnN0cmluZ2lmeShvcHRpb25zLmRhdGEpOwogICAgICAgICAgcGF5bG9hZCA9IHsKICAgICAgICAgICAgbWV0aG9kOiBvcHRpb25zLm1ldGhvZCB8fCAnR0VUJywKICAgICAgICAgICAgaGVhZGVyczogYWxsSGVhZGVycywKICAgICAgICAgICAgY3JlZGVudGlhbHM6ICdzYW1lLW9yaWdpbicKICAgICAgICAgIH07CgogICAgICAgICAgaWYgKGJvZHkgIT09IG51bGwpIHsKICAgICAgICAgICAgcGF5bG9hZC5ib2R5ID0gYm9keTsKICAgICAgICAgIH0KCiAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKGRvRmV0Y2godXJsLCBwYXlsb2FkKSk7CgogICAgICAgIGNhc2UgMTA6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dC5zZW50KTsKCiAgICAgICAgY2FzZSAxMToKICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgfQogICAgfQogIH0pOwp9CgpmdW5jdGlvbiBkb0ZldGNoKHVybCwgcGF5bG9hZCkgewogIHZhciByZXNwOwogIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gZG9GZXRjaCQoX2NvbnRleHQyKSB7CiAgICB3aGlsZSAoMSkgewogICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7CiAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKGZldGNoKHVybCwgcGF5bG9hZCkpOwoKICAgICAgICBjYXNlIDM6CiAgICAgICAgICByZXNwID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgcmVzcC5qc29uKCkpOwoKICAgICAgICBjYXNlIDc6CiAgICAgICAgICBfY29udGV4dDIucHJldiA9IDc7CiAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMCk7CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgewogICAgICAgICAgICBmYWlsdXJlczogW19pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5maWxlVXBsb2FkLmh0dHBTZXJ2aWNlLmZldGNoRXJyb3InLCB7CiAgICAgICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdFcnJvciBwZXJmb3JtaW5nIGZldGNoOiB7ZXJyb3J9JywKICAgICAgICAgICAgICB2YWx1ZXM6IHsKICAgICAgICAgICAgICAgIGVycm9yOiBfY29udGV4dDIudDAubWVzc2FnZQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSldCiAgICAgICAgICB9KTsKCiAgICAgICAgY2FzZSAxMDoKICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgIH0KICAgIH0KICB9LCBudWxsLCBudWxsLCBbWzAsIDddXSk7Cn0="},null]}