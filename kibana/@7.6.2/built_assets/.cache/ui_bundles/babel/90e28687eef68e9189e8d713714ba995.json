{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/kibana/public/discover/np_ready/angular/context/api/utils/generate_intervals.js","dependencies":[{"path":"src/legacy/core_plugins/kibana/public/discover/np_ready/angular/context/api/utils/generate_intervals.js","mtime":1585205039496},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmFzUGFpcnMgPSBhc1BhaXJzOwpleHBvcnRzLmdlbmVyYXRlSW50ZXJ2YWxzID0gZ2VuZXJhdGVJbnRlcnZhbHM7Cgp2YXIgX2tpYmFuYV9zZXJ2aWNlcyA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uLy4uL2tpYmFuYV9zZXJ2aWNlcyIpOwoKdmFyIF9tYXJrZWQgPQovKiNfX1BVUkVfXyovCnJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGFzUGFpcnMpOwoKZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgewogIHJldHVybiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5KGFycikgfHwgX25vbkl0ZXJhYmxlU3ByZWFkKCk7Cn0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHsKICB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZSIpOwp9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHsKICBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChpdGVyKSB8fCBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaXRlcikgPT09ICJbb2JqZWN0IEFyZ3VtZW50c10iKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTsKfQoKZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikgewogIGlmIChBcnJheS5pc0FycmF5KGFycikpIHsKICAgIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGFyci5sZW5ndGgpOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7CiAgICAgIGFycjJbaV0gPSBhcnJbaV07CiAgICB9CgogICAgcmV0dXJuIGFycjI7CiAgfQp9Ci8qKgogKiBHZW5lcmF0ZSBhIHNlcXVlbmNlIG9mIHBhaXJzIGZyb20gdGhlIGl0ZXJhYmxlIHRoYXQgbG9va3MgbGlrZQogKiBgW1t4XzAsIHhfMV0sIFt4XzEsIHhfMl0sIFt4XzIsIHhfM10sIC4uLiwgW3hfKG4tMSksIHhfbl1dYC4KICovCgoKZnVuY3Rpb24gYXNQYWlycyhpdGVyYWJsZSkgewogIHZhciBjdXJyZW50UGFpciwgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiwgX2RpZEl0ZXJhdG9yRXJyb3IsIF9pdGVyYXRvckVycm9yLCBfaXRlcmF0b3IsIF9zdGVwLCB2YWx1ZTsKCiAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIGFzUGFpcnMkKF9jb250ZXh0KSB7CiAgICB3aGlsZSAoMSkgewogICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgY3VycmVudFBhaXIgPSBbXTsKICAgICAgICAgIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlOwogICAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IgPSBmYWxzZTsKICAgICAgICAgIF9pdGVyYXRvckVycm9yID0gdW5kZWZpbmVkOwogICAgICAgICAgX2NvbnRleHQucHJldiA9IDQ7CiAgICAgICAgICBfaXRlcmF0b3IgPSBpdGVyYWJsZVtTeW1ib2wuaXRlcmF0b3JdKCk7CgogICAgICAgIGNhc2UgNjoKICAgICAgICAgIGlmIChfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSkgewogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTU7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQoKICAgICAgICAgIHZhbHVlID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICBjdXJyZW50UGFpciA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoY3VycmVudFBhaXIpLCBbdmFsdWVdKS5zbGljZSgtMik7CgogICAgICAgICAgaWYgKCEoY3VycmVudFBhaXIubGVuZ3RoID09PSAyKSkgewogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQoKICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgIHJldHVybiBjdXJyZW50UGFpcjsKCiAgICAgICAgY2FzZSAxMjoKICAgICAgICAgIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlOwogICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAxNToKICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyMTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIDE3OgogICAgICAgICAgX2NvbnRleHQucHJldiA9IDE3OwogICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSg0KTsKICAgICAgICAgIF9kaWRJdGVyYXRvckVycm9yID0gdHJ1ZTsKICAgICAgICAgIF9pdGVyYXRvckVycm9yID0gX2NvbnRleHQudDA7CgogICAgICAgIGNhc2UgMjE6CiAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjE7CiAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjI7CgogICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvci5yZXR1cm4gIT0gbnVsbCkgewogICAgICAgICAgICBfaXRlcmF0b3IucmV0dXJuKCk7CiAgICAgICAgICB9CgogICAgICAgIGNhc2UgMjQ6CiAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjQ7CgogICAgICAgICAgaWYgKCFfZGlkSXRlcmF0b3JFcnJvcikgewogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjc7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQoKICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yOwoKICAgICAgICBjYXNlIDI3OgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmZpbmlzaCgyNCk7CgogICAgICAgIGNhc2UgMjg6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQuZmluaXNoKDIxKTsKCiAgICAgICAgY2FzZSAyOToKICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgfQogICAgfQogIH0sIF9tYXJrZWQsIG51bGwsIFtbNCwgMTcsIDIxLCAyOV0sIFsyMiwsIDI0LCAyOF1dKTsKfQovKioKICogUmV0dXJucyBhIGl0ZXJhYmxlIGNvbnRhaW5pbmcgaW50ZXJ2YWxzIGBbc3RhcnQsZW5kXWAgZm9yIEVsYXN0aWNzZWFyY2ggZGF0ZSByYW5nZSBxdWVyaWVzCiAqIGRlcGVuZGluZyBvbiB0eXBlIChgc3VjY2Vzc29yc2Agb3IgYHByZWRlY2Vzc29yc2ApIGFuZCBzb3J0IChgYXNjYCwgYGRlc2NgKSB0aGVzZSBhcmUgYXNjZW5kaW5nIG9yIGRlc2NlbmRpbmcgaW50ZXJ2YWxzLgogKi8KCgpmdW5jdGlvbiBnZW5lcmF0ZUludGVydmFscyhvZmZzZXRzLCBzdGFydFRpbWUsIHR5cGUsIHNvcnQpIHsKICB2YXIgb2Zmc2V0U2lnbiA9IHNvcnQgPT09IF9raWJhbmFfc2VydmljZXMuU29ydERpcmVjdGlvbi5hc2MgJiYgdHlwZSA9PT0gJ3N1Y2Nlc3NvcnMnIHx8IHNvcnQgPT09IF9raWJhbmFfc2VydmljZXMuU29ydERpcmVjdGlvbi5kZXNjICYmIHR5cGUgPT09ICdwcmVkZWNlc3NvcnMnID8gMSA6IC0xOyAvLyBlbmRpbmcgd2l0aCBgbnVsbGAgb3BlbnMgdGhlIGxhc3QgaW50ZXJ2YWwKCiAgcmV0dXJuIGFzUGFpcnMoW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShvZmZzZXRzLm1hcChmdW5jdGlvbiAob2Zmc2V0KSB7CiAgICByZXR1cm4gc3RhcnRUaW1lICsgb2Zmc2V0ICogb2Zmc2V0U2lnbjsKICB9KSksIFtudWxsXSkpOwp9"},null]}