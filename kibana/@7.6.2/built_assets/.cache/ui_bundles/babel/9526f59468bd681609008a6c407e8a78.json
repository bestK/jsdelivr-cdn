{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/ml/public/application/components/color_range_legend/color_range_legend.js","dependencies":[{"path":"x-pack/legacy/plugins/ml/public/application/components/color_range_legend/color_range_legend.js","mtime":1585205045469},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkNvbG9yUmFuZ2VMZWdlbmQgPSB2b2lkIDA7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImQzIikpOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQovKgogKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lCiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBMaWNlbnNlZCB1bmRlciB0aGUgRWxhc3RpYyBMaWNlbnNlOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS4KICovCgoKdmFyIENPTE9SX1JBTkdFX1JFU09MVVRJT04gPSAxMDsKLyoqCiAqIENvbXBvbmVudCB0byByZW5kZXIgYSBsZWdlbmQgZm9yIGNvbG9yIHJhbmdlcyB0byBiZSB1c2VkIGZvciBjb2xvciBjb2RpbmcKICogdGFibGUgY2VsbHMgYW5kIHZpc3VhbGl6YXRpb25zLgogKgogKiBUaGlzIGN1cnJlbnQgdmVyc2lvbiBzdXBwb3J0cyBub3JtYWxpemVkIHZhbHVlIHJhbmdlcyAoMC0xKSBvbmx5LgogKgogKiBAcGFyYW0gcHJvcHMgQ29sb3JSYW5nZUxlZ2VuZFByb3BzCiAqLwoKdmFyIENvbG9yUmFuZ2VMZWdlbmQgPSBmdW5jdGlvbiBDb2xvclJhbmdlTGVnZW5kKF9yZWYpIHsKICB2YXIgY29sb3JSYW5nZSA9IF9yZWYuY29sb3JSYW5nZSwKICAgICAgX3JlZiRqdXN0aWZ5VGlja3MgPSBfcmVmLmp1c3RpZnlUaWNrcywKICAgICAganVzdGlmeVRpY2tzID0gX3JlZiRqdXN0aWZ5VGlja3MgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZiRqdXN0aWZ5VGlja3MsCiAgICAgIF9yZWYkc2hvd1RpY2tzID0gX3JlZi5zaG93VGlja3MsCiAgICAgIHNob3dUaWNrcyA9IF9yZWYkc2hvd1RpY2tzID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZiRzaG93VGlja3MsCiAgICAgIHRpdGxlID0gX3JlZi50aXRsZSwKICAgICAgX3JlZiR3aWR0aCA9IF9yZWYud2lkdGgsCiAgICAgIHdpZHRoID0gX3JlZiR3aWR0aCA9PT0gdm9pZCAwID8gMjUwIDogX3JlZiR3aWR0aDsKICB2YXIgZDNDb250YWluZXIgPSAoMCwgX3JlYWN0LnVzZVJlZikobnVsbCk7CgogIHZhciBzY2FsZSA9IF9kLmRlZmF1bHQucmFuZ2UoQ09MT1JfUkFOR0VfUkVTT0xVVElPTiArIDEpLm1hcChmdW5jdGlvbiAoZCkgewogICAgcmV0dXJuIHsKICAgICAgb2Zmc2V0OiBkIC8gQ09MT1JfUkFOR0VfUkVTT0xVVElPTiAqIDEwMCwKICAgICAgc3RvcENvbG9yOiBjb2xvclJhbmdlKGQgLyBDT0xPUl9SQU5HRV9SRVNPTFVUSU9OKQogICAgfTsKICB9KTsKCiAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKGZ1bmN0aW9uICgpIHsKICAgIGlmIChkM0NvbnRhaW5lci5jdXJyZW50ID09PSBudWxsKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB2YXIgd3JhcHBlckhlaWdodCA9IDMyOwogICAgdmFyIHdyYXBwZXJXaWR0aCA9IHdpZHRoOyAvLyB0b3A6IDIgICAgICAgIOKAlCBhZGp1c3QgdmVydGljYWwgYWxpZ25tZW50IHdpdGggdGl0bGUgdGV4dAogICAgLy8gYm90dG9tOiAyMCAgICDigJQgcm9vbSBmb3IgYXhpcyB0aWNrcyBhbmQgbGFiZWxzCiAgICAvLyBsZWZ0L3JpZ2h0OiAxIOKAlCByb29tIGZvciBmaXJzdCBhbmQgbGFzdCBheGlzIHRpY2sKICAgIC8vIHdoZW4ganVzdGlmeVRpY2tzIGlzIGVuYWJsZWQsIHRoZSBsZWZ0IG1hcmdpbiBpcyBpbmNyZWFzZWQgdG8gbm90IGN1dCBvZmYgdGhlIGZpcnN0IHRpY2sgbGFiZWwKCiAgICB2YXIgbWFyZ2luID0gewogICAgICB0b3A6IDIsCiAgICAgIGJvdHRvbTogMjAsCiAgICAgIGxlZnQ6IGp1c3RpZnlUaWNrcyB8fCAhc2hvd1RpY2tzID8gMSA6IDQsCiAgICAgIHJpZ2h0OiAxCiAgICB9OwogICAgdmFyIGxlZ2VuZFdpZHRoID0gd3JhcHBlcldpZHRoIC0gbWFyZ2luLmxlZnQgLSBtYXJnaW4ucmlnaHQ7CiAgICB2YXIgbGVnZW5kSGVpZ2h0ID0gd3JhcHBlckhlaWdodCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tOyAvLyByZW1vdmUsIHRoZW4gcmVkcmF3IHRoZSBsZWdlbmQKCiAgICBfZC5kZWZhdWx0LnNlbGVjdChkM0NvbnRhaW5lci5jdXJyZW50KS5zZWxlY3RBbGwoJyonKS5yZW1vdmUoKTsKCiAgICB2YXIgd3JhcHBlciA9IF9kLmRlZmF1bHQuc2VsZWN0KGQzQ29udGFpbmVyLmN1cnJlbnQpLmNsYXNzZWQoJ21sQ29sb3JSYW5nZUxlZ2VuZCcsIHRydWUpLmF0dHIoJ3dpZHRoJywgd3JhcHBlcldpZHRoKS5hdHRyKCdoZWlnaHQnLCB3cmFwcGVySGVpZ2h0KS5hcHBlbmQoJ2cnKS5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKCcgKyBtYXJnaW4ubGVmdCArICcsJyArIG1hcmdpbi50b3AgKyAnKScpOyAvLyBhcHBlbmQgZ3JhZGllbnQgYmFyCgoKICAgIHZhciBncmFkaWVudCA9IHdyYXBwZXIuYXBwZW5kKCdkZWZzJykuYXBwZW5kKCdsaW5lYXJHcmFkaWVudCcpLmF0dHIoJ2lkJywgJ21sQ29sb3JSYW5nZUdyYWRpZW50JykuYXR0cigneDEnLCAnMCUnKS5hdHRyKCd5MScsICcwJScpLmF0dHIoJ3gyJywgJzEwMCUnKS5hdHRyKCd5MicsICcwJScpLmF0dHIoJ3NwcmVhZE1ldGhvZCcsICdwYWQnKTsKICAgIHNjYWxlLmZvckVhY2goZnVuY3Rpb24gKGQpIHsKICAgICAgZ3JhZGllbnQuYXBwZW5kKCdzdG9wJykuYXR0cignb2Zmc2V0JywgIiIuY29uY2F0KGQub2Zmc2V0LCAiJSIpKS5hdHRyKCdzdG9wLWNvbG9yJywgZC5zdG9wQ29sb3IpLmF0dHIoJ3N0b3Atb3BhY2l0eScsIDEpOwogICAgfSk7CiAgICB3cmFwcGVyLmFwcGVuZCgncmVjdCcpLmF0dHIoJ3gxJywgMCkuYXR0cigneTEnLCAwKS5hdHRyKCd3aWR0aCcsIGxlZ2VuZFdpZHRoKS5hdHRyKCdoZWlnaHQnLCBsZWdlbmRIZWlnaHQpLnN0eWxlKCdmaWxsJywgJ3VybCgjbWxDb2xvclJhbmdlR3JhZGllbnQpJyk7CgogICAgdmFyIGF4aXNTY2FsZSA9IF9kLmRlZmF1bHQuc2NhbGUubGluZWFyKCkuZG9tYWluKFswLCAxXSkucmFuZ2UoWzAsIGxlZ2VuZFdpZHRoXSk7IC8vIFVzaW5nIHRoaXMgZm9ybWF0dGVyIGVuc3VyZXMgd2UgZ2V0IGUuZy4gYDBgIGFuZCBub3QgYDAuMGAsIGJ1dCBzdGlsbCBgMC4xYCwgYDAuMmAgZXRjLgoKCiAgICB2YXIgdGlja0Zvcm1hdCA9IF9kLmRlZmF1bHQuZm9ybWF0KCcnKTsKCiAgICB2YXIgbGVnZW5kQXhpcyA9IF9kLmRlZmF1bHQuc3ZnLmF4aXMoKS5zY2FsZShheGlzU2NhbGUpLm9yaWVudCgnYm90dG9tJykudGlja0Zvcm1hdCh0aWNrRm9ybWF0KS50aWNrU2l6ZShsZWdlbmRIZWlnaHQgKyA0KS50aWNrcyhsZWdlbmRXaWR0aCAvIDQwKTsKCiAgICB3cmFwcGVyLmFwcGVuZCgnZycpLmF0dHIoJ2NsYXNzJywgJ2xlZ2VuZCBheGlzJykuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgwLCAwKScpLmNhbGwobGVnZW5kQXhpcyk7IC8vIEFkanVzdCB0aGUgYWxpZ25tZW50IG9mIHRoZSBmaXJzdCBhbmQgbGFzdCB0aWNrIHRleHQKICAgIC8vIHNvIHRoYXQgdGhlIHRpY2sgbGFiZWxzIGRvbid0IG92ZXJmbG93IHRoZSBjb2xvciByYW5nZS4KCiAgICBpZiAoanVzdGlmeVRpY2tzIHx8ICFzaG93VGlja3MpIHsKICAgICAgdmFyIHRleHQgPSB3cmFwcGVyLnNlbGVjdEFsbCgndGV4dCcpWzBdOwoKICAgICAgaWYgKHRleHQubGVuZ3RoID4gMSkgewogICAgICAgIF9kLmRlZmF1bHQuc2VsZWN0KHRleHRbMF0pLnN0eWxlKCd0ZXh0LWFuY2hvcicsICdzdGFydCcpOwoKICAgICAgICBfZC5kZWZhdWx0LnNlbGVjdCh0ZXh0W3RleHQubGVuZ3RoIC0gMV0pLnN0eWxlKCd0ZXh0LWFuY2hvcicsICdlbmQnKTsKICAgICAgfQogICAgfQoKICAgIGlmICghc2hvd1RpY2tzKSB7CiAgICAgIHdyYXBwZXIuc2VsZWN0QWxsKCcuYXhpcyBsaW5lJykuc3R5bGUoJ2Rpc3BsYXknLCAnbm9uZScpOwogICAgfQogIH0sIFtKU09OLnN0cmluZ2lmeShzY2FsZSksIGQzQ29udGFpbmVyLmN1cnJlbnRdKTsKCiAgaWYgKHRpdGxlID09PSB1bmRlZmluZWQpIHsKICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJzdmciLCB7CiAgICAgIHJlZjogZDNDb250YWluZXIKICAgIH0pOwogIH0KCiAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4R3JvdXAsIHsKICAgIGd1dHRlclNpemU6ICJzIgogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgZ3JvdzogZmFsc2UKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpVGV4dCwgewogICAgc2l6ZTogInhzIgogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoInN0cm9uZyIsIG51bGwsIHRpdGxlKSkpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEl0ZW0sIHsKICAgIGdyb3c6IGZhbHNlCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgic3ZnIiwgewogICAgcmVmOiBkM0NvbnRhaW5lcgogIH0pKSk7Cn07CgpleHBvcnRzLkNvbG9yUmFuZ2VMZWdlbmQgPSBDb2xvclJhbmdlTGVnZW5kOw=="},null]}