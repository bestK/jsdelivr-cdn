{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/tile_map/public/components/tile_map_options.js","dependencies":[{"path":"src/legacy/core_plugins/tile_map/public/components/tile_map_options.js","mtime":1585205040111},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlRpbGVNYXBPcHRpb25zID0gVGlsZU1hcE9wdGlvbnM7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2V1aSA9IHJlcXVpcmUoIkBlbGFzdGljL2V1aSIpOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiQGtibi9pMThuIik7Cgp2YXIgX2NvbXBvbmVudHMgPSByZXF1aXJlKCIuLi8uLi8uLi9rYm5fdmlzbGliX3Zpc190eXBlcy9wdWJsaWMvY29tcG9uZW50cyIpOwoKdmFyIF93bXNfb3B0aW9ucyA9IHJlcXVpcmUoIi4vd21zX29wdGlvbnMiKTsKCnZhciBfbWFwX3R5cGVzID0gcmVxdWlyZSgiLi4vbWFwX3R5cGVzIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KLyoKICogTGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZSBvciBtb3JlIGNvbnRyaWJ1dG9yCiAqIGxpY2Vuc2UgYWdyZWVtZW50cy4gU2VlIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoCiAqIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0CiAqIG93bmVyc2hpcC4gRWxhc3RpY3NlYXJjaCBCLlYuIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXIKICogdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7IHlvdSBtYXkKICogbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiAqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQogKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwogKiB1bmRlciB0aGUgTGljZW5zZS4KICovCgoKZnVuY3Rpb24gVGlsZU1hcE9wdGlvbnMocHJvcHMpIHsKICB2YXIgc3RhdGVQYXJhbXMgPSBwcm9wcy5zdGF0ZVBhcmFtcywKICAgICAgc2V0VmFsdWUgPSBwcm9wcy5zZXRWYWx1ZSwKICAgICAgdmlzID0gcHJvcHMudmlzOwogICgwLCBfcmVhY3QudXNlRWZmZWN0KShmdW5jdGlvbiAoKSB7CiAgICBpZiAoIXN0YXRlUGFyYW1zLm1hcFR5cGUpIHsKICAgICAgc2V0VmFsdWUoJ21hcFR5cGUnLCB2aXMudHlwZS5lZGl0b3JDb25maWcuY29sbGVjdGlvbnMubWFwVHlwZXNbMF0pOwogICAgfQogIH0sIFtzZXRWYWx1ZSwgc3RhdGVQYXJhbXMubWFwVHlwZSwgdmlzLnR5cGUuZWRpdG9yQ29uZmlnLmNvbGxlY3Rpb25zLm1hcFR5cGVzXSk7CiAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlQYW5lbCwgewogICAgcGFkZGluZ1NpemU6ICJzIgogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2NvbXBvbmVudHMuU2VsZWN0T3B0aW9uLCB7CiAgICBsYWJlbDogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3RpbGVNYXAudmlzUGFyYW1zLm1hcFR5cGVMYWJlbCcsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdNYXAgdHlwZScKICAgIH0pLAogICAgb3B0aW9uczogdmlzLnR5cGUuZWRpdG9yQ29uZmlnLmNvbGxlY3Rpb25zLm1hcFR5cGVzLAogICAgcGFyYW1OYW1lOiAibWFwVHlwZSIsCiAgICB2YWx1ZTogc3RhdGVQYXJhbXMubWFwVHlwZSwKICAgIHNldFZhbHVlOiBzZXRWYWx1ZQogIH0pLCBzdGF0ZVBhcmFtcy5tYXBUeXBlID09PSBfbWFwX3R5cGVzLk1hcFR5cGVzLkhlYXRtYXAgPyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9jb21wb25lbnRzLlJhbmdlT3B0aW9uLCB7CiAgICBsYWJlbDogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3RpbGVNYXAudmlzUGFyYW1zLmNsdXN0ZXJTaXplTGFiZWwnLCB7CiAgICAgIGRlZmF1bHRNZXNzYWdlOiAnQ2x1c3RlciBzaXplJwogICAgfSksCiAgICBtYXg6IDMsCiAgICBtaW46IDEsCiAgICBwYXJhbU5hbWU6ICJoZWF0Q2x1c3RlclNpemUiLAogICAgc3RlcDogMC4xLAogICAgdmFsdWU6IHN0YXRlUGFyYW1zLmhlYXRDbHVzdGVyU2l6ZSwKICAgIHNldFZhbHVlOiBzZXRWYWx1ZQogIH0pIDogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfY29tcG9uZW50cy5TZWxlY3RPcHRpb24sIHsKICAgIGxhYmVsOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgndGlsZU1hcC52aXNQYXJhbXMuY29sb3JTY2hlbWFMYWJlbCcsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdDb2xvciBzY2hlbWEnCiAgICB9KSwKICAgIG9wdGlvbnM6IHZpcy50eXBlLmVkaXRvckNvbmZpZy5jb2xsZWN0aW9ucy5jb2xvclNjaGVtYXMsCiAgICBwYXJhbU5hbWU6ICJjb2xvclNjaGVtYSIsCiAgICB2YWx1ZTogc3RhdGVQYXJhbXMuY29sb3JTY2hlbWEsCiAgICBzZXRWYWx1ZTogc2V0VmFsdWUKICB9KSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfY29tcG9uZW50cy5CYXNpY09wdGlvbnMsIHByb3BzKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfY29tcG9uZW50cy5Td2l0Y2hPcHRpb24sIHsKICAgIGRpc2FibGVkOiAhdmlzLnR5cGUudmlzQ29uZmlnLmNhbkRlc2F0dXJhdGUsCiAgICBsYWJlbDogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3RpbGVNYXAudmlzUGFyYW1zLmRlc2F0dXJhdGVUaWxlc0xhYmVsJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ0Rlc2F0dXJhdGUgdGlsZXMnCiAgICB9KSwKICAgIHRvb2x0aXA6IF9pMThuLmkxOG4udHJhbnNsYXRlKCd0aWxlTWFwLnZpc1BhcmFtcy5yZWR1Y2VWaWJyYW5jeU9mVGlsZUNvbG9yc1RpcCcsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdSZWR1Y2UgdGhlIHZpYnJhbmN5IG9mIHRpbGUgY29sb3JzLiBUaGlzIGRvZXMgbm90IHdvcmsgaW4gYW55IHZlcnNpb24gb2YgSW50ZXJuZXQgRXhwbG9yZXIuJwogICAgfSksCiAgICBwYXJhbU5hbWU6ICJpc0Rlc2F0dXJhdGVkIiwKICAgIHZhbHVlOiBzdGF0ZVBhcmFtcy5pc0Rlc2F0dXJhdGVkLAogICAgc2V0VmFsdWU6IHNldFZhbHVlCiAgfSkpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpU3BhY2VyLCB7CiAgICBzaXplOiAicyIKICB9KSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfd21zX29wdGlvbnMuV21zT3B0aW9ucywgcHJvcHMpKTsKfQ=="},null]}