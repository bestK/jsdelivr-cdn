{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/console/public/np_ready/application/models/legacy_core_editor/create_readonly.js","dependencies":[{"path":"src/legacy/core_plugins/console/public/np_ready/application/models/legacy_core_editor/create_readonly.js","mtime":1585205039192},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmNyZWF0ZVJlYWRPbmx5QWNlRWRpdG9yID0gY3JlYXRlUmVhZE9ubHlBY2VFZGl0b3I7Cgp2YXIgX2xvZGFzaCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgibG9kYXNoIikpOwoKdmFyIF9icmFjZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiYnJhY2UiKSk7Cgp2YXIgT3V0cHV0TW9kZSA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoIi4vbW9kZS9vdXRwdXQiKSk7Cgp2YXIgX3NtYXJ0X3Jlc2l6ZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi9zbWFydF9yZXNpemUiKSk7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KLyoKICogTGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZSBvciBtb3JlIGNvbnRyaWJ1dG9yCiAqIGxpY2Vuc2UgYWdyZWVtZW50cy4gU2VlIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoCiAqIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0CiAqIG93bmVyc2hpcC4gRWxhc3RpY3NlYXJjaCBCLlYuIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXIKICogdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7IHlvdSBtYXkKICogbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiAqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQogKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwogKiB1bmRlciB0aGUgTGljZW5zZS4KICovCi8vIEB0cy1pZ25vcmUKCi8qKgogKiBOb3RlOiB1c2luZyByZWFkLW9ubHkgYWNlIGVkaXRvciBsZWFrcyB0aGUgQWNlIGVkaXRvciBBUEkgLSB1c2UgdGhpcyBhcyBzcGFyaW5nbHkgYXMgcG9zc2libGUgb3IKICogY3JlYXRlIGFuIGludGVyZmFjZSBmb3IgaXQgc28gdGhhdCB3ZSBkb24ndCByZWx5IGRpcmVjdGx5IG9uIHZlbmRvciBBUElzLgogKi8KCgpmdW5jdGlvbiBjcmVhdGVSZWFkT25seUFjZUVkaXRvcihlbGVtZW50KSB7CiAgdmFyIG91dHB1dCA9IF9icmFjZS5kZWZhdWx0LmFjZXF1aXJlKCdhY2UvYWNlJykuZWRpdChlbGVtZW50KTsKCiAgdmFyIG91dHB1dE1vZGUgPSBuZXcgT3V0cHV0TW9kZS5Nb2RlKCk7CiAgb3V0cHV0LiRibG9ja1Njcm9sbGluZyA9IEluZmluaXR5OwogIG91dHB1dC5yZXNpemUgPSAoMCwgX3NtYXJ0X3Jlc2l6ZS5kZWZhdWx0KShvdXRwdXQpOwoKICBvdXRwdXQudXBkYXRlID0gZnVuY3Rpb24gKHZhbCwgbW9kZSwgY2IpIHsKICAgIGlmICh0eXBlb2YgbW9kZSA9PT0gJ2Z1bmN0aW9uJykgewogICAgICBjYiA9IG1vZGU7CiAgICAgIG1vZGUgPSB2b2lkIDA7CiAgICB9CgogICAgdmFyIHNlc3Npb24gPSBvdXRwdXQuZ2V0U2Vzc2lvbigpOwogICAgc2Vzc2lvbi5zZXRNb2RlKHZhbCA/IG1vZGUgfHwgb3V0cHV0TW9kZSA6ICdhY2UvbW9kZS90ZXh0Jyk7CiAgICBzZXNzaW9uLnNldFZhbHVlKHZhbCk7CgogICAgaWYgKHR5cGVvZiBjYiA9PT0gJ2Z1bmN0aW9uJykgewogICAgICBzZXRUaW1lb3V0KGNiKTsKICAgIH0KICB9OwoKICBvdXRwdXQuYXBwZW5kID0gZnVuY3Rpb24gKHZhbCwgZm9sZFByZXZpb3VzLCBjYikgewogICAgaWYgKHR5cGVvZiBmb2xkUHJldmlvdXMgPT09ICdmdW5jdGlvbicpIHsKICAgICAgY2IgPSBmb2xkUHJldmlvdXM7CiAgICAgIGZvbGRQcmV2aW91cyA9IHRydWU7CiAgICB9CgogICAgaWYgKF9sb2Rhc2guZGVmYXVsdC5pc1VuZGVmaW5lZChmb2xkUHJldmlvdXMpKSB7CiAgICAgIGZvbGRQcmV2aW91cyA9IHRydWU7CiAgICB9CgogICAgdmFyIHNlc3Npb24gPSBvdXRwdXQuZ2V0U2Vzc2lvbigpOwogICAgdmFyIGxhc3RMaW5lID0gc2Vzc2lvbi5nZXRMZW5ndGgoKTsKCiAgICBpZiAoZm9sZFByZXZpb3VzKSB7CiAgICAgIG91dHB1dC5tb3ZlQ3Vyc29yVG8oTWF0aC5tYXgoMCwgbGFzdExpbmUgLSAxKSwgMCk7CiAgICB9CgogICAgc2Vzc2lvbi5pbnNlcnQoewogICAgICByb3c6IGxhc3RMaW5lLAogICAgICBjb2x1bW46IDAKICAgIH0sICdcbicgKyB2YWwpOwogICAgb3V0cHV0Lm1vdmVDdXJzb3JUbyhsYXN0TGluZSArIDEsIDApOwoKICAgIGlmICh0eXBlb2YgY2IgPT09ICdmdW5jdGlvbicpIHsKICAgICAgc2V0VGltZW91dChjYik7CiAgICB9CiAgfTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lCgoKICAoZnVuY3Rpb24gc2V0dXBTZXNzaW9uKHNlc3Npb24pIHsKICAgIHNlc3Npb24uc2V0TW9kZSgnYWNlL21vZGUvdGV4dCcpOwogICAgc2Vzc2lvbi5zZXRGb2xkU3R5bGUoJ21hcmtiZWdpbmVuZCcpOwogICAgc2Vzc2lvbi5zZXRUYWJTaXplKDIpOwogICAgc2Vzc2lvbi5zZXRVc2VXcmFwTW9kZSh0cnVlKTsKICB9KShvdXRwdXQuZ2V0U2Vzc2lvbigpKTsKCiAgb3V0cHV0LnNldFNob3dQcmludE1hcmdpbihmYWxzZSk7CiAgb3V0cHV0LnNldFJlYWRPbmx5KHRydWUpOwogIHJldHVybiBvdXRwdXQ7Cn0="},null]}