{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/ui/public/saved_objects/helpers/serialize_saved_object.js","dependencies":[{"path":"src/legacy/ui/public/saved_objects/helpers/serialize_saved_object.js","mtime":1585205041147},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnNlcmlhbGl6ZVNhdmVkT2JqZWN0ID0gc2VyaWFsaXplU2F2ZWRPYmplY3Q7Cgp2YXIgX2xvZGFzaCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgibG9kYXNoIikpOwoKdmFyIF9hbmd1bGFyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJhbmd1bGFyIikpOwoKdmFyIF9wdWJsaWMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi8uLi9wbHVnaW5zL2tpYmFuYV91dGlscy9wdWJsaWMiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgewogIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsKCiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsKICAgIHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOwogICAgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgewogICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsKICAgIH0pOwogICAga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOwogIH0KCiAgcmV0dXJuIGtleXM7Cn0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7CiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsKICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OwoKICAgIGlmIChpICUgMikgewogICAgICBvd25LZXlzKHNvdXJjZSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7CiAgICAgIH0pOwogICAgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgewogICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOwogICAgfSBlbHNlIHsKICAgICAgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOwogICAgICB9KTsKICAgIH0KICB9CgogIHJldHVybiB0YXJnZXQ7Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsKICBpZiAoa2V5IGluIG9iaikgewogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7CiAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgICB3cml0YWJsZTogdHJ1ZQogICAgfSk7CiAgfSBlbHNlIHsKICAgIG9ialtrZXldID0gdmFsdWU7CiAgfQoKICByZXR1cm4gb2JqOwp9CgpmdW5jdGlvbiBzZXJpYWxpemVTYXZlZE9iamVjdChzYXZlZE9iamVjdCwgY29uZmlnKSB7CiAgLy8gbWFwcGluZyBkZWZpbml0aW9uIGZvciB0aGUgZmllbGRzIHRoYXQgdGhpcyBvYmplY3Qgd2lsbCBleHBvc2UKICB2YXIgbWFwcGluZyA9ICgwLCBfcHVibGljLmV4cGFuZFNob3J0aGFuZCkoY29uZmlnLm1hcHBpbmcpOwogIHZhciBhdHRyaWJ1dGVzID0ge307CiAgdmFyIHJlZmVyZW5jZXMgPSBbXTsKCiAgX2xvZGFzaC5kZWZhdWx0LmZvck93bihtYXBwaW5nLCBmdW5jdGlvbiAoZmllbGRNYXBwaW5nLCBmaWVsZE5hbWUpIHsKICAgIGlmICh0eXBlb2YgZmllbGROYW1lICE9PSAnc3RyaW5nJykgewogICAgICByZXR1cm47CiAgICB9IC8vIEB0cy1pZ25vcmUKCgogICAgdmFyIHNhdmVkT2JqZWN0RmllbGRWYWwgPSBzYXZlZE9iamVjdFtmaWVsZE5hbWVdOwoKICAgIGlmIChzYXZlZE9iamVjdEZpZWxkVmFsICE9IG51bGwpIHsKICAgICAgYXR0cmlidXRlc1tmaWVsZE5hbWVdID0gZmllbGRNYXBwaW5nLl9zZXJpYWxpemUgPyBmaWVsZE1hcHBpbmcuX3NlcmlhbGl6ZShzYXZlZE9iamVjdEZpZWxkVmFsKSA6IHNhdmVkT2JqZWN0RmllbGRWYWw7CiAgICB9CiAgfSk7CgogIGlmIChzYXZlZE9iamVjdC5zZWFyY2hTb3VyY2UpIHsKICAgIHZhciBzZWFyY2hTb3VyY2VGaWVsZHMgPSBfbG9kYXNoLmRlZmF1bHQub21pdChzYXZlZE9iamVjdC5zZWFyY2hTb3VyY2UuZ2V0RmllbGRzKCksIFsnc29ydCcsICdzaXplJ10pOwoKICAgIGlmIChzZWFyY2hTb3VyY2VGaWVsZHMuaW5kZXgpIHsKICAgICAgLy8gc2VhcmNoU291cmNlRmllbGRzLmluZGV4IHdpbGwgbm9ybWFsbHkgYmUgYW4gSW5kZXhQYXR0ZXJuLCBidXQgY2FuIGJlIGEgc3RyaW5nIGluIHR3byBzY2VuYXJpb3M6CiAgICAgIC8vICgxKSBgaW5pdCgpYCAoYW5kIGJ5IGV4dGVuc2lvbiBgaHlkcmF0ZUluZGV4UGF0dGVybigpYCkgaGFzbid0IGJlZW4gY2FsbGVkIG9uICBTYXZlZCBPYmplY3QKICAgICAgLy8gKDIpIFRoZSBJbmRleFBhdHRlcm4gZG9lc24ndCBleGlzdCwgc28gd2UgZmFpbCB0byByZXNvbHZlIGl0IGluIGBoeWRyYXRlSW5kZXhQYXR0ZXJuKClgCiAgICAgIHZhciBpbmRleElkID0gdHlwZW9mIHNlYXJjaFNvdXJjZUZpZWxkcy5pbmRleCA9PT0gJ3N0cmluZycgPyBzZWFyY2hTb3VyY2VGaWVsZHMuaW5kZXggOiBzZWFyY2hTb3VyY2VGaWVsZHMuaW5kZXguaWQ7CiAgICAgIHZhciByZWZOYW1lID0gJ2tpYmFuYVNhdmVkT2JqZWN0TWV0YS5zZWFyY2hTb3VyY2VKU09OLmluZGV4JzsKICAgICAgcmVmZXJlbmNlcy5wdXNoKHsKICAgICAgICBuYW1lOiByZWZOYW1lLAogICAgICAgIHR5cGU6ICdpbmRleC1wYXR0ZXJuJywKICAgICAgICBpZDogaW5kZXhJZAogICAgICB9KTsKICAgICAgc2VhcmNoU291cmNlRmllbGRzID0gX29iamVjdFNwcmVhZCh7fSwgc2VhcmNoU291cmNlRmllbGRzLCB7CiAgICAgICAgaW5kZXhSZWZOYW1lOiByZWZOYW1lLAogICAgICAgIGluZGV4OiB1bmRlZmluZWQKICAgICAgfSk7CiAgICB9CgogICAgaWYgKHNlYXJjaFNvdXJjZUZpZWxkcy5maWx0ZXIpIHsKICAgICAgc2VhcmNoU291cmNlRmllbGRzID0gX29iamVjdFNwcmVhZCh7fSwgc2VhcmNoU291cmNlRmllbGRzLCB7CiAgICAgICAgZmlsdGVyOiBzZWFyY2hTb3VyY2VGaWVsZHMuZmlsdGVyLm1hcChmdW5jdGlvbiAoZmlsdGVyUm93LCBpKSB7CiAgICAgICAgICBpZiAoIWZpbHRlclJvdy5tZXRhIHx8ICFmaWx0ZXJSb3cubWV0YS5pbmRleCkgewogICAgICAgICAgICByZXR1cm4gZmlsdGVyUm93OwogICAgICAgICAgfQoKICAgICAgICAgIHZhciByZWZOYW1lID0gImtpYmFuYVNhdmVkT2JqZWN0TWV0YS5zZWFyY2hTb3VyY2VKU09OLmZpbHRlclsiLmNvbmNhdChpLCAiXS5tZXRhLmluZGV4Iik7CiAgICAgICAgICByZWZlcmVuY2VzLnB1c2goewogICAgICAgICAgICBuYW1lOiByZWZOYW1lLAogICAgICAgICAgICB0eXBlOiAnaW5kZXgtcGF0dGVybicsCiAgICAgICAgICAgIGlkOiBmaWx0ZXJSb3cubWV0YS5pbmRleAogICAgICAgICAgfSk7CiAgICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgZmlsdGVyUm93LCB7CiAgICAgICAgICAgIG1ldGE6IF9vYmplY3RTcHJlYWQoe30sIGZpbHRlclJvdy5tZXRhLCB7CiAgICAgICAgICAgICAgaW5kZXhSZWZOYW1lOiByZWZOYW1lLAogICAgICAgICAgICAgIGluZGV4OiB1bmRlZmluZWQKICAgICAgICAgICAgfSkKICAgICAgICAgIH0pOwogICAgICAgIH0pCiAgICAgIH0pOwogICAgfQoKICAgIGF0dHJpYnV0ZXMua2liYW5hU2F2ZWRPYmplY3RNZXRhID0gewogICAgICBzZWFyY2hTb3VyY2VKU09OOiBfYW5ndWxhci5kZWZhdWx0LnRvSnNvbihzZWFyY2hTb3VyY2VGaWVsZHMpCiAgICB9OwogIH0KCiAgcmV0dXJuIHsKICAgIGF0dHJpYnV0ZXM6IGF0dHJpYnV0ZXMsCiAgICByZWZlcmVuY2VzOiByZWZlcmVuY2VzCiAgfTsKfQ=="},null]}