{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/security/public/lib/kibana_privilege_calculator/kibana_feature_privilege_calculator.js","dependencies":[{"path":"x-pack/legacy/plugins/security/public/lib/kibana_privilege_calculator/kibana_feature_privilege_calculator.js","mtime":1585205047120},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLktpYmFuYUZlYXR1cmVQcml2aWxlZ2VDYWxjdWxhdG9yID0gdm9pZCAwOwoKdmFyIF9wcml2aWxlZ2VfY2FsY3VsYXRvcl91dGlscyA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uLy4uLy4uL3BsdWdpbnMvc2VjdXJpdHkvY29tbW9uL3ByaXZpbGVnZV9jYWxjdWxhdG9yX3V0aWxzIik7Cgp2YXIgX2NvbnN0YW50cyA9IHJlcXVpcmUoIi4uLy4uL3ZpZXdzL21hbmFnZW1lbnQvZWRpdF9yb2xlL2xpYi9jb25zdGFudHMiKTsKCnZhciBfcHJpdmlsZWdlX3V0aWxzID0gcmVxdWlyZSgiLi4vcHJpdmlsZWdlX3V0aWxzIik7Cgp2YXIgX2tpYmFuYV9wcml2aWxlZ2VfY2FsY3VsYXRvcl90eXBlcyA9IHJlcXVpcmUoIi4va2liYW5hX3ByaXZpbGVnZV9jYWxjdWxhdG9yX3R5cGVzIik7CgpmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTsKfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkgewogIHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7Cn0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikgewogIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGl0ZXIpIHx8IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChpdGVyKSA9PT0gIltvYmplY3QgQXJndW1lbnRzXSIpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpOwp9CgpmdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgewogICAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsKICAgICAgYXJyMltpXSA9IGFycltpXTsKICAgIH0KCiAgICByZXR1cm4gYXJyMjsKICB9Cn0KCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgewogIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsKCiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsKICAgIHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOwogICAgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgewogICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsKICAgIH0pOwogICAga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOwogIH0KCiAgcmV0dXJuIGtleXM7Cn0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7CiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsKICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OwoKICAgIGlmIChpICUgMikgewogICAgICBvd25LZXlzKHNvdXJjZSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7CiAgICAgIH0pOwogICAgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgewogICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOwogICAgfSBlbHNlIHsKICAgICAgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOwogICAgICB9KTsKICAgIH0KICB9CgogIHJldHVybiB0YXJnZXQ7Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsKICBpZiAoa2V5IGluIG9iaikgewogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7CiAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgICB3cml0YWJsZTogdHJ1ZQogICAgfSk7CiAgfSBlbHNlIHsKICAgIG9ialtrZXldID0gdmFsdWU7CiAgfQoKICByZXR1cm4gb2JqOwp9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7CiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsKICAgIHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOwogIH0KfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgewogIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsKICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07CiAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7CiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7CiAgICBpZiAoInZhbHVlIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsKICB9Cn0KCmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsKICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsKICBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7CiAgcmV0dXJuIENvbnN0cnVjdG9yOwp9Cgp2YXIgS2liYW5hRmVhdHVyZVByaXZpbGVnZUNhbGN1bGF0b3IgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBLaWJhbmFGZWF0dXJlUHJpdmlsZWdlQ2FsY3VsYXRvcihraWJhbmFQcml2aWxlZ2VzLCBnbG9iYWxQcml2aWxlZ2UsIGFzc2lnbmVkR2xvYmFsQmFzZUFjdGlvbnMsIHJhbmtlZEZlYXR1cmVQcml2aWxlZ2VzKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgS2liYW5hRmVhdHVyZVByaXZpbGVnZUNhbGN1bGF0b3IpOwoKICAgIHRoaXMua2liYW5hUHJpdmlsZWdlcyA9IGtpYmFuYVByaXZpbGVnZXM7CiAgICB0aGlzLmdsb2JhbFByaXZpbGVnZSA9IGdsb2JhbFByaXZpbGVnZTsKICAgIHRoaXMuYXNzaWduZWRHbG9iYWxCYXNlQWN0aW9ucyA9IGFzc2lnbmVkR2xvYmFsQmFzZUFjdGlvbnM7CiAgICB0aGlzLnJhbmtlZEZlYXR1cmVQcml2aWxlZ2VzID0gcmFua2VkRmVhdHVyZVByaXZpbGVnZXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoS2liYW5hRmVhdHVyZVByaXZpbGVnZUNhbGN1bGF0b3IsIFt7CiAgICBrZXk6ICJnZXRNb3N0UGVybWlzc2l2ZUZlYXR1cmVQcml2aWxlZ2UiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldE1vc3RQZXJtaXNzaXZlRmVhdHVyZVByaXZpbGVnZShwcml2aWxlZ2VTcGVjLCBiYXNlUHJpdmlsZWdlRXhwbGFuYXRpb24sIGZlYXR1cmVJZCwgaWdub3JlQXNzaWduZWQpIHsKICAgICAgdmFyIHNjZW5hcmlvcyA9IHRoaXMuYnVpbGRGZWF0dXJlUHJpdmlsZWdlU2NlbmFyaW9zKHByaXZpbGVnZVNwZWMsIGJhc2VQcml2aWxlZ2VFeHBsYW5hdGlvbiwgZmVhdHVyZUlkLCBpZ25vcmVBc3NpZ25lZCk7CiAgICAgIHZhciBmZWF0dXJlUHJpdmlsZWdlcyA9IHRoaXMucmFua2VkRmVhdHVyZVByaXZpbGVnZXNbZmVhdHVyZUlkXSB8fCBbXTsgLy8gaW5zcGVjdCBmZWF0dXJlIHByaXZpbGVnZXMgaW4gcmFua2VkIG9yZGVyIChtb3N0IHBlcm1pc3NpdmUgLT4gbGVhc3QgcGVybWlzc2l2ZSkKCiAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZTsKICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yID0gZmFsc2U7CiAgICAgIHZhciBfaXRlcmF0b3JFcnJvciA9IHVuZGVmaW5lZDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gZmVhdHVyZVByaXZpbGVnZXNbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7CiAgICAgICAgICB2YXIgZmVhdHVyZVByaXZpbGVnZSA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgdmFyIGFjdGlvbnMgPSB0aGlzLmtpYmFuYVByaXZpbGVnZXMuZ2V0RmVhdHVyZVByaXZpbGVnZXMoKS5nZXRBY3Rpb25zKGZlYXR1cmVJZCwgZmVhdHVyZVByaXZpbGVnZSk7IC8vIGNoZWNrIGlmIGFueSBvZiB0aGUgc2NlbmFyaW9zIHNhdGlzZnkgdGhlIHByaXZpbGVnZSAtIGZpcnN0IG9uZSB3aW5zLgoKICAgICAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IHRydWU7CiAgICAgICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IyID0gZmFsc2U7CiAgICAgICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IyID0gdW5kZWZpbmVkOwoKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIGZvciAodmFyIF9pdGVyYXRvcjIgPSBzY2VuYXJpb3NbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDI7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSAoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IHRydWUpIHsKICAgICAgICAgICAgICB2YXIgc2NlbmFyaW8gPSBfc3RlcDIudmFsdWU7CgogICAgICAgICAgICAgIGlmICgoMCwgX3ByaXZpbGVnZV9jYWxjdWxhdG9yX3V0aWxzLmFyZUFjdGlvbnNGdWxseUNvdmVyZWQpKHNjZW5hcmlvLmFjdGlvbnMsIGFjdGlvbnMpKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7CiAgICAgICAgICAgICAgICAgIGFjdHVhbFByaXZpbGVnZTogZmVhdHVyZVByaXZpbGVnZSwKICAgICAgICAgICAgICAgICAgYWN0dWFsUHJpdmlsZWdlU291cmNlOiBzY2VuYXJpby5hY3R1YWxQcml2aWxlZ2VTb3VyY2UsCiAgICAgICAgICAgICAgICAgIGlzRGlyZWN0bHlBc3NpZ25lZDogc2NlbmFyaW8uaXNEaXJlY3RseUFzc2lnbmVkLAogICAgICAgICAgICAgICAgICBkaXJlY3RseUFzc2lnbmVkRmVhdHVyZVByaXZpbGVnZU1vcmVQZXJtaXNzaXZlVGhhbkJhc2U6IHNjZW5hcmlvLmRpcmVjdGx5QXNzaWduZWRGZWF0dXJlUHJpdmlsZWdlTW9yZVBlcm1pc3NpdmVUaGFuQmFzZQogICAgICAgICAgICAgICAgfSwgdGhpcy5idWlsZFN1cGVyY2VkZWRGaWVsZHMoIXNjZW5hcmlvLmlzRGlyZWN0bHlBc3NpZ25lZCwgc2NlbmFyaW8uc3VwZXJzZWRlZFByaXZpbGVnZSwgc2NlbmFyaW8uc3VwZXJzZWRlZFByaXZpbGVnZVNvdXJjZSkpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICAgIF9kaWRJdGVyYXRvckVycm9yMiA9IHRydWU7CiAgICAgICAgICAgIF9pdGVyYXRvckVycm9yMiA9IGVycjsKICAgICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiAmJiBfaXRlcmF0b3IyLnJldHVybiAhPSBudWxsKSB7CiAgICAgICAgICAgICAgICBfaXRlcmF0b3IyLnJldHVybigpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IyKSB7CiAgICAgICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjI7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfZGlkSXRlcmF0b3JFcnJvciA9IHRydWU7CiAgICAgICAgX2l0ZXJhdG9yRXJyb3IgPSBlcnI7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiAmJiBfaXRlcmF0b3IucmV0dXJuICE9IG51bGwpIHsKICAgICAgICAgICAgX2l0ZXJhdG9yLnJldHVybigpOwogICAgICAgICAgfQogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IpIHsKICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICB2YXIgaXNHbG9iYWwgPSAoMCwgX3ByaXZpbGVnZV91dGlscy5pc0dsb2JhbFByaXZpbGVnZURlZmluaXRpb24pKHByaXZpbGVnZVNwZWMpOwogICAgICByZXR1cm4gewogICAgICAgIGFjdHVhbFByaXZpbGVnZTogX2NvbnN0YW50cy5OT19QUklWSUxFR0VfVkFMVUUsCiAgICAgICAgYWN0dWFsUHJpdmlsZWdlU291cmNlOiBpc0dsb2JhbCA/IF9raWJhbmFfcHJpdmlsZWdlX2NhbGN1bGF0b3JfdHlwZXMuUFJJVklMRUdFX1NPVVJDRS5HTE9CQUxfRkVBVFVSRSA6IF9raWJhbmFfcHJpdmlsZWdlX2NhbGN1bGF0b3JfdHlwZXMuUFJJVklMRUdFX1NPVVJDRS5TUEFDRV9GRUFUVVJFLAogICAgICAgIGlzRGlyZWN0bHlBc3NpZ25lZDogdHJ1ZQogICAgICB9OwogICAgfQogIH0sIHsKICAgIGtleTogImJ1aWxkRmVhdHVyZVByaXZpbGVnZVNjZW5hcmlvcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYnVpbGRGZWF0dXJlUHJpdmlsZWdlU2NlbmFyaW9zKHByaXZpbGVnZVNwZWMsIGJhc2VQcml2aWxlZ2VFeHBsYW5hdGlvbiwgZmVhdHVyZUlkLCBpZ25vcmVBc3NpZ25lZCkgewogICAgICB2YXIgc2NlbmFyaW9zID0gW107CiAgICAgIHZhciBpc0dsb2JhbFByaXZpbGVnZSA9ICgwLCBfcHJpdmlsZWdlX3V0aWxzLmlzR2xvYmFsUHJpdmlsZWdlRGVmaW5pdGlvbikocHJpdmlsZWdlU3BlYyk7CiAgICAgIHZhciBhc3NpZ25lZEdsb2JhbEZlYXR1cmVQcml2aWxlZ2UgPSB0aGlzLmdldEFzc2lnbmVkRmVhdHVyZVByaXZpbGVnZSh0aGlzLmdsb2JhbFByaXZpbGVnZSwgZmVhdHVyZUlkKTsKICAgICAgdmFyIGFzc2lnbmVkRmVhdHVyZVByaXZpbGVnZSA9IHRoaXMuZ2V0QXNzaWduZWRGZWF0dXJlUHJpdmlsZWdlKHByaXZpbGVnZVNwZWMsIGZlYXR1cmVJZCk7CiAgICAgIHZhciBoYXNBc3NpZ25lZEZlYXR1cmVQcml2aWxlZ2UgPSAhaWdub3JlQXNzaWduZWQgJiYgYXNzaWduZWRGZWF0dXJlUHJpdmlsZWdlICE9PSBfY29uc3RhbnRzLk5PX1BSSVZJTEVHRV9WQUxVRTsKICAgICAgc2NlbmFyaW9zLnB1c2goX29iamVjdFNwcmVhZCh7CiAgICAgICAgYWN0dWFsUHJpdmlsZWdlU291cmNlOiBfa2liYW5hX3ByaXZpbGVnZV9jYWxjdWxhdG9yX3R5cGVzLlBSSVZJTEVHRV9TT1VSQ0UuR0xPQkFMX0JBU0UsCiAgICAgICAgaXNEaXJlY3RseUFzc2lnbmVkOiBmYWxzZSwKICAgICAgICBhY3Rpb25zOiBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5hc3NpZ25lZEdsb2JhbEJhc2VBY3Rpb25zKQogICAgICB9LCB0aGlzLmJ1aWxkU3VwZXJjZWRlZEZpZWxkcyhoYXNBc3NpZ25lZEZlYXR1cmVQcml2aWxlZ2UsIGFzc2lnbmVkRmVhdHVyZVByaXZpbGVnZSwgaXNHbG9iYWxQcml2aWxlZ2UgPyBfa2liYW5hX3ByaXZpbGVnZV9jYWxjdWxhdG9yX3R5cGVzLlBSSVZJTEVHRV9TT1VSQ0UuR0xPQkFMX0ZFQVRVUkUgOiBfa2liYW5hX3ByaXZpbGVnZV9jYWxjdWxhdG9yX3R5cGVzLlBSSVZJTEVHRV9TT1VSQ0UuU1BBQ0VfRkVBVFVSRSkpKTsKCiAgICAgIGlmICghaXNHbG9iYWxQcml2aWxlZ2UgfHwgIWlnbm9yZUFzc2lnbmVkKSB7CiAgICAgICAgc2NlbmFyaW9zLnB1c2goX29iamVjdFNwcmVhZCh7CiAgICAgICAgICBhY3R1YWxQcml2aWxlZ2VTb3VyY2U6IF9raWJhbmFfcHJpdmlsZWdlX2NhbGN1bGF0b3JfdHlwZXMuUFJJVklMRUdFX1NPVVJDRS5HTE9CQUxfRkVBVFVSRSwKICAgICAgICAgIGFjdGlvbnM6IHRoaXMuZ2V0RmVhdHVyZUFjdGlvbnMoZmVhdHVyZUlkLCBhc3NpZ25lZEdsb2JhbEZlYXR1cmVQcml2aWxlZ2UpLAogICAgICAgICAgaXNEaXJlY3RseUFzc2lnbmVkOiBpc0dsb2JhbFByaXZpbGVnZSAmJiBoYXNBc3NpZ25lZEZlYXR1cmVQcml2aWxlZ2UKICAgICAgICB9LCB0aGlzLmJ1aWxkU3VwZXJjZWRlZEZpZWxkcyhoYXNBc3NpZ25lZEZlYXR1cmVQcml2aWxlZ2UgJiYgIWlzR2xvYmFsUHJpdmlsZWdlLCBhc3NpZ25lZEZlYXR1cmVQcml2aWxlZ2UsIF9raWJhbmFfcHJpdmlsZWdlX2NhbGN1bGF0b3JfdHlwZXMuUFJJVklMRUdFX1NPVVJDRS5TUEFDRV9GRUFUVVJFKSkpOwogICAgICB9CgogICAgICBpZiAoaXNHbG9iYWxQcml2aWxlZ2UpIHsKICAgICAgICByZXR1cm4gdGhpcy5yYW5rU2NlbmFyaW9zKHNjZW5hcmlvcyk7CiAgICAgIH0gLy8gT3RoZXJ3aXNlLCB0aGlzIGlzIGEgc3BhY2UgZmVhdHVyZSBwcml2aWxlZ2UKCgogICAgICB2YXIgaW5jbHVkZVNwYWNlQmFzZVNjZW5hcmlvID0gYmFzZVByaXZpbGVnZUV4cGxhbmF0aW9uLmFjdHVhbFByaXZpbGVnZVNvdXJjZSA9PT0gX2tpYmFuYV9wcml2aWxlZ2VfY2FsY3VsYXRvcl90eXBlcy5QUklWSUxFR0VfU09VUkNFLlNQQUNFX0JBU0UgfHwgYmFzZVByaXZpbGVnZUV4cGxhbmF0aW9uLnN1cGVyc2VkZWRQcml2aWxlZ2VTb3VyY2UgPT09IF9raWJhbmFfcHJpdmlsZWdlX2NhbGN1bGF0b3JfdHlwZXMuUFJJVklMRUdFX1NPVVJDRS5TUEFDRV9CQVNFOwogICAgICB2YXIgc3BhY2VCYXNlUHJpdmlsZWdlID0gYmFzZVByaXZpbGVnZUV4cGxhbmF0aW9uLnN1cGVyc2VkZWRQcml2aWxlZ2UgfHwgYmFzZVByaXZpbGVnZUV4cGxhbmF0aW9uLmFjdHVhbFByaXZpbGVnZTsKCiAgICAgIGlmIChpbmNsdWRlU3BhY2VCYXNlU2NlbmFyaW8pIHsKICAgICAgICBzY2VuYXJpb3MucHVzaChfb2JqZWN0U3ByZWFkKHsKICAgICAgICAgIGFjdHVhbFByaXZpbGVnZVNvdXJjZTogX2tpYmFuYV9wcml2aWxlZ2VfY2FsY3VsYXRvcl90eXBlcy5QUklWSUxFR0VfU09VUkNFLlNQQUNFX0JBU0UsCiAgICAgICAgICBpc0RpcmVjdGx5QXNzaWduZWQ6IGZhbHNlLAogICAgICAgICAgYWN0aW9uczogdGhpcy5nZXRCYXNlQWN0aW9ucyhfa2liYW5hX3ByaXZpbGVnZV9jYWxjdWxhdG9yX3R5cGVzLlBSSVZJTEVHRV9TT1VSQ0UuU1BBQ0VfQkFTRSwgc3BhY2VCYXNlUHJpdmlsZWdlKQogICAgICAgIH0sIHRoaXMuYnVpbGRTdXBlcmNlZGVkRmllbGRzKGhhc0Fzc2lnbmVkRmVhdHVyZVByaXZpbGVnZSwgYXNzaWduZWRGZWF0dXJlUHJpdmlsZWdlLCBfa2liYW5hX3ByaXZpbGVnZV9jYWxjdWxhdG9yX3R5cGVzLlBSSVZJTEVHRV9TT1VSQ0UuU1BBQ0VfRkVBVFVSRSkpKTsKICAgICAgfQoKICAgICAgaWYgKCFpZ25vcmVBc3NpZ25lZCkgewogICAgICAgIHZhciBhY3Rpb25zID0gdGhpcy5nZXRGZWF0dXJlQWN0aW9ucyhmZWF0dXJlSWQsIHRoaXMuZ2V0QXNzaWduZWRGZWF0dXJlUHJpdmlsZWdlKHByaXZpbGVnZVNwZWMsIGZlYXR1cmVJZCkpOwogICAgICAgIHZhciBkaXJlY3RseUFzc2lnbmVkRmVhdHVyZVByaXZpbGVnZU1vcmVQZXJtaXNzaXZlVGhhbkJhc2UgPSAhKDAsIF9wcml2aWxlZ2VfY2FsY3VsYXRvcl91dGlscy5hcmVBY3Rpb25zRnVsbHlDb3ZlcmVkKSh0aGlzLmFzc2lnbmVkR2xvYmFsQmFzZUFjdGlvbnMsIGFjdGlvbnMpOwogICAgICAgIHNjZW5hcmlvcy5wdXNoKHsKICAgICAgICAgIGFjdHVhbFByaXZpbGVnZVNvdXJjZTogX2tpYmFuYV9wcml2aWxlZ2VfY2FsY3VsYXRvcl90eXBlcy5QUklWSUxFR0VfU09VUkNFLlNQQUNFX0ZFQVRVUkUsCiAgICAgICAgICBpc0RpcmVjdGx5QXNzaWduZWQ6IHRydWUsCiAgICAgICAgICBkaXJlY3RseUFzc2lnbmVkRmVhdHVyZVByaXZpbGVnZU1vcmVQZXJtaXNzaXZlVGhhbkJhc2U6IGRpcmVjdGx5QXNzaWduZWRGZWF0dXJlUHJpdmlsZWdlTW9yZVBlcm1pc3NpdmVUaGFuQmFzZSwKICAgICAgICAgIGFjdGlvbnM6IGFjdGlvbnMKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMucmFua1NjZW5hcmlvcyhzY2VuYXJpb3MpOwogICAgfQogIH0sIHsKICAgIGtleTogInJhbmtTY2VuYXJpb3MiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJhbmtTY2VuYXJpb3Moc2NlbmFyaW9zKSB7CiAgICAgIHJldHVybiBzY2VuYXJpb3Muc29ydChmdW5jdGlvbiAoc2NlbmFyaW8xLCBzY2VuYXJpbzIpIHsKICAgICAgICByZXR1cm4gc2NlbmFyaW8xLmFjdHVhbFByaXZpbGVnZVNvdXJjZSAtIHNjZW5hcmlvMi5hY3R1YWxQcml2aWxlZ2VTb3VyY2U7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImdldEJhc2VBY3Rpb25zIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRCYXNlQWN0aW9ucyhzb3VyY2UsIHByaXZpbGVnZUlkKSB7CiAgICAgIHN3aXRjaCAoc291cmNlKSB7CiAgICAgICAgY2FzZSBfa2liYW5hX3ByaXZpbGVnZV9jYWxjdWxhdG9yX3R5cGVzLlBSSVZJTEVHRV9TT1VSQ0UuR0xPQkFMX0JBU0U6CiAgICAgICAgICByZXR1cm4gdGhpcy5hc3NpZ25lZEdsb2JhbEJhc2VBY3Rpb25zOwoKICAgICAgICBjYXNlIF9raWJhbmFfcHJpdmlsZWdlX2NhbGN1bGF0b3JfdHlwZXMuUFJJVklMRUdFX1NPVVJDRS5TUEFDRV9CQVNFOgogICAgICAgICAgcmV0dXJuIHRoaXMua2liYW5hUHJpdmlsZWdlcy5nZXRTcGFjZXNQcml2aWxlZ2VzKCkuZ2V0QWN0aW9ucyhwcml2aWxlZ2VJZCk7CgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIkNhbm5vdCBnZXQgYmFzZSBhY3Rpb25zIGZvciB1bnN1cHBvcnRlZCBwcml2aWxlZ2Ugc291cmNlICIuY29uY2F0KF9raWJhbmFfcHJpdmlsZWdlX2NhbGN1bGF0b3JfdHlwZXMuUFJJVklMRUdFX1NPVVJDRVtzb3VyY2VdKSk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRGZWF0dXJlQWN0aW9ucyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0RmVhdHVyZUFjdGlvbnMoZmVhdHVyZUlkLCBwcml2aWxlZ2VJZCkgewogICAgICByZXR1cm4gdGhpcy5raWJhbmFQcml2aWxlZ2VzLmdldEZlYXR1cmVQcml2aWxlZ2VzKCkuZ2V0QWN0aW9ucyhmZWF0dXJlSWQsIHByaXZpbGVnZUlkKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRBc3NpZ25lZEZlYXR1cmVQcml2aWxlZ2UiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEFzc2lnbmVkRmVhdHVyZVByaXZpbGVnZShwcml2aWxlZ2VTcGVjLCBmZWF0dXJlSWQpIHsKICAgICAgdmFyIGZlYXR1cmVFbnRyeSA9IHByaXZpbGVnZVNwZWMuZmVhdHVyZVtmZWF0dXJlSWRdIHx8IFtdOwogICAgICByZXR1cm4gZmVhdHVyZUVudHJ5WzBdIHx8IF9jb25zdGFudHMuTk9fUFJJVklMRUdFX1ZBTFVFOwogICAgfQogIH0sIHsKICAgIGtleTogImJ1aWxkU3VwZXJjZWRlZEZpZWxkcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYnVpbGRTdXBlcmNlZGVkRmllbGRzKGlzU3VwZXJjZWRpbmcsIHN1cGVyc2VkZWRQcml2aWxlZ2UsIHN1cGVyc2VkZWRQcml2aWxlZ2VTb3VyY2UpIHsKICAgICAgaWYgKCFpc1N1cGVyY2VkaW5nKSB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CgogICAgICByZXR1cm4gewogICAgICAgIHN1cGVyc2VkZWRQcml2aWxlZ2U6IHN1cGVyc2VkZWRQcml2aWxlZ2UsCiAgICAgICAgc3VwZXJzZWRlZFByaXZpbGVnZVNvdXJjZTogc3VwZXJzZWRlZFByaXZpbGVnZVNvdXJjZQogICAgICB9OwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEtpYmFuYUZlYXR1cmVQcml2aWxlZ2VDYWxjdWxhdG9yOwp9KCk7CgpleHBvcnRzLktpYmFuYUZlYXR1cmVQcml2aWxlZ2VDYWxjdWxhdG9yID0gS2liYW5hRmVhdHVyZVByaXZpbGVnZUNhbGN1bGF0b3I7"},null]}