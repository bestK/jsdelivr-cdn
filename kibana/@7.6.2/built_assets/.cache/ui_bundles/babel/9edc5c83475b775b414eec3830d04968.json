{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/index_management/public/app/components/mappings_editor/components/templates_form/templates_form.js","dependencies":[{"path":"x-pack/legacy/plugins/index_management/public/app/components/mappings_editor/components/templates_form/templates_form.js","mtime":1585205044429},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlRlbXBsYXRlc0Zvcm0gPSB2b2lkIDA7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCnZhciBfcmVhY3QyID0gcmVxdWlyZSgiQGtibi9pMThuL3JlYWN0Iik7Cgp2YXIgX2V1aSA9IHJlcXVpcmUoIkBlbGFzdGljL2V1aSIpOwoKdmFyIF9zaGFyZWRfaW1wb3J0cyA9IHJlcXVpcmUoIi4uLy4uL3NoYXJlZF9pbXBvcnRzIik7Cgp2YXIgX21hcHBpbmdzX3N0YXRlID0gcmVxdWlyZSgiLi4vLi4vbWFwcGluZ3Nfc3RhdGUiKTsKCnZhciBfdGVtcGxhdGVzX2Zvcm1fc2NoZW1hID0gcmVxdWlyZSgiLi90ZW1wbGF0ZXNfZm9ybV9zY2hlbWEiKTsKCnZhciBfZG9jdW1lbnRhdGlvbiA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uL3NlcnZpY2VzL2RvY3VtZW50YXRpb24iKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7CiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOwoKICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgewogICAgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7CiAgICBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7CiAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOwogICAgfSk7CiAgICBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7CiAgfQoKICByZXR1cm4ga2V5czsKfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsKICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgewogICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307CgogICAgaWYgKGkgJSAyKSB7CiAgICAgIG93bktleXMoc291cmNlLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsKICAgICAgfSk7CiAgICB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7CiAgICB9IGVsc2UgewogICAgICBvd25LZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7CiAgICAgIH0pOwogICAgfQogIH0KCiAgcmV0dXJuIHRhcmdldDsKfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgewogIGlmIChrZXkgaW4gb2JqKSB7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsKICAgICAgdmFsdWU6IHZhbHVlLAogICAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgIHdyaXRhYmxlOiB0cnVlCiAgICB9KTsKICB9IGVsc2UgewogICAgb2JqW2tleV0gPSB2YWx1ZTsKICB9CgogIHJldHVybiBvYmo7Cn0KCnZhciBzdHJpbmdpZnlKc29uID0gZnVuY3Rpb24gc3RyaW5naWZ5SnNvbihqc29uKSB7CiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoanNvbikgPyBKU09OLnN0cmluZ2lmeShqc29uLCBudWxsLCAyKSA6ICdbXG5cbl0nOwp9OwoKdmFyIGZvcm1TZXJpYWxpemVyID0gZnVuY3Rpb24gZm9ybVNlcmlhbGl6ZXIoZm9ybURhdGEpIHsKICB2YXIgZHluYW1pY1RlbXBsYXRlcyA9IGZvcm1EYXRhLmR5bmFtaWNUZW1wbGF0ZXM7CiAgdmFyIHBhcnNlZFRlbXBsYXRlczsKCiAgdHJ5IHsKICAgIHBhcnNlZFRlbXBsYXRlcyA9IEpTT04ucGFyc2UoZHluYW1pY1RlbXBsYXRlcyk7CgogICAgaWYgKCFBcnJheS5pc0FycmF5KHBhcnNlZFRlbXBsYXRlcykpIHsKICAgICAgLy8gVXNlciBwcm92aWRlZCBhbiBvYmplY3QsIGJ1dCB3ZSBuZWVkIGFuIGFycmF5IG9mIG9iamVjdHMKICAgICAgcGFyc2VkVGVtcGxhdGVzID0gW3BhcnNlZFRlbXBsYXRlc107CiAgICB9CiAgfSBjYXRjaCAoX3VudXNlZCkgewogICAgcGFyc2VkVGVtcGxhdGVzID0gW107CiAgfQoKICByZXR1cm4gewogICAgZHluYW1pY190ZW1wbGF0ZXM6IHBhcnNlZFRlbXBsYXRlcwogIH07Cn07Cgp2YXIgZm9ybURlc2VyaWFsaXplciA9IGZ1bmN0aW9uIGZvcm1EZXNlcmlhbGl6ZXIoZm9ybURhdGEpIHsKICB2YXIgZHluYW1pY190ZW1wbGF0ZXMgPSBmb3JtRGF0YS5keW5hbWljX3RlbXBsYXRlczsKICByZXR1cm4gewogICAgZHluYW1pY1RlbXBsYXRlczogc3RyaW5naWZ5SnNvbihkeW5hbWljX3RlbXBsYXRlcykKICB9Owp9OwoKdmFyIFRlbXBsYXRlc0Zvcm0gPSBfcmVhY3QuZGVmYXVsdC5tZW1vKGZ1bmN0aW9uIChfcmVmKSB7CiAgdmFyIGRlZmF1bHRWYWx1ZSA9IF9yZWYuZGVmYXVsdFZhbHVlOwogIHZhciBkaWRNb3VudFJlZiA9ICgwLCBfcmVhY3QudXNlUmVmKShmYWxzZSk7CgogIHZhciBfdXNlRm9ybSA9ICgwLCBfc2hhcmVkX2ltcG9ydHMudXNlRm9ybSkoewogICAgc2NoZW1hOiBfdGVtcGxhdGVzX2Zvcm1fc2NoZW1hLnRlbXBsYXRlc0Zvcm1TY2hlbWEsCiAgICBzZXJpYWxpemVyOiBmb3JtU2VyaWFsaXplciwKICAgIGRlc2VyaWFsaXplcjogZm9ybURlc2VyaWFsaXplciwKICAgIGRlZmF1bHRWYWx1ZTogZGVmYXVsdFZhbHVlCiAgfSksCiAgICAgIGZvcm0gPSBfdXNlRm9ybS5mb3JtOwoKICB2YXIgZGlzcGF0Y2ggPSAoMCwgX21hcHBpbmdzX3N0YXRlLnVzZURpc3BhdGNoKSgpOwogICgwLCBfcmVhY3QudXNlRWZmZWN0KShmdW5jdGlvbiAoKSB7CiAgICB2YXIgc3Vic2NyaXB0aW9uID0gZm9ybS5zdWJzY3JpYmUoZnVuY3Rpb24gKHVwZGF0ZWRUZW1wbGF0ZXMpIHsKICAgICAgZGlzcGF0Y2goewogICAgICAgIHR5cGU6ICd0ZW1wbGF0ZXMudXBkYXRlJywKICAgICAgICB2YWx1ZTogX29iamVjdFNwcmVhZCh7fSwgdXBkYXRlZFRlbXBsYXRlcywgewogICAgICAgICAgZm9ybTogZm9ybQogICAgICAgIH0pCiAgICAgIH0pOwogICAgfSk7CiAgICByZXR1cm4gc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlOwogIH0sIFtmb3JtXSk7CiAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKGZ1bmN0aW9uICgpIHsKICAgIGlmIChkaWRNb3VudFJlZi5jdXJyZW50KSB7CiAgICAgIC8vIElmIHRoZSBkZWZhdWx0VmFsdWUgaGFzIGNoYW5nZWQgKGl0IHByb2JhYmx5IG1lYW5zIHRoYXQgd2UgaGF2ZSBsb2FkZWQgYSBuZXcgSlNPTikKICAgICAgLy8gd2UgbmVlZCB0byByZXNldCB0aGUgZm9ybSB0byB1cGRhdGUgdGhlIGZpZWxkcyB2YWx1ZXMuCiAgICAgIGZvcm0ucmVzZXQoewogICAgICAgIHJlc2V0VmFsdWVzOiB0cnVlCiAgICAgIH0pOwogICAgfSBlbHNlIHsKICAgICAgLy8gQXZvaWQgcmVzZXRpbmcgdGhlIGZvcm0gb24gY29tcG9uZW50IG1vdW50LgogICAgICBkaWRNb3VudFJlZi5jdXJyZW50ID0gdHJ1ZTsKICAgIH0KICB9LCBbZGVmYXVsdFZhbHVlXSk7CiAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgIC8vIE9uIHVubW91bnQgPT4gc2F2ZSBpbiB0aGUgc3RhdGUgYSBzbmFwc2hvdCBvZiB0aGUgY3VycmVudCBmb3JtIGRhdGEuCiAgICAgIGRpc3BhdGNoKHsKICAgICAgICB0eXBlOiAndGVtcGxhdGVzLnNhdmUnCiAgICAgIH0pOwogICAgfTsKICB9LCBbXSk7CiAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlUZXh0LCB7CiAgICBzaXplOiAicyIsCiAgICBjb2xvcjogInN1YmR1ZWQiCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgIGlkOiAieHBhY2suaWR4TWdtdC5tYXBwaW5nc0VkaXRvci5keW5hbWljVGVtcGxhdGVzRGVzY3JpcHRpb24iLAogICAgZGVmYXVsdE1lc3NhZ2U6ICJVc2UgZHluYW1pYyB0ZW1wbGF0ZXMgdG8gZGVmaW5lIGN1c3RvbSBtYXBwaW5ncyB0aGF0IGNhbiBiZSBhcHBsaWVkIHRvIGR5bmFtaWNhbGx5IGFkZGVkIGZpZWxkcy4ge2RvY3NMaW5rfSIsCiAgICB2YWx1ZXM6IHsKICAgICAgZG9jc0xpbms6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlMaW5rLCB7CiAgICAgICAgaHJlZjogX2RvY3VtZW50YXRpb24uZG9jdW1lbnRhdGlvblNlcnZpY2UuZ2V0RHluYW1pY1RlbXBsYXRlc0xpbmsoKSwKICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiCiAgICAgIH0sIF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5pZHhNZ210Lm1hcHBpbmdzRWRpdG9yLmR5bmFtaWNUZW1wbGF0ZXNEb2N1bWVudGF0aW9uTGluaycsIHsKICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ0xlYXJuIG1vcmUuJwogICAgICB9KSkKICAgIH0KICB9KSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlTcGFjZXIsIHsKICAgIHNpemU6ICJtIgogIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9zaGFyZWRfaW1wb3J0cy5Gb3JtLCB7CiAgICBmb3JtOiBmb3JtLAogICAgaXNJbnZhbGlkOiBmb3JtLmlzU3VibWl0dGVkICYmICFmb3JtLmlzVmFsaWQsCiAgICBlcnJvcjogZm9ybS5nZXRFcnJvcnMoKQogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3NoYXJlZF9pbXBvcnRzLlVzZUZpZWxkLCB7CiAgICBwYXRoOiAiZHluYW1pY1RlbXBsYXRlcyIsCiAgICBjb21wb25lbnQ6IF9zaGFyZWRfaW1wb3J0cy5Kc29uRWRpdG9yRmllbGQsCiAgICBjb21wb25lbnRQcm9wczogewogICAgICBldWlDb2RlRWRpdG9yUHJvcHM6IHsKICAgICAgICBoZWlnaHQ6ICc2MDBweCcsCiAgICAgICAgJ2FyaWEtbGFiZWwnOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2suaWR4TWdtdC5tYXBwaW5nc0VkaXRvci5keW5hbWljVGVtcGxhdGVzRWRpdG9yQXJpYUxhYmVsJywgewogICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdEeW5hbWljIHRlbXBsYXRlcyBlZGl0b3InCiAgICAgICAgfSkKICAgICAgfQogICAgfQogIH0pKSk7Cn0pOwoKZXhwb3J0cy5UZW1wbGF0ZXNGb3JtID0gVGVtcGxhdGVzRm9ybTs="},null]}