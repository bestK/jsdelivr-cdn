{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/rollup/public/crud_app/sections/job_create/steps/step_review.js","dependencies":[{"path":"x-pack/legacy/plugins/rollup/public/crud_app/sections/job_create/steps/step_review.js","mtime":1585205047004},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlN0ZXBSZXZpZXcgPSBleHBvcnRzLlN0ZXBSZXZpZXdVaSA9IHZvaWQgMDsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfcHJvcFR5cGVzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJwcm9wLXR5cGVzIikpOwoKdmFyIF9yZWFjdDIgPSByZXF1aXJlKCJAa2JuL2kxOG4vcmVhY3QiKTsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX3NlcnZpY2VzID0gcmVxdWlyZSgiLi4vLi4vLi4vc2VydmljZXMiKTsKCnZhciBfY29tcG9uZW50cyA9IHJlcXVpcmUoIi4uLy4uL2NvbXBvbmVudHMiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGVsc2UgeyB2YXIgbmV3T2JqID0ge307IGlmIChvYmogIT0gbnVsbCkgeyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7IHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OyBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsgfSBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IH0gfSBuZXdPYmouZGVmYXVsdCA9IG9iajsgcmV0dXJuIG5ld09iajsgfSB9CgpmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSAic3ltYm9sIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gInN5bWJvbCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mKG9iaik7IH0KCmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7IH0gfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoInZhbHVlIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0KCmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09ICJmdW5jdGlvbiIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH0KCmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfQoKdmFyIEpPQl9ERVRBSUxTX1RBQlMgPSBbX2NvbXBvbmVudHMuSk9CX0RFVEFJTFNfVEFCX1NVTU1BUlksIF9jb21wb25lbnRzLkpPQl9ERVRBSUxTX1RBQl9URVJNUywgX2NvbXBvbmVudHMuSk9CX0RFVEFJTFNfVEFCX0hJU1RPR1JBTSwgX2NvbXBvbmVudHMuSk9CX0RFVEFJTFNfVEFCX01FVFJJQ1MsIF9jb21wb25lbnRzLkpPQl9ERVRBSUxTX1RBQl9SRVFVRVNUXTsKCnZhciBTdGVwUmV2aWV3VWkgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uIChfQ29tcG9uZW50KSB7CiAgX2luaGVyaXRzKFN0ZXBSZXZpZXdVaSwgX0NvbXBvbmVudCk7CgogIGZ1bmN0aW9uIFN0ZXBSZXZpZXdVaShwcm9wcykgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTdGVwUmV2aWV3VWkpOwoKICAgIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKFN0ZXBSZXZpZXdVaSkuY2FsbCh0aGlzLCBwcm9wcykpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgInNlbGVjdFRhYiIsIGZ1bmN0aW9uICh0YWIpIHsKICAgICAgX3RoaXMuc2V0U3RhdGUoewogICAgICAgIHNlbGVjdGVkVGFiOiB0YWIKICAgICAgfSk7CiAgICB9KTsKCiAgICBfdGhpcy5zdGF0ZSA9IHsKICAgICAgc2VsZWN0ZWRUYWI6IEpPQl9ERVRBSUxTX1RBQlNbMF0KICAgIH07CiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoU3RlcFJldmlld1VpLCBbewogICAga2V5OiAicmVuZGVyVGFicyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyVGFicygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgc2VsZWN0ZWRUYWIgPSB0aGlzLnN0YXRlLnNlbGVjdGVkVGFiOwogICAgICB2YXIgam9iID0gdGhpcy5wcm9wcy5qb2I7CiAgICAgIHZhciByZW5kZXJlZFRhYnMgPSBbXTsKICAgICAgSk9CX0RFVEFJTFNfVEFCUy5mb3JFYWNoKGZ1bmN0aW9uICh0YWIsIGluZGV4KSB7CiAgICAgICAgaWYgKHRhYiA9PT0gX2NvbXBvbmVudHMuSk9CX0RFVEFJTFNfVEFCX1RFUk1TICYmICFqb2IudGVybXMubGVuZ3RoKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBpZiAodGFiID09PSBfY29tcG9uZW50cy5KT0JfREVUQUlMU19UQUJfSElTVE9HUkFNICYmICFqb2IuaGlzdG9ncmFtLmxlbmd0aCkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgaWYgKHRhYiA9PT0gX2NvbXBvbmVudHMuSk9CX0RFVEFJTFNfVEFCX01FVFJJQ1MgJiYgIWpvYi5tZXRyaWNzLmxlbmd0aCkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdmFyIGlzU2VsZWN0ZWQgPSB0YWIgPT09IHNlbGVjdGVkVGFiOwogICAgICAgIHJlbmRlcmVkVGFicy5wdXNoKF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlUYWIsIHsKICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7CiAgICAgICAgICAgIHJldHVybiBfdGhpczIuc2VsZWN0VGFiKHRhYik7CiAgICAgICAgICB9LAogICAgICAgICAgaXNTZWxlY3RlZDogaXNTZWxlY3RlZCwKICAgICAgICAgICJkYXRhLXRlc3Qtc3ViaiI6ICJzdGVwUmV2aWV3VGFiIiwKICAgICAgICAgIGtleTogaW5kZXgKICAgICAgICB9LCBfY29tcG9uZW50cy50YWJUb0h1bWFuaXplZE1hcFt0YWJdKSk7CiAgICAgIH0pOwoKICAgICAgaWYgKCFyZW5kZXJlZFRhYnMubGVuZ3RoID09PSAxKSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KCiAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5GcmFnbWVudCwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVRhYnMsIG51bGwsIHJlbmRlcmVkVGFicyksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlTcGFjZXIsIHsKICAgICAgICBzaXplOiAibSIKICAgICAgfSkpOwogICAgfQogIH0sIHsKICAgIGtleTogInJlbmRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgICB2YXIgam9iID0gdGhpcy5wcm9wcy5qb2I7CiAgICAgIHZhciBzZWxlY3RlZFRhYiA9IHRoaXMuc3RhdGUuc2VsZWN0ZWRUYWI7CiAgICAgIHZhciBqc29uID0gKDAsIF9zZXJ2aWNlcy5zZXJpYWxpemVKb2IpKGpvYik7CiAgICAgIHZhciBlbmRwb2ludCA9ICJQVVQgX3JvbGx1cC9qb2IvIi5jb25jYXQoam9iLmlkKTsKICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LkZyYWdtZW50LCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpVGl0bGUsIHsKICAgICAgICAiZGF0YS10ZXN0LXN1YmoiOiAicm9sbHVwSm9iQ3JlYXRlUmV2aWV3VGl0bGUiCiAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImgyIiwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLkZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgICBpZDogInhwYWNrLnJvbGx1cEpvYnMuY3JlYXRlLnN0ZXBSZXZpZXdUaXRsZSIsCiAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJSZXZpZXcgZGV0YWlscyBmb3IgJ3tqb2JJZH0nIiwKICAgICAgICB2YWx1ZXM6IHsKICAgICAgICAgIGpvYklkOiBqb2IuaWQKICAgICAgICB9CiAgICAgIH0pKSksIHRoaXMucmVuZGVyVGFicygpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRXJyb3JCb3VuZGFyeSwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfY29tcG9uZW50cy5Kb2JEZXRhaWxzLCB7CiAgICAgICAgam9iOiBqb2IsCiAgICAgICAganNvbjoganNvbiwKICAgICAgICBlbmRwb2ludDogZW5kcG9pbnQsCiAgICAgICAgdGFiOiBzZWxlY3RlZFRhYgogICAgICB9KSkpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFN0ZXBSZXZpZXdVaTsKfShfcmVhY3QuQ29tcG9uZW50KTsKCmV4cG9ydHMuU3RlcFJldmlld1VpID0gU3RlcFJldmlld1VpOwoKX2RlZmluZVByb3BlcnR5KFN0ZXBSZXZpZXdVaSwgInByb3BUeXBlcyIsIHsKICBqb2I6IF9wcm9wVHlwZXMuZGVmYXVsdC5vYmplY3QuaXNSZXF1aXJlZAp9KTsKCnZhciBTdGVwUmV2aWV3ID0gKDAsIF9yZWFjdDIuaW5qZWN0STE4bikoU3RlcFJldmlld1VpKTsKZXhwb3J0cy5TdGVwUmV2aWV3ID0gU3RlcFJldmlldzs="},null]}