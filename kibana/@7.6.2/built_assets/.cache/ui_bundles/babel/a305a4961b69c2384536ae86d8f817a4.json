{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/ml/public/application/datavisualizer/index_based/components/field_data_card/metric_distribution_chart/metric_distribution_chart_data_builder.js","dependencies":[{"path":"x-pack/legacy/plugins/ml/public/application/datavisualizer/index_based/components/field_data_card/metric_distribution_chart/metric_distribution_chart_data_builder.js","mtime":1585205045684},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmJ1aWxkQ2hhcnREYXRhRnJvbVN0YXRzID0gYnVpbGRDaGFydERhdGFGcm9tU3RhdHM7Ci8qCiAqIENvcHlyaWdodCBFbGFzdGljc2VhcmNoIEIuVi4gYW5kL29yIGxpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUKICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgRWxhc3RpYyBMaWNlbnNlLgogKi8KCnZhciBNRVRSSUNfRElTVFJJQlVUSU9OX0NIQVJUX01JTl9CQVJfV0lEVEggPSAzOyAvLyBNaW5pbXVtIGJhciB3aWR0aCwgaW4gcGl4ZWxzLgoKdmFyIE1FVFJJQ19ESVNUUklCVVRJT05fQ0hBUlRfTUFYX0JBUl9IRUlHSFRfRkFDVE9SID0gMjA7IC8vIE1heCBiYXIgaGVpZ2h0IHJlbGF0aXZlIHRvIG1lZGlhbiBiYXIgaGVpZ2h0LgoKZnVuY3Rpb24gYnVpbGRDaGFydERhdGFGcm9tU3RhdHMoc3RhdHMsIGNoYXJ0V2lkdGgpIHsKICAvLyBQcm9jZXNzIHRoZSByYXcgcGVyY2VudGlsZXMgZGF0YSBzbyBpdCBpcyBpbiBhIHN1aXRhYmxlIGZvcm1hdCBmb3IgcGxvdHRpbmcgaW4gdGhlIG1ldHJpYyBkaXN0cmlidXRpb24gY2hhcnQuCiAgdmFyIGNoYXJ0RGF0YSA9IFtdOwogIHZhciBkaXN0cmlidXRpb24gPSBzdGF0cy5kaXN0cmlidXRpb247CgogIGlmIChkaXN0cmlidXRpb24gPT09IHVuZGVmaW5lZCkgewogICAgcmV0dXJuIGNoYXJ0RGF0YTsKICB9CgogIHZhciBwZXJjZW50aWxlcyA9IGRpc3RyaWJ1dGlvbi5wZXJjZW50aWxlczsKCiAgaWYgKHBlcmNlbnRpbGVzLmxlbmd0aCA9PT0gMCkgewogICAgcmV0dXJuIGNoYXJ0RGF0YTsKICB9IC8vIEFkanVzdCB4IGF4aXMgbWluIGFuZCBtYXggaWYgdGhlcmUgaXMgYSBzaW5nbGUgYmFyLgoKCiAgdmFyIG1pblggPSBwZXJjZW50aWxlc1swXS5taW5WYWx1ZTsKICB2YXIgbWF4WCA9IHBlcmNlbnRpbGVzW3BlcmNlbnRpbGVzLmxlbmd0aCAtIDFdLm1heFZhbHVlOwogIHZhciB4QXhpc01pbiA9IG1pblg7CiAgdmFyIHhBeGlzTWF4ID0gbWF4WDsKCiAgaWYgKG1heFggPT09IG1pblgpIHsKICAgIGlmIChtaW5YICE9PSAwKSB7CiAgICAgIHhBeGlzTWluID0gMDsKICAgICAgeEF4aXNNYXggPSAyICogbWluWDsKICAgIH0gZWxzZSB7CiAgICAgIHhBeGlzTWF4ID0gMTsKICAgIH0KICB9IC8vIEFkanVzdCB0aGUgcmlnaHQgaGFuZCB4IGNvb3JkaW5hdGVzIHNvIHRoYXQgZWFjaCBiYXIgaXMgYXQgbGVhc3QgTUVUUklDX0RJU1RSSUJVVElPTl9DSEFSVF9NSU5fQkFSX1dJRFRILgoKCiAgdmFyIG1pbkJhcldpZHRoID0gTUVUUklDX0RJU1RSSUJVVElPTl9DSEFSVF9NSU5fQkFSX1dJRFRIIC8gY2hhcnRXaWR0aCAqICh4QXhpc01heCAtIHhBeGlzTWluKTsKICB2YXIgcHJvY2Vzc2VkRGF0YSA9IFtdOwogIHZhciBsYXN0QmFyOwogIHBlcmNlbnRpbGVzLmZvckVhY2goZnVuY3Rpb24gKGRhdGEsIGluZGV4KSB7CiAgICBpZiAoaW5kZXggPT09IDApIHsKICAgICAgdmFyIGJhciA9IHsKICAgICAgICB4MDogZGF0YS5taW5WYWx1ZSwKICAgICAgICB4MTogTWF0aC5tYXgoZGF0YS5taW5WYWx1ZSArIG1pbkJhcldpZHRoLCBkYXRhLm1heFZhbHVlKSwKICAgICAgICB5OiAwLAogICAgICAgIC8vIFNldCBiZWxvdwogICAgICAgIGRhdGFNaW46IGRhdGEubWluVmFsdWUsCiAgICAgICAgZGF0YU1heDogZGF0YS5tYXhWYWx1ZSwKICAgICAgICBwZXJjZW50OiBkYXRhLnBlcmNlbnQsCiAgICAgICAgaXNNaW5XaWR0aDogZmFsc2UKICAgICAgfTsgLy8gU2NhbGUgdGhlIGhlaWdodCBvZiB0aGUgYmFyIGFjY29yZGluZyB0byB0aGUgcmFuZ2Ugb2YgZGF0YSB2YWx1ZXMgaW4gdGhlIGJhci4KCiAgICAgIGJhci55ID0gZGF0YS5wZXJjZW50IC8gKGJhci54MSAtIGJhci54MCkgKiBNYXRoLm1heCgxLCBtaW5CYXJXaWR0aCAvIE1hdGgubWF4KGRhdGEubWF4VmFsdWUgLSBkYXRhLm1pblZhbHVlLCAwLjUgKiBtaW5CYXJXaWR0aCkpOwogICAgICBiYXIuaXNNaW5XaWR0aCA9IGRhdGEubWF4VmFsdWUgPD0gZGF0YS5taW5WYWx1ZSArIG1pbkJhcldpZHRoOwogICAgICBwcm9jZXNzZWREYXRhLnB1c2goYmFyKTsKICAgICAgbGFzdEJhciA9IGJhcjsKICAgIH0gZWxzZSB7CiAgICAgIGlmIChsYXN0QmFyLmlzTWluV2lkdGggPT09IGZhbHNlIHx8IGRhdGEubWF4VmFsdWUgPiBsYXN0QmFyLngxKSB7CiAgICAgICAgdmFyIF9iYXIgPSB7CiAgICAgICAgICB4MDogbGFzdEJhci54MSwKICAgICAgICAgIHgxOiBNYXRoLm1heChsYXN0QmFyLngxICsgbWluQmFyV2lkdGgsIGRhdGEubWF4VmFsdWUpLAogICAgICAgICAgeTogMCwKICAgICAgICAgIC8vIFNldCBiZWxvdwogICAgICAgICAgZGF0YU1pbjogZGF0YS5taW5WYWx1ZSwKICAgICAgICAgIGRhdGFNYXg6IGRhdGEubWF4VmFsdWUsCiAgICAgICAgICBwZXJjZW50OiBkYXRhLnBlcmNlbnQsCiAgICAgICAgICBpc01pbldpZHRoOiBmYWxzZQogICAgICAgIH07IC8vIFNjYWxlIHRoZSBoZWlnaHQgb2YgdGhlIGJhciBhY2NvcmRpbmcgdG8gdGhlIHJhbmdlIG9mIGRhdGEgdmFsdWVzIGluIHRoZSBiYXIuCgogICAgICAgIF9iYXIueSA9IGRhdGEucGVyY2VudCAvIChfYmFyLngxIC0gX2Jhci54MCkgKiBNYXRoLm1heCgxLCBtaW5CYXJXaWR0aCAvIE1hdGgubWF4KGRhdGEubWF4VmFsdWUgLSBkYXRhLm1pblZhbHVlLCAwLjUgKiBtaW5CYXJXaWR0aCkpOwogICAgICAgIF9iYXIuaXNNaW5XaWR0aCA9IGRhdGEubWF4VmFsdWUgPD0gbGFzdEJhci54MSArIG1pbkJhcldpZHRoOwogICAgICAgIHByb2Nlc3NlZERhdGEucHVzaChfYmFyKTsKICAgICAgICBsYXN0QmFyID0gX2JhcjsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyBDb21iaW5lIGJhcnMgd2hpY2ggYXJlIGxlc3MgdGhhbiBtaW5CYXJXaWR0aCBhcGFydC4KICAgICAgICBsYXN0QmFyLnBlcmNlbnQgPSBsYXN0QmFyLnBlcmNlbnQgKyBkYXRhLnBlcmNlbnQ7CiAgICAgICAgbGFzdEJhci55ID0gbGFzdEJhci5wZXJjZW50IC8gKGxhc3RCYXIueDEgLSBsYXN0QmFyLngwKTsKICAgICAgICBsYXN0QmFyLmRhdGFNYXggPSBkYXRhLm1heFZhbHVlOwogICAgICB9CiAgICB9CiAgfSk7CgogIGlmIChtYXhYICE9PSBtaW5YKSB7CiAgICB4QXhpc01heCA9IHByb2Nlc3NlZERhdGFbcHJvY2Vzc2VkRGF0YS5sZW5ndGggLSAxXS54MTsKICB9IC8vIEFkanVzdCB0aGUgbWF4aW11bSBiYXIgaGVpZ2h0IHRvIGJlIChNRVRSSUNfRElTVFJJQlVUSU9OX0NIQVJUX01BWF9CQVJfSEVJR0hUX0ZBQ1RPUiAqIG1lZGlhbiBiYXIgaGVpZ2h0KS4KCgogIHZhciBiYXJIZWlnaHRzID0gcHJvY2Vzc2VkRGF0YS5tYXAoZnVuY3Rpb24gKGRhdGEpIHsKICAgIHJldHVybiBkYXRhLnk7CiAgfSk7CiAgYmFySGVpZ2h0cyA9IGJhckhlaWdodHMuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgcmV0dXJuIGEgLSBiOwogIH0pOwogIHZhciBtYXhCYXJIZWlnaHQgPSAwOwogIHZhciBwcm9jZXNzZWREYXRhTGVuZ3RoID0gcHJvY2Vzc2VkRGF0YS5sZW5ndGg7CgogIGlmIChNYXRoLmFicyhwcm9jZXNzZWREYXRhTGVuZ3RoICUgMikgPT09IDEpIHsKICAgIG1heEJhckhlaWdodCA9IE1FVFJJQ19ESVNUUklCVVRJT05fQ0hBUlRfTUFYX0JBUl9IRUlHSFRfRkFDVE9SICogYmFySGVpZ2h0c1tNYXRoLmZsb29yKHByb2Nlc3NlZERhdGFMZW5ndGggLyAyKV07CiAgfSBlbHNlIHsKICAgIG1heEJhckhlaWdodCA9IE1FVFJJQ19ESVNUUklCVVRJT05fQ0hBUlRfTUFYX0JBUl9IRUlHSFRfRkFDVE9SICogKGJhckhlaWdodHNbTWF0aC5mbG9vcihwcm9jZXNzZWREYXRhTGVuZ3RoIC8gMikgLSAxXSArIGJhckhlaWdodHNbTWF0aC5mbG9vcihwcm9jZXNzZWREYXRhTGVuZ3RoIC8gMildKSAvIDI7CiAgfQoKICBwcm9jZXNzZWREYXRhLmZvckVhY2goZnVuY3Rpb24gKGRhdGEpIHsKICAgIGRhdGEueSA9IE1hdGgubWluKGRhdGEueSwgbWF4QmFySGVpZ2h0KTsKICB9KTsgLy8gQ29udmVydCB0aGUgZGF0YSB0byB0aGUgZm9ybWF0IHVzZWQgYnkgdGhlIGNoYXJ0LgoKICBjaGFydERhdGEgPSBwcm9jZXNzZWREYXRhLm1hcChmdW5jdGlvbiAoZGF0YSkgewogICAgdmFyIHgwID0gZGF0YS54MCwKICAgICAgICB5ID0gZGF0YS55LAogICAgICAgIGRhdGFNaW4gPSBkYXRhLmRhdGFNaW4sCiAgICAgICAgZGF0YU1heCA9IGRhdGEuZGF0YU1heCwKICAgICAgICBwZXJjZW50ID0gZGF0YS5wZXJjZW50OwogICAgcmV0dXJuIHsKICAgICAgeDogeDAsCiAgICAgIHk6IHksCiAgICAgIGRhdGFNaW46IGRhdGFNaW4sCiAgICAgIGRhdGFNYXg6IGRhdGFNYXgsCiAgICAgIHBlcmNlbnQ6IHBlcmNlbnQKICAgIH07CiAgfSk7IC8vIEFkZCBhIGZpbmFsIHBvaW50IHRvIGRyb3AgdGhlIGN1cnZlIGJhY2sgdG8gdGhlIHkgYXhpcy4KCiAgdmFyIGxhc3QgPSBwcm9jZXNzZWREYXRhW3Byb2Nlc3NlZERhdGEubGVuZ3RoIC0gMV07CiAgY2hhcnREYXRhLnB1c2goewogICAgeDogbGFzdC54MSwKICAgIHk6IDAsCiAgICBkYXRhTWluOiBsYXN0LmRhdGFNaW4sCiAgICBkYXRhTWF4OiBsYXN0LmRhdGFNYXgsCiAgICBwZXJjZW50OiBsYXN0LnBlcmNlbnQKICB9KTsKICByZXR1cm4gY2hhcnREYXRhOwp9"},null]}