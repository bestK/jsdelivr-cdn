{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/canvas/canvas_plugin_src/functions/common/pie.js","dependencies":[{"path":"x-pack/legacy/plugins/canvas/canvas_plugin_src/functions/common/pie.js","mtime":1585205043350},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpOyB9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7IH0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikgeyBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChpdGVyKSB8fCBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaXRlcikgPT09ICJbb2JqZWN0IEFyZ3VtZW50c10iKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGFyci5sZW5ndGgpOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0gfQoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnBpZSA9IHBpZTsKCnZhciBfbG9kYXNoID0gcmVxdWlyZSgibG9kYXNoIik7Cgp2YXIgX2xvZGFzaDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImxvZGFzaC5rZXlieSIpKTsKCnZhciBfZ2V0X2NvbG9yc19mcm9tX3BhbGV0dGUgPSByZXF1aXJlKCIuLi8uLi8uLi9jb21tb24vbGliL2dldF9jb2xvcnNfZnJvbV9wYWxldHRlIik7Cgp2YXIgX2dldF9sZWdlbmRfY29uZmlnID0gcmVxdWlyZSgiLi4vLi4vLi4vY29tbW9uL2xpYi9nZXRfbGVnZW5kX2NvbmZpZyIpOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiLi4vLi4vLi4vaTE4biIpOwoKdmFyIF90eXBlcyA9IHJlcXVpcmUoIi4uLy4uLy4uL3R5cGVzIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgewogIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7CiAgICBkZWZhdWx0OiBvYmoKICB9Owp9Ci8qCiAqIENvcHlyaWdodCBFbGFzdGljc2VhcmNoIEIuVi4gYW5kL29yIGxpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUKICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgRWxhc3RpYyBMaWNlbnNlLgogKi8KLy8gQHRzLWlnbm9yZSBsb2Rhc2gua2V5YnkgaW1wb3J0cyBpbnZhbGlkIG1lbWJlciBmcm9tIEB0eXBlcy9sb2Rhc2gKLy8gQHRzLWlnbm9yZSB1bnR5cGVkIGxvY2FsCi8vIEB0cy1pZ25vcmUgdW50eXBlZCBsb2NhbAoKCmZ1bmN0aW9uIHBpZSgpIHsKICB2YXIgX3BpZSA9ICgwLCBfaTE4bi5nZXRGdW5jdGlvbkhlbHApKCkucGllLAogICAgICBoZWxwID0gX3BpZS5oZWxwLAogICAgICBhcmdIZWxwID0gX3BpZS5hcmdzOwogIHJldHVybiB7CiAgICBuYW1lOiAncGllJywKICAgIGFsaWFzZXM6IFtdLAogICAgdHlwZTogJ3JlbmRlcicsCiAgICBoZWxwOiBoZWxwLAogICAgY29udGV4dDogewogICAgICB0eXBlczogWydwb2ludHNlcmllcyddCiAgICB9LAogICAgYXJnczogewogICAgICBmb250OiB7CiAgICAgICAgdHlwZXM6IFsnc3R5bGUnXSwKICAgICAgICBoZWxwOiBhcmdIZWxwLmZvbnQsCiAgICAgICAgZGVmYXVsdDogJ3tmb250fScKICAgICAgfSwKICAgICAgaG9sZTogewogICAgICAgIHR5cGVzOiBbJ251bWJlciddLAogICAgICAgIGRlZmF1bHQ6IDAsCiAgICAgICAgaGVscDogYXJnSGVscC5ob2xlCiAgICAgIH0sCiAgICAgIGxhYmVsUmFkaXVzOiB7CiAgICAgICAgdHlwZXM6IFsnbnVtYmVyJ10sCiAgICAgICAgZGVmYXVsdDogMTAwLAogICAgICAgIGhlbHA6IGFyZ0hlbHAubGFiZWxSYWRpdXMKICAgICAgfSwKICAgICAgbGFiZWxzOiB7CiAgICAgICAgdHlwZXM6IFsnYm9vbGVhbiddLAogICAgICAgIGRlZmF1bHQ6IHRydWUsCiAgICAgICAgaGVscDogYXJnSGVscC5sYWJlbHMKICAgICAgfSwKICAgICAgbGVnZW5kOiB7CiAgICAgICAgdHlwZXM6IFsnc3RyaW5nJywgJ2Jvb2xlYW4nXSwKICAgICAgICBoZWxwOiBhcmdIZWxwLmxlZ2VuZCwKICAgICAgICBkZWZhdWx0OiBmYWxzZSwKICAgICAgICBvcHRpb25zOiBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KE9iamVjdC52YWx1ZXMoX3R5cGVzLkxlZ2VuZCkpLCBbZmFsc2VdKQogICAgICB9LAogICAgICBwYWxldHRlOiB7CiAgICAgICAgdHlwZXM6IFsncGFsZXR0ZSddLAogICAgICAgIGhlbHA6IGFyZ0hlbHAucGFsZXR0ZSwKICAgICAgICBkZWZhdWx0OiAne3BhbGV0dGV9JwogICAgICB9LAogICAgICByYWRpdXM6IHsKICAgICAgICB0eXBlczogWydzdHJpbmcnLCAnbnVtYmVyJ10sCiAgICAgICAgaGVscDogYXJnSGVscC5yYWRpdXMsCiAgICAgICAgZGVmYXVsdDogJ2F1dG8nCiAgICAgIH0sCiAgICAgIHNlcmllc1N0eWxlOiB7CiAgICAgICAgbXVsdGk6IHRydWUsCiAgICAgICAgdHlwZXM6IFsnc2VyaWVzU3R5bGUnXSwKICAgICAgICBoZWxwOiBhcmdIZWxwLnNlcmllc1N0eWxlCiAgICAgIH0sCiAgICAgIHRpbHQ6IHsKICAgICAgICB0eXBlczogWydudW1iZXInXSwKICAgICAgICBkZWZhdWx0OiAxLAogICAgICAgIGhlbHA6IGFyZ0hlbHAudGlsdAogICAgICB9CiAgICB9LAogICAgZm46IGZ1bmN0aW9uIGZuKGNvbnRleHQsIGFyZ3MpIHsKICAgICAgdmFyIHRpbHQgPSBhcmdzLnRpbHQsCiAgICAgICAgICByYWRpdXMgPSBhcmdzLnJhZGl1cywKICAgICAgICAgIGxhYmVsUmFkaXVzID0gYXJncy5sYWJlbFJhZGl1cywKICAgICAgICAgIGxhYmVscyA9IGFyZ3MubGFiZWxzLAogICAgICAgICAgaG9sZSA9IGFyZ3MuaG9sZSwKICAgICAgICAgIGxlZ2VuZCA9IGFyZ3MubGVnZW5kLAogICAgICAgICAgcGFsZXR0ZSA9IGFyZ3MucGFsZXR0ZSwKICAgICAgICAgIGZvbnQgPSBhcmdzLmZvbnQsCiAgICAgICAgICBzZXJpZXNTdHlsZSA9IGFyZ3Muc2VyaWVzU3R5bGU7CiAgICAgIHZhciBzZXJpZXNTdHlsZXMgPSAoMCwgX2xvZGFzaDIuZGVmYXVsdCkoc2VyaWVzU3R5bGUgfHwgW10sICdsYWJlbCcpIHx8IHt9OwogICAgICB2YXIgZGF0YSA9ICgwLCBfbG9kYXNoLm1hcCkoKDAsIF9sb2Rhc2guZ3JvdXBCeSkoY29udGV4dC5yb3dzLCAnY29sb3InKSwgZnVuY3Rpb24gKHNlcmllcykgewogICAgICAgIHZhciBsYWJlbCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJyc7CiAgICAgICAgdmFyIGl0ZW0gPSB7CiAgICAgICAgICBsYWJlbDogbGFiZWwsCiAgICAgICAgICBkYXRhOiBzZXJpZXMubWFwKGZ1bmN0aW9uIChwb2ludCkgewogICAgICAgICAgICByZXR1cm4gcG9pbnQuc2l6ZSB8fCAxOwogICAgICAgICAgfSkKICAgICAgICB9OwogICAgICAgIHZhciBzdHlsZSA9IHNlcmllc1N0eWxlc1tsYWJlbF07IC8vIGFwcGVuZCBzZXJpZXMgc3R5bGUsIGlmIHRoZXJlIGlzIGEgbWF0Y2gKCiAgICAgICAgaWYgKHN0eWxlKSB7CiAgICAgICAgICBpdGVtLmNvbG9yID0gKDAsIF9sb2Rhc2guZ2V0KShzdHlsZSwgJ2NvbG9yJyk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gaXRlbTsKICAgICAgfSk7CiAgICAgIHJldHVybiB7CiAgICAgICAgdHlwZTogJ3JlbmRlcicsCiAgICAgICAgYXM6ICdwaWUnLAogICAgICAgIHZhbHVlOiB7CiAgICAgICAgICBmb250OiBmb250LAogICAgICAgICAgZGF0YTogZGF0YSwKICAgICAgICAgIG9wdGlvbnM6IHsKICAgICAgICAgICAgY2FudmFzOiBmYWxzZSwKICAgICAgICAgICAgY29sb3JzOiAoMCwgX2dldF9jb2xvcnNfZnJvbV9wYWxldHRlLmdldENvbG9yc0Zyb21QYWxldHRlKShwYWxldHRlLCBkYXRhLmxlbmd0aCksCiAgICAgICAgICAgIGxlZ2VuZDogKDAsIF9nZXRfbGVnZW5kX2NvbmZpZy5nZXRMZWdlbmRDb25maWcpKGxlZ2VuZCwgZGF0YS5sZW5ndGgpLAogICAgICAgICAgICBncmlkOiB7CiAgICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2VyaWVzOiB7CiAgICAgICAgICAgICAgcGllOiB7CiAgICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgICAgaW5uZXJSYWRpdXM6IE1hdGgubWF4KGhvbGUsIDApIC8gMTAwLAogICAgICAgICAgICAgICAgc3Ryb2tlOiB7CiAgICAgICAgICAgICAgICAgIHdpZHRoOiAwCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICAgICAgc2hvdzogbGFiZWxzLAogICAgICAgICAgICAgICAgICByYWRpdXM6IChsYWJlbFJhZGl1cyA+PSAwID8gbGFiZWxSYWRpdXMgOiAxMDApIC8gMTAwCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgdGlsdDogdGlsdCwKICAgICAgICAgICAgICAgIHJhZGl1czogcmFkaXVzCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBidWJibGVzOiB7CiAgICAgICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgc2hhZG93U2l6ZTogMAogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9OwogICAgfQogIH07Cn0="},null]}