{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/infra/public/containers/logs/log_position/log_position_state.js","dependencies":[{"path":"x-pack/legacy/plugins/infra/public/containers/logs/log_position/log_position_state.js","mtime":1585205044677},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLkxvZ1Bvc2l0aW9uU3RhdGUgPSBleHBvcnRzLnVzZUxvZ1Bvc2l0aW9uU3RhdGUgPSB2b2lkIDA7Cgp2YXIgX3JlYWN0ID0gcmVxdWlyZSgicmVhY3QiKTsKCnZhciBfY29uc3RhdGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImNvbnN0YXRlIikpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsKICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogewogICAgZGVmYXVsdDogb2JqCiAgfTsKfQoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7CiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOwoKICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgewogICAgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7CiAgICBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7CiAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOwogICAgfSk7CiAgICBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7CiAgfQoKICByZXR1cm4ga2V5czsKfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsKICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgewogICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307CgogICAgaWYgKGkgJSAyKSB7CiAgICAgIG93bktleXMoc291cmNlLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsKICAgICAgfSk7CiAgICB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7CiAgICB9IGVsc2UgewogICAgICBvd25LZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7CiAgICAgIH0pOwogICAgfQogIH0KCiAgcmV0dXJuIHRhcmdldDsKfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgewogIGlmIChrZXkgaW4gb2JqKSB7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsKICAgICAgdmFsdWU6IHZhbHVlLAogICAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgIHdyaXRhYmxlOiB0cnVlCiAgICB9KTsKICB9IGVsc2UgewogICAgb2JqW2tleV0gPSB2YWx1ZTsKICB9CgogIHJldHVybiBvYmo7Cn0KCmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgewogIHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7Cn0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7CiAgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZSIpOwp9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7CiAgdmFyIF9hcnIgPSBbXTsKICB2YXIgX24gPSB0cnVlOwogIHZhciBfZCA9IGZhbHNlOwogIHZhciBfZSA9IHVuZGVmaW5lZDsKCiAgdHJ5IHsKICAgIGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsKICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTsKCiAgICAgIGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsKICAgIH0KICB9IGNhdGNoIChlcnIpIHsKICAgIF9kID0gdHJ1ZTsKICAgIF9lID0gZXJyOwogIH0gZmluYWxseSB7CiAgICB0cnkgewogICAgICBpZiAoIV9uICYmIF9pWyJyZXR1cm4iXSAhPSBudWxsKSBfaVsicmV0dXJuIl0oKTsKICAgIH0gZmluYWxseSB7CiAgICAgIGlmIChfZCkgdGhyb3cgX2U7CiAgICB9CiAgfQoKICByZXR1cm4gX2FycjsKfQoKZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgewogIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7Cn0KCnZhciB1c2VWaXNpYmxlTWlkcG9pbnQgPSBmdW5jdGlvbiB1c2VWaXNpYmxlTWlkcG9pbnQobWlkZGxlS2V5LCB0YXJnZXRQb3NpdGlvbikgewogIC8vIE9mIHRoZSB0d28gZGVwZW5kZW5jaWVzIGBtaWRkbGVLZXlgIGFuZCBgdGFyZ2V0UG9zaXRpb25gLCByZXR1cm4KICAvLyB3aGljaGV2ZXIgb25lIHdhcyB0aGUgbW9zdCByZWNlbnRseSB1cGRhdGVkLiBUaGlzIGFsbG93cyB0aGUgVUkgY29udHJvbHMKICAvLyB0byBkaXNwbGF5IGEgbmV3bHktc2VsZWN0ZWQgYHRhcmdldFBvc2l0aW9uYCBiZWZvcmUgbG9hZGluZyBuZXcgZGF0YTsKICAvLyBvdGhlcndpc2UgdGhlIHByZXZpb3VzIGBtaWRkbGVLZXlgIHdvdWxkIGxpbmdlciBpbiB0aGUgVUkgZm9yIHRoZSBlbnRpcmV0eQogIC8vIG9mIHRoZSBsb2FkaW5nIG9wZXJhdGlvbiwgd2hpY2ggdGhlIHVzZXIgY291bGQgcGVyY2VpdmUgYXMgdW5yZXNwb25zaXZlbmVzcwogIHZhciBfdXNlU3RhdGUgPSAoMCwgX3JlYWN0LnVzZVN0YXRlKSh7CiAgICBtaWRkbGVLZXk6IG1pZGRsZUtleSwKICAgIHRhcmdldFBvc2l0aW9uOiB0YXJnZXRQb3NpdGlvbiwKICAgIGN1cnJlbnRWYWx1ZTogbWlkZGxlS2V5IHx8IHRhcmdldFBvc2l0aW9uCiAgfSksCiAgICAgIF91c2VTdGF0ZTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUsIDIpLAogICAgICBzdG9yZSA9IF91c2VTdGF0ZTJbMF0sCiAgICAgIHVwZGF0ZSA9IF91c2VTdGF0ZTJbMV07CgogICgwLCBfcmVhY3QudXNlRWZmZWN0KShmdW5jdGlvbiAoKSB7CiAgICBpZiAobWlkZGxlS2V5ICE9PSBzdG9yZS5taWRkbGVLZXkpIHsKICAgICAgdXBkYXRlKHsKICAgICAgICB0YXJnZXRQb3NpdGlvbjogdGFyZ2V0UG9zaXRpb24sCiAgICAgICAgbWlkZGxlS2V5OiBtaWRkbGVLZXksCiAgICAgICAgY3VycmVudFZhbHVlOiBtaWRkbGVLZXkKICAgICAgfSk7CiAgICB9IGVsc2UgaWYgKHRhcmdldFBvc2l0aW9uICE9PSBzdG9yZS50YXJnZXRQb3NpdGlvbikgewogICAgICB1cGRhdGUoewogICAgICAgIHRhcmdldFBvc2l0aW9uOiB0YXJnZXRQb3NpdGlvbiwKICAgICAgICBtaWRkbGVLZXk6IG1pZGRsZUtleSwKICAgICAgICBjdXJyZW50VmFsdWU6IHRhcmdldFBvc2l0aW9uCiAgICAgIH0pOwogICAgfQogIH0sIFttaWRkbGVLZXksIHRhcmdldFBvc2l0aW9uXSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzCgogIHJldHVybiBzdG9yZS5jdXJyZW50VmFsdWU7Cn07Cgp2YXIgdXNlTG9nUG9zaXRpb25TdGF0ZSA9IGZ1bmN0aW9uIHVzZUxvZ1Bvc2l0aW9uU3RhdGUoKSB7CiAgdmFyIF91c2VTdGF0ZTMgPSAoMCwgX3JlYWN0LnVzZVN0YXRlKShudWxsKSwKICAgICAgX3VzZVN0YXRlNCA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZTMsIDIpLAogICAgICB0YXJnZXRQb3NpdGlvbiA9IF91c2VTdGF0ZTRbMF0sCiAgICAgIGp1bXBUb1RhcmdldFBvc2l0aW9uID0gX3VzZVN0YXRlNFsxXTsKCiAgdmFyIF91c2VTdGF0ZTUgPSAoMCwgX3JlYWN0LnVzZVN0YXRlKShmYWxzZSksCiAgICAgIF91c2VTdGF0ZTYgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGU1LCAyKSwKICAgICAgaXNBdXRvUmVsb2FkaW5nID0gX3VzZVN0YXRlNlswXSwKICAgICAgc2V0SXNBdXRvUmVsb2FkaW5nID0gX3VzZVN0YXRlNlsxXTsKCiAgdmFyIF91c2VTdGF0ZTcgPSAoMCwgX3JlYWN0LnVzZVN0YXRlKSh7CiAgICBlbmRLZXk6IG51bGwsCiAgICBtaWRkbGVLZXk6IG51bGwsCiAgICBzdGFydEtleTogbnVsbCwKICAgIHBhZ2VzQmVmb3JlU3RhcnQ6IEluZmluaXR5LAogICAgcGFnZXNBZnRlckVuZDogSW5maW5pdHkKICB9KSwKICAgICAgX3VzZVN0YXRlOCA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZTcsIDIpLAogICAgICB2aXNpYmxlUG9zaXRpb25zID0gX3VzZVN0YXRlOFswXSwKICAgICAgcmVwb3J0VmlzaWJsZVBvc2l0aW9ucyA9IF91c2VTdGF0ZThbMV07CgogIHZhciBzdGFydEtleSA9IHZpc2libGVQb3NpdGlvbnMuc3RhcnRLZXksCiAgICAgIG1pZGRsZUtleSA9IHZpc2libGVQb3NpdGlvbnMubWlkZGxlS2V5LAogICAgICBlbmRLZXkgPSB2aXNpYmxlUG9zaXRpb25zLmVuZEtleSwKICAgICAgcGFnZXNCZWZvcmVTdGFydCA9IHZpc2libGVQb3NpdGlvbnMucGFnZXNCZWZvcmVTdGFydCwKICAgICAgcGFnZXNBZnRlckVuZCA9IHZpc2libGVQb3NpdGlvbnMucGFnZXNBZnRlckVuZDsKICB2YXIgdmlzaWJsZU1pZHBvaW50ID0gdXNlVmlzaWJsZU1pZHBvaW50KG1pZGRsZUtleSwgdGFyZ2V0UG9zaXRpb24pOwogIHZhciB2aXNpYmxlVGltZUludGVydmFsID0gKDAsIF9yZWFjdC51c2VNZW1vKShmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gc3RhcnRLZXkgJiYgZW5kS2V5ID8gewogICAgICBzdGFydDogc3RhcnRLZXkudGltZSwKICAgICAgZW5kOiBlbmRLZXkudGltZQogICAgfSA6IG51bGw7CiAgfSwgW3N0YXJ0S2V5LCBlbmRLZXldKTsKICB2YXIgc3RhdGUgPSB7CiAgICB0YXJnZXRQb3NpdGlvbjogdGFyZ2V0UG9zaXRpb24sCiAgICBpc0F1dG9SZWxvYWRpbmc6IGlzQXV0b1JlbG9hZGluZywKICAgIGZpcnN0VmlzaWJsZVBvc2l0aW9uOiBzdGFydEtleSwKICAgIHBhZ2VzQmVmb3JlU3RhcnQ6IHBhZ2VzQmVmb3JlU3RhcnQsCiAgICBwYWdlc0FmdGVyRW5kOiBwYWdlc0FmdGVyRW5kLAogICAgdmlzaWJsZU1pZHBvaW50OiB2aXNpYmxlTWlkcG9pbnQsCiAgICB2aXNpYmxlTWlkcG9pbnRUaW1lOiB2aXNpYmxlTWlkcG9pbnQgPyB2aXNpYmxlTWlkcG9pbnQudGltZSA6IG51bGwsCiAgICB2aXNpYmxlVGltZUludGVydmFsOiB2aXNpYmxlVGltZUludGVydmFsCiAgfTsKICB2YXIgY2FsbGJhY2tzID0gewogICAganVtcFRvVGFyZ2V0UG9zaXRpb246IGp1bXBUb1RhcmdldFBvc2l0aW9uLAogICAganVtcFRvVGFyZ2V0UG9zaXRpb25UaW1lOiAoMCwgX3JlYWN0LnVzZUNhbGxiYWNrKShmdW5jdGlvbiAodGltZSkgewogICAgICByZXR1cm4ganVtcFRvVGFyZ2V0UG9zaXRpb24oewogICAgICAgIHRpZWJyZWFrZXI6IDAsCiAgICAgICAgdGltZTogdGltZQogICAgICB9KTsKICAgIH0sIFtqdW1wVG9UYXJnZXRQb3NpdGlvbl0pLAogICAgcmVwb3J0VmlzaWJsZVBvc2l0aW9uczogcmVwb3J0VmlzaWJsZVBvc2l0aW9ucywKICAgIHN0YXJ0TGl2ZVN0cmVhbWluZzogKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gc2V0SXNBdXRvUmVsb2FkaW5nKHRydWUpOwogICAgfSwgW3NldElzQXV0b1JlbG9hZGluZ10pLAogICAgc3RvcExpdmVTdHJlYW1pbmc6ICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHNldElzQXV0b1JlbG9hZGluZyhmYWxzZSk7CiAgICB9LCBbc2V0SXNBdXRvUmVsb2FkaW5nXSkKICB9OwogIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBzdGF0ZSwge30sIGNhbGxiYWNrcyk7Cn07CgpleHBvcnRzLnVzZUxvZ1Bvc2l0aW9uU3RhdGUgPSB1c2VMb2dQb3NpdGlvblN0YXRlOwp2YXIgTG9nUG9zaXRpb25TdGF0ZSA9ICgwLCBfY29uc3RhdGUuZGVmYXVsdCkodXNlTG9nUG9zaXRpb25TdGF0ZSk7CmV4cG9ydHMuTG9nUG9zaXRpb25TdGF0ZSA9IExvZ1Bvc2l0aW9uU3RhdGU7"},null]}