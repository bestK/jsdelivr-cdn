{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/searchprofiler/public/np_ready/application/components/profile_tree/shard_details/shard_details_tree_node.js","dependencies":[{"path":"x-pack/legacy/plugins/searchprofiler/public/np_ready/application/components/profile_tree/shard_details/shard_details_tree_node.js","mtime":1585205047080},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlNoYXJkRGV0YWlsc1RyZWVOb2RlID0gdm9pZCAwOwoKdmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfaTE4biA9IHJlcXVpcmUoIkBrYm4vaTE4biIpOwoKdmFyIF91dGlscyA9IHJlcXVpcmUoIi4uL3V0aWxzIik7Cgp2YXIgX3VzZV9oaWdobGlnaHRfdHJlZV9ub2RlID0gcmVxdWlyZSgiLi4vdXNlX2hpZ2hsaWdodF90cmVlX25vZGUiKTsKCnZhciBfdXRpbHMyID0gcmVxdWlyZSgiLi4vLi4vLi4vdXRpbHMiKTsKCnZhciBfcGVyY2VudGFnZV9iYWRnZSA9IHJlcXVpcmUoIi4uLy4uL3BlcmNlbnRhZ2VfYmFkZ2UiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgewogIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsKICAgIHJldHVybiBvYmo7CiAgfSBlbHNlIHsKICAgIHZhciBuZXdPYmogPSB7fTsKCiAgICBpZiAob2JqICE9IG51bGwpIHsKICAgICAgZm9yICh2YXIga2V5IGluIG9iaikgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICB2YXIgZGVzYyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiB7fTsKCiAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsKICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7CiAgICByZXR1cm4gbmV3T2JqOwogIH0KfQoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsKfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsKICB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7Cn0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsKICB2YXIgX2FyciA9IFtdOwogIHZhciBfbiA9IHRydWU7CiAgdmFyIF9kID0gZmFsc2U7CiAgdmFyIF9lID0gdW5kZWZpbmVkOwoKICB0cnkgewogICAgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgewogICAgICBfYXJyLnB1c2goX3MudmFsdWUpOwoKICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOwogICAgfQogIH0gY2F0Y2ggKGVycikgewogICAgX2QgPSB0cnVlOwogICAgX2UgPSBlcnI7CiAgfSBmaW5hbGx5IHsKICAgIHRyeSB7CiAgICAgIGlmICghX24gJiYgX2lbInJldHVybiJdICE9IG51bGwpIF9pWyJyZXR1cm4iXSgpOwogICAgfSBmaW5hbGx5IHsKICAgICAgaWYgKF9kKSB0aHJvdyBfZTsKICAgIH0KICB9CgogIHJldHVybiBfYXJyOwp9CgpmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsKfQoKdmFyIFRBQl9XSURUSF9QWCA9IDMyOwoKdmFyIGxpbWl0U3RyaW5nID0gZnVuY3Rpb24gbGltaXRTdHJpbmcoc3RyaW5nLCBsaW1pdCkgewogIHJldHVybiAiIi5jb25jYXQoc3RyaW5nLnNsaWNlKDAsIGxpbWl0KSkuY29uY2F0KHN0cmluZy5sZW5ndGggPiBsaW1pdCA/ICcuLi4nIDogJycpOwp9OwovKioKICogVGhpcyBjb21wb25lbnQgcmVjdXJzaXZlbHkgcmVuZGVycyBhIHRyZWUKICovCgoKdmFyIFNoYXJkRGV0YWlsc1RyZWVOb2RlID0gZnVuY3Rpb24gU2hhcmREZXRhaWxzVHJlZU5vZGUoX3JlZikgewogIHZhciBvcGVyYXRpb24gPSBfcmVmLm9wZXJhdGlvbiwKICAgICAgaW5kZXggPSBfcmVmLmluZGV4LAogICAgICBzaGFyZCA9IF9yZWYuc2hhcmQ7CgogIHZhciBfdXNlU3RhdGUgPSAoMCwgX3JlYWN0LnVzZVN0YXRlKSgoMCwgX3V0aWxzLmhhc1Zpc2libGVDaGlsZCkob3BlcmF0aW9uKSksCiAgICAgIF91c2VTdGF0ZTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUsIDIpLAogICAgICBjaGlsZHJlblZpc2libGUgPSBfdXNlU3RhdGUyWzBdLAogICAgICBzZXRDaGlsZHJlblZpc2libGUgPSBfdXNlU3RhdGUyWzFdOwoKICB2YXIgX3VzZUhpZ2hsaWdodFRyZWVOb2RlID0gKDAsIF91c2VfaGlnaGxpZ2h0X3RyZWVfbm9kZS51c2VIaWdobGlnaHRUcmVlTm9kZSkoKSwKICAgICAgaGlnaGxpZ2h0ID0gX3VzZUhpZ2hsaWdodFRyZWVOb2RlLmhpZ2hsaWdodCwKICAgICAgaXNIaWdobGlnaHRlZCA9IF91c2VIaWdobGlnaHRUcmVlTm9kZS5pc0hpZ2hsaWdodGVkLAogICAgICBpZCA9IF91c2VIaWdobGlnaHRUcmVlTm9kZS5pZDsKCiAgdmFyIHJlbmRlclRpbWVSb3cgPSBmdW5jdGlvbiByZW5kZXJUaW1lUm93KG9wKSB7CiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgICBjbGFzc05hbWU6ICJwcmZEZXZUb29sX19wcm9maWxlVHJlZV9fdHZSb3ciCiAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICAgIGNsYXNzTmFtZTogInByZkRldlRvb2xfX3Byb2ZpbGVUcmVlX19jZWxsIGV1aVRleHRBbGlnbi0tbGVmdCIKICAgIH0sIG9wLmhhc0NoaWxkcmVuID8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUxpbmssIHsKICAgICAgY2xhc3NOYW1lOiAicHJmRGV2VG9vbF9fcHJvZmlsZVRyZWVfX3NoYXJkRGV0YWlscyIsCiAgICAgIGRpc2FibGVkOiAhb3AuaGFzQ2hpbGRyZW4sCiAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7CiAgICAgICAgcmV0dXJuIHNldENoaWxkcmVuVmlzaWJsZSghY2hpbGRyZW5WaXNpYmxlKTsKICAgICAgfQogICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUljb24sIHsKICAgICAgdHlwZTogY2hpbGRyZW5WaXNpYmxlID8gJ2Fycm93RG93bicgOiAnYXJyb3dSaWdodCcKICAgIH0pLCAnICcgKyBvcC5xdWVyeV90eXBlKSA6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlJY29uLCB7CiAgICAgIHR5cGU6ICJkb3QiCiAgICB9KSwgJyAnICsgb3AucXVlcnlfdHlwZSkpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICAgIGNsYXNzTmFtZTogInByZkRldlRvb2xfX3Byb2ZpbGVUcmVlX19jZWxsIHByZkRldlRvb2xfX3Byb2ZpbGVUcmVlX190aW1lIGV1aVRleHRBbGlnbi0tY2VudGVyIgogICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUJhZGdlLCB7CiAgICAgIGNsYXNzTmFtZTogInByZkRldlRvb2xfX3Byb2ZpbGVUcmVlX19iYWRnZSBldWlUZXh0QWxpZ24tLWNlbnRlciIsCiAgICAgIHN0eWxlOiB7CiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBvcC5hYnNvbHV0ZUNvbG9yCiAgICAgIH0KICAgIH0sICgwLCBfdXRpbHMyLm1zVG9QcmV0dHkpKG9wLnNlbGZUaW1lIHx8IDAsIDEpKSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgICAgY2xhc3NOYW1lOiAicHJmRGV2VG9vbF9fcHJvZmlsZVRyZWVfX2NlbGwgcHJmRGV2VG9vbF9fcHJvZmlsZVRyZWVfX3RvdGFsVGltZSIKICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlCYWRnZSwgewogICAgICBjbGFzc05hbWU6ICJwcmZEZXZUb29sX19wcm9maWxlVHJlZV9fYmFkZ2UgZXVpVGV4dEFsaWduLS1jZW50ZXIiLAogICAgICBzdHlsZTogewogICAgICAgIGJhY2tncm91bmRDb2xvcjogb3AuYWJzb2x1dGVDb2xvcgogICAgICB9CiAgICB9LCAoMCwgX3V0aWxzMi5tc1RvUHJldHR5KShvcC50aW1lLCAxKSkpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICAgIGNsYXNzTmFtZTogInByZkRldlRvb2xfX3Byb2ZpbGVUcmVlX19jZWxsIHByZkRldlRvb2xfX3Byb2ZpbGVUcmVlX19wZXJjZW50YWdlIgogICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcGVyY2VudGFnZV9iYWRnZS5QZXJjZW50YWdlQmFkZ2UsIHsKICAgICAgdGltZVBlcmNlbnRhZ2U6IG9wLnRpbWVQZXJjZW50YWdlLAogICAgICBsYWJlbDogb3AudGltZVBlcmNlbnRhZ2UgKyAnJScKICAgIH0pKSk7CiAgfTsKCiAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIHsKICAgIGtleTogaWQsCiAgICBjbGFzc05hbWU6IGlzSGlnaGxpZ2h0ZWQoKSA/ICdwcmZEZXZUb29sX190dlJvdy0tbGFzdCcgOiAnJywKICAgIHN0eWxlOiB7CiAgICAgIHBhZGRpbmdMZWZ0OiBvcGVyYXRpb24uZGVwdGggKiBUQUJfV0lEVEhfUFggKyAncHgnCiAgICB9CiAgfSwgcmVuZGVyVGltZVJvdyhvcGVyYXRpb24pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICBjbGFzc05hbWU6ICJwcmZEZXZUb29sX19wcm9maWxlVHJlZV9fdHZSb3ciCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgic3BhbiIsIHsKICAgIGNsYXNzTmFtZTogInByZkRldlRvb2xfX2RldGFpbCIKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQ29kZUJsb2NrLCB7CiAgICBwYWRkaW5nU2l6ZTogIm5vbmUiCiAgfSwgbGltaXRTdHJpbmcob3BlcmF0aW9uLmx1Y2VuZSB8fCAnJywgMTIwKSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlMaW5rLCB7CiAgICB0eXBlOiAiYnV0dG9uIiwKICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7CiAgICAgIHJldHVybiBoaWdobGlnaHQoewogICAgICAgIGluZGV4TmFtZTogaW5kZXgubmFtZSwKICAgICAgICBvcGVyYXRpb246IG9wZXJhdGlvbiwKICAgICAgICBzaGFyZDogc2hhcmQKICAgICAgfSk7CiAgICB9CiAgfSwgX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLnNlYXJjaFByb2ZpbGVyLnByb2ZpbGVUcmVlLmJvZHkudmlld0RldGFpbHNMYWJlbCcsIHsKICAgIGRlZmF1bHRNZXNzYWdlOiAnVmlldyBkZXRhaWxzJwogIH0pKSkpKSwgY2hpbGRyZW5WaXNpYmxlICYmIG9wZXJhdGlvbi5oYXNDaGlsZHJlbiAmJiBvcGVyYXRpb24uY2hpbGRyZW4ubWFwKGZ1bmN0aW9uIChjaGlsZE9wLCBpZHgpIHsKICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFNoYXJkRGV0YWlsc1RyZWVOb2RlLCB7CiAgICAgIGtleTogaWR4LAogICAgICBvcGVyYXRpb246IGNoaWxkT3AsCiAgICAgIGluZGV4OiBpbmRleCwKICAgICAgc2hhcmQ6IHNoYXJkCiAgICB9KTsKICB9KSk7Cn07CgpleHBvcnRzLlNoYXJkRGV0YWlsc1RyZWVOb2RlID0gU2hhcmREZXRhaWxzVHJlZU5vZGU7"},null]}