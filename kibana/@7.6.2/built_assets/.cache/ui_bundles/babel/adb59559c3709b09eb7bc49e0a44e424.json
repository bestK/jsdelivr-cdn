{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/rollup/public/crud_app/services/api.js","dependencies":[{"path":"x-pack/legacy/plugins/rollup/public/crud_app/services/api.js","mtime":1585205047012},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmxvYWRKb2JzID0gbG9hZEpvYnM7CmV4cG9ydHMuc3RhcnRKb2JzID0gc3RhcnRKb2JzOwpleHBvcnRzLnN0b3BKb2JzID0gc3RvcEpvYnM7CmV4cG9ydHMuZGVsZXRlSm9icyA9IGRlbGV0ZUpvYnM7CmV4cG9ydHMuY3JlYXRlSm9iID0gY3JlYXRlSm9iOwpleHBvcnRzLnZhbGlkYXRlSW5kZXhQYXR0ZXJuID0gdmFsaWRhdGVJbmRleFBhdHRlcm47Cgp2YXIgX2Nocm9tZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgidWkvY2hyb21lIikpOwoKdmFyIF9jb21tb24gPSByZXF1aXJlKCIuLi8uLi8uLi9jb21tb24iKTsKCnZhciBfaHR0cF9wcm92aWRlciA9IHJlcXVpcmUoIi4vaHR0cF9wcm92aWRlciIpOwoKdmFyIF90cmFja191aV9tZXRyaWMgPSByZXF1aXJlKCIuL3RyYWNrX3VpX21ldHJpYyIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH0KCi8qCiAqIENvcHlyaWdodCBFbGFzdGljc2VhcmNoIEIuVi4gYW5kL29yIGxpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUKICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgRWxhc3RpYyBMaWNlbnNlLgogKi8KdmFyIGFwaVByZWZpeCA9IF9jaHJvbWUuZGVmYXVsdC5hZGRCYXNlUGF0aCgnL2FwaS9yb2xsdXAnKTsKCmZ1bmN0aW9uIGxvYWRKb2JzKCkgewogIHZhciBfcmVmLCBqb2JzOwoKICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIGxvYWRKb2JzJChfY29udGV4dCkgewogICAgd2hpbGUgKDEpIHsKICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcCgoMCwgX2h0dHBfcHJvdmlkZXIuZ2V0SHR0cCkoKS5nZXQoIiIuY29uY2F0KGFwaVByZWZpeCwgIi9qb2JzIikpKTsKCiAgICAgICAgY2FzZSAyOgogICAgICAgICAgX3JlZiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICBqb2JzID0gX3JlZi5kYXRhLmpvYnM7CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBqb2JzKTsKCiAgICAgICAgY2FzZSA1OgogICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICB9CiAgICB9CiAgfSk7Cn0KCmZ1bmN0aW9uIHN0YXJ0Sm9icyhqb2JJZHMpIHsKICB2YXIgYm9keSwgcmVxdWVzdCwgYWN0aW9uVHlwZTsKICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIHN0YXJ0Sm9icyQoX2NvbnRleHQyKSB7CiAgICB3aGlsZSAoMSkgewogICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICBib2R5ID0gewogICAgICAgICAgICBqb2JJZHM6IGpvYklkcwogICAgICAgICAgfTsKICAgICAgICAgIHJlcXVlc3QgPSAoMCwgX2h0dHBfcHJvdmlkZXIuZ2V0SHR0cCkoKS5wb3N0KCIiLmNvbmNhdChhcGlQcmVmaXgsICIvc3RhcnQiKSwgYm9keSk7CiAgICAgICAgICBhY3Rpb25UeXBlID0gam9iSWRzLmxlbmd0aCA+IDEgPyBfY29tbW9uLlVJTV9KT0JfU1RBUlRfTUFOWSA6IF9jb21tb24uVUlNX0pPQl9TVEFSVDsKICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoKDAsIF90cmFja191aV9tZXRyaWMudHJhY2tVc2VyUmVxdWVzdCkocmVxdWVzdCwgYWN0aW9uVHlwZSkpOwoKICAgICAgICBjYXNlIDU6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQyLnNlbnQpOwoKICAgICAgICBjYXNlIDY6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICB9CiAgICB9CiAgfSk7Cn0KCmZ1bmN0aW9uIHN0b3BKb2JzKGpvYklkcykgewogIHZhciBib2R5LCByZXF1ZXN0LCBhY3Rpb25UeXBlOwogIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gc3RvcEpvYnMkKF9jb250ZXh0MykgewogICAgd2hpbGUgKDEpIHsKICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgYm9keSA9IHsKICAgICAgICAgICAgam9iSWRzOiBqb2JJZHMKICAgICAgICAgIH07CiAgICAgICAgICByZXF1ZXN0ID0gKDAsIF9odHRwX3Byb3ZpZGVyLmdldEh0dHApKCkucG9zdCgiIi5jb25jYXQoYXBpUHJlZml4LCAiL3N0b3AiKSwgYm9keSk7CiAgICAgICAgICBhY3Rpb25UeXBlID0gam9iSWRzLmxlbmd0aCA+IDEgPyBfY29tbW9uLlVJTV9KT0JfU1RPUF9NQU5ZIDogX2NvbW1vbi5VSU1fSk9CX1NUT1A7CiAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDU7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKCgwLCBfdHJhY2tfdWlfbWV0cmljLnRyYWNrVXNlclJlcXVlc3QpKHJlcXVlc3QsIGFjdGlvblR5cGUpKTsKCiAgICAgICAgY2FzZSA1OgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0My5zZW50KTsKCiAgICAgICAgY2FzZSA2OgogICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgfQogICAgfQogIH0pOwp9CgpmdW5jdGlvbiBkZWxldGVKb2JzKGpvYklkcykgewogIHZhciBib2R5LCByZXF1ZXN0LCBhY3Rpb25UeXBlOwogIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gZGVsZXRlSm9icyQoX2NvbnRleHQ0KSB7CiAgICB3aGlsZSAoMSkgewogICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICBib2R5ID0gewogICAgICAgICAgICBqb2JJZHM6IGpvYklkcwogICAgICAgICAgfTsKICAgICAgICAgIHJlcXVlc3QgPSAoMCwgX2h0dHBfcHJvdmlkZXIuZ2V0SHR0cCkoKS5wb3N0KCIiLmNvbmNhdChhcGlQcmVmaXgsICIvZGVsZXRlIiksIGJvZHkpOwogICAgICAgICAgYWN0aW9uVHlwZSA9IGpvYklkcy5sZW5ndGggPiAxID8gX2NvbW1vbi5VSU1fSk9CX0RFTEVURV9NQU5ZIDogX2NvbW1vbi5VSU1fSk9CX0RFTEVURTsKICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNTsKICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoKDAsIF90cmFja191aV9tZXRyaWMudHJhY2tVc2VyUmVxdWVzdCkocmVxdWVzdCwgYWN0aW9uVHlwZSkpOwoKICAgICAgICBjYXNlIDU6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQ0LnNlbnQpOwoKICAgICAgICBjYXNlIDY6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICB9CiAgICB9CiAgfSk7Cn0KCmZ1bmN0aW9uIGNyZWF0ZUpvYihqb2IpIHsKICB2YXIgYm9keSwgcmVxdWVzdDsKICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIGNyZWF0ZUpvYiQoX2NvbnRleHQ1KSB7CiAgICB3aGlsZSAoMSkgewogICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICBib2R5ID0gewogICAgICAgICAgICBqb2I6IGpvYgogICAgICAgICAgfTsKICAgICAgICAgIHJlcXVlc3QgPSAoMCwgX2h0dHBfcHJvdmlkZXIuZ2V0SHR0cCkoKS5wdXQoIiIuY29uY2F0KGFwaVByZWZpeCwgIi9jcmVhdGUiKSwgYm9keSk7CiAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDQ7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKCgwLCBfdHJhY2tfdWlfbWV0cmljLnRyYWNrVXNlclJlcXVlc3QpKHJlcXVlc3QsIF9jb21tb24uVUlNX0pPQl9DUkVBVEUpKTsKCiAgICAgICAgY2FzZSA0OgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0NS5zZW50KTsKCiAgICAgICAgY2FzZSA1OgogICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgfQogICAgfQogIH0pOwp9CgpmdW5jdGlvbiB2YWxpZGF0ZUluZGV4UGF0dGVybihpbmRleFBhdHRlcm4pIHsKICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIHZhbGlkYXRlSW5kZXhQYXR0ZXJuJChfY29udGV4dDYpIHsKICAgIHdoaWxlICgxKSB7CiAgICAgIHN3aXRjaCAoX2NvbnRleHQ2LnByZXYgPSBfY29udGV4dDYubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gMjsKICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoKDAsIF9odHRwX3Byb3ZpZGVyLmdldEh0dHApKCkuZ2V0KCIiLmNvbmNhdChhcGlQcmVmaXgsICIvaW5kZXhfcGF0dGVybl92YWxpZGl0eS8iKS5jb25jYXQoaW5kZXhQYXR0ZXJuKSkpOwoKICAgICAgICBjYXNlIDI6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQ2LnNlbnQpOwoKICAgICAgICBjYXNlIDM6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dDYuc3RvcCgpOwogICAgICB9CiAgICB9CiAgfSk7Cn0="},null]}