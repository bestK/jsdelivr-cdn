{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/remote_clusters/public/app/store/actions/remove_clusters.js","dependencies":[{"path":"x-pack/legacy/plugins/remote_clusters/public/app/store/actions/remove_clusters.js","mtime":1585205046656},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnJlbW92ZUNsdXN0ZXJzID0gdm9pZCAwOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiQGtibi9pMThuIik7Cgp2YXIgX25vdGlmaWNhdGlvbiA9IHJlcXVpcmUoIi4uLy4uL3NlcnZpY2VzL25vdGlmaWNhdGlvbiIpOwoKdmFyIF9jb25zdGFudHMgPSByZXF1aXJlKCIuLi8uLi9jb25zdGFudHMiKTsKCnZhciBfc2VydmljZXMgPSByZXF1aXJlKCIuLi8uLi9zZXJ2aWNlcyIpOwoKdmFyIF9hY3Rpb25fdHlwZXMgPSByZXF1aXJlKCIuLi9hY3Rpb25fdHlwZXMiKTsKCnZhciBfZGV0YWlsX3BhbmVsID0gcmVxdWlyZSgiLi9kZXRhaWxfcGFuZWwiKTsKCnZhciBfc2VsZWN0b3JzID0gcmVxdWlyZSgiLi4vc2VsZWN0b3JzIik7CgovKgogKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lCiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBMaWNlbnNlZCB1bmRlciB0aGUgRWxhc3RpYyBMaWNlbnNlOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS4KICovCmZ1bmN0aW9uIGdldEVycm9yVGl0bGUoY291bnQpIHsKICB2YXIgbmFtZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogbnVsbDsKCiAgaWYgKGNvdW50ID09PSAxKSB7CiAgICBpZiAobmFtZSkgewogICAgICByZXR1cm4gX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLnJlbW90ZUNsdXN0ZXJzLnJlbW92ZUFjdGlvbi5lcnJvclNpbmdsZU5vdGlmaWNhdGlvblRpdGxlJywgewogICAgICAgIGRlZmF1bHRNZXNzYWdlOiAiRXJyb3IgcmVtb3ZpbmcgcmVtb3RlIGNsdXN0ZXIgJ3tuYW1lfSciLAogICAgICAgIHZhbHVlczogewogICAgICAgICAgbmFtZTogbmFtZQogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfSBlbHNlIHsKICAgIHJldHVybiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2sucmVtb3RlQ2x1c3RlcnMucmVtb3ZlQWN0aW9uLmVycm9yTXVsdGlwbGVOb3RpZmljYXRpb25UaXRsZScsIHsKICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJFcnJvciByZW1vdmluZyAne2NvdW50fScgcmVtb3RlIGNsdXN0ZXJzIiwKICAgICAgdmFsdWVzOiB7CiAgICAgICAgY291bnQ6IGNvdW50CiAgICAgIH0KICAgIH0pOwogIH0KfQoKdmFyIHJlbW92ZUNsdXN0ZXJzID0gZnVuY3Rpb24gcmVtb3ZlQ2x1c3RlcnMobmFtZXMpIHsKICByZXR1cm4gZnVuY3Rpb24gX2NhbGxlZShkaXNwYXRjaCwgZ2V0U3RhdGUpIHsKICAgIHZhciBpdGVtc0RlbGV0ZWQsIGVycm9ycywgX2Vycm9ycyQsIG5hbWUsIG1lc3NhZ2UsIHRpdGxlLCBkZXRhaWxQYW5lbENsdXN0ZXJOYW1lOwoKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGRpc3BhdGNoKHsKICAgICAgICAgICAgICB0eXBlOiBfYWN0aW9uX3R5cGVzLlJFTU9WRV9DTFVTVEVSU19TVEFSVAogICAgICAgICAgICB9KTsKICAgICAgICAgICAgaXRlbXNEZWxldGVkID0gW107CiAgICAgICAgICAgIGVycm9ycyA9IFtdOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcChQcm9taXNlLmFsbChbKDAsIF9zZXJ2aWNlcy5yZW1vdmVDbHVzdGVyUmVxdWVzdCkobmFtZXMuam9pbignLCcpKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgIHZhciBfcmVzcG9uc2UkZGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgaXRlbXNEZWxldGVkID0gX3Jlc3BvbnNlJGRhdGEuaXRlbXNEZWxldGVkOwogICAgICAgICAgICAgIGVycm9ycyA9IF9yZXNwb25zZSRkYXRhLmVycm9yczsKICAgICAgICAgICAgfSksIC8vIFdhaXQgYXQgbGVhc3QgaGFsZiBhIHNlY29uZCB0byBhdm9pZCBhIHdlaXJkIGZsaWNrZXIgb2YgdGhlIHNhdmluZyBmZWVkYmFjayAob25seSB2aXNpYmxlCiAgICAgICAgICAgIC8vIHdoZW4gcmVxdWVzdHMgcmVzb2x2ZSB2ZXJ5IHF1aWNrbHkpLgogICAgICAgICAgICBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgICAgICAgIHJldHVybiBzZXRUaW1lb3V0KHJlc29sdmUsIDUwMCk7CiAgICAgICAgICAgIH0pXSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgdmFyIGVycm9yVGl0bGUgPSBnZXRFcnJvclRpdGxlKG5hbWVzLmxlbmd0aCwgbmFtZXNbMF0pOwoKICAgICAgICAgICAgICBfbm90aWZpY2F0aW9uLnRvYXN0cy5hZGREYW5nZXIoewogICAgICAgICAgICAgICAgdGl0bGU6IGVycm9yVGl0bGUsCiAgICAgICAgICAgICAgICB0ZXh0OiBlcnJvci5kYXRhLm1lc3NhZ2UKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSkpOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgaWYgKGVycm9ycy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgX2Vycm9ycyQgPSBlcnJvcnNbMF0sIG5hbWUgPSBfZXJyb3JzJC5uYW1lLCBtZXNzYWdlID0gX2Vycm9ycyQuZXJyb3Iub3V0cHV0LnBheWxvYWQubWVzc2FnZTsKICAgICAgICAgICAgICB0aXRsZSA9IGdldEVycm9yVGl0bGUoZXJyb3JzLmxlbmd0aCwgbmFtZSk7CgogICAgICAgICAgICAgIF9ub3RpZmljYXRpb24udG9hc3RzLmFkZERhbmdlcih7CiAgICAgICAgICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgICAgICAgICB0ZXh0OiBtZXNzYWdlCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChpdGVtc0RlbGV0ZWQubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgIC8vIE9ubHkgdHJhY2sgc3VjY2Vzc2Z1bCByZXF1ZXN0cy4KICAgICAgICAgICAgICAoMCwgX3NlcnZpY2VzLnRyYWNrVWlNZXRyaWMpKF9zZXJ2aWNlcy5NRVRSSUNfVFlQRS5DT1VOVCwgbmFtZXMubGVuZ3RoID4gMSA/IF9jb25zdGFudHMuVUlNX0NMVVNURVJfUkVNT1ZFX01BTlkgOiBfY29uc3RhbnRzLlVJTV9DTFVTVEVSX1JFTU9WRSk7CgogICAgICAgICAgICAgIGlmIChpdGVtc0RlbGV0ZWQubGVuZ3RoID09PSAxKSB7CiAgICAgICAgICAgICAgICBfbm90aWZpY2F0aW9uLnRvYXN0cy5hZGRTdWNjZXNzKF9pMThuLmkxOG4udHJhbnNsYXRlKCd4cGFjay5yZW1vdGVDbHVzdGVycy5yZW1vdmVBY3Rpb24uc3VjY2Vzc1NpbmdsZU5vdGlmaWNhdGlvblRpdGxlJywgewogICAgICAgICAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogIlJlbW90ZSBjbHVzdGVyICd7bmFtZX0nIHdhcyByZW1vdmVkIiwKICAgICAgICAgICAgICAgICAgdmFsdWVzOiB7CiAgICAgICAgICAgICAgICAgICAgbmFtZTogaXRlbXNEZWxldGVkWzBdCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgX25vdGlmaWNhdGlvbi50b2FzdHMuYWRkU3VjY2VzcyhfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2sucmVtb3RlQ2x1c3RlcnMucmVtb3ZlQWN0aW9uLnN1Y2Nlc3NNdWx0aXBsZU5vdGlmaWNhdGlvblRpdGxlJywgewogICAgICAgICAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ3tjb3VudH0gcmVtb3RlIGNsdXN0ZXJzIHdlcmUgcmVtb3ZlZCcsCiAgICAgICAgICAgICAgICAgIHZhbHVlczogewogICAgICAgICAgICAgICAgICAgIGNvdW50OiBpdGVtc0RlbGV0ZWQubGVuZ3RoCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gLy8gSWYgd2UndmUganVzdCBkZWxldGVkIGEgY2x1c3RlciB3ZSB3ZXJlIGxvb2tpbmcgYXQsIHdlIG5lZWQgdG8gY2xvc2UgdGhlIHBhbmVsLgoKCiAgICAgICAgICAgIGRldGFpbFBhbmVsQ2x1c3Rlck5hbWUgPSAoMCwgX3NlbGVjdG9ycy5nZXREZXRhaWxQYW5lbENsdXN0ZXJOYW1lKShnZXRTdGF0ZSgpKTsKCiAgICAgICAgICAgIGlmIChkZXRhaWxQYW5lbENsdXN0ZXJOYW1lICYmIG5hbWVzLmluY2x1ZGVzKGRldGFpbFBhbmVsQ2x1c3Rlck5hbWUpKSB7CiAgICAgICAgICAgICAgZGlzcGF0Y2goKDAsIF9kZXRhaWxfcGFuZWwuY2xvc2VEZXRhaWxQYW5lbCkoKSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGRpc3BhdGNoKHsKICAgICAgICAgICAgICB0eXBlOiBfYWN0aW9uX3R5cGVzLlJFTU9WRV9DTFVTVEVSU19GSU5JU0gsCiAgICAgICAgICAgICAgLy8gU2VuZCB0aGUgY2x1c3RlciB0aGF0IGhhdmUgYmVlbiByZW1vdmVkIHRvIHRoZSByZWR1Y2VycwogICAgICAgICAgICAgIC8vIGFuZCB1cGRhdGUgdGhlIHN0b3JlIGltbWVkaWF0ZWx5IHdpdGhvdXQgdGhlIG5lZWQgdG8gcmUtZmV0Y2ggZnJvbSB0aGUgc2VydmVyCiAgICAgICAgICAgICAgcGF5bG9hZDogaXRlbXNEZWxldGVkCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSk7CiAgfTsKfTsKCmV4cG9ydHMucmVtb3ZlQ2x1c3RlcnMgPSByZW1vdmVDbHVzdGVyczs="},null]}