{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/maps/public/layers/styles/vector/properties/components/ordinal_legend.js","dependencies":[{"path":"x-pack/legacy/plugins/maps/public/layers/styles/vector/properties/components/ordinal_legend.js","mtime":1585205045385},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLk9yZGluYWxMZWdlbmQgPSB2b2lkIDA7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfbG9kYXNoID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJsb2Rhc2giKSk7Cgp2YXIgX3JhbmdlZF9zdHlsZV9sZWdlbmRfcm93ID0gcmVxdWlyZSgiLi4vLi4vLi4vY29tcG9uZW50cy9yYW5nZWRfc3R5bGVfbGVnZW5kX3JvdyIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH0KCmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09ICJzeW1ib2wiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyAic3ltYm9sIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfQoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09ICJvYmplY3QiIHx8IHR5cGVvZiBjYWxsID09PSAiZnVuY3Rpb24iKSkgeyByZXR1cm4gY2FsbDsgfSByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTsgfQoKZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWQiKTsgfSByZXR1cm4gc2VsZjsgfQoKZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCnZhciBFTVBUWV9WQUxVRSA9ICcnOwoKdmFyIE9yZGluYWxMZWdlbmQgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7CiAgX2luaGVyaXRzKE9yZGluYWxMZWdlbmQsIF9SZWFjdCRDb21wb25lbnQpOwoKICBmdW5jdGlvbiBPcmRpbmFsTGVnZW5kKCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBPcmRpbmFsTGVnZW5kKTsKCiAgICBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihPcmRpbmFsTGVnZW5kKS5jYWxsKHRoaXMpKTsKICAgIF90aGlzLl9pc01vdW50ZWQgPSBmYWxzZTsKICAgIF90aGlzLnN0YXRlID0gewogICAgICBsYWJlbDogRU1QVFlfVkFMVUUKICAgIH07CiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoT3JkaW5hbExlZ2VuZCwgW3sKICAgIGtleTogIl9sb2FkUGFyYW1zIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfbG9hZFBhcmFtcygpIHsKICAgICAgdmFyIGxhYmVsLCBuZXdTdGF0ZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBfbG9hZFBhcmFtcyQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcCh0aGlzLnByb3BzLnN0eWxlLmdldEZpZWxkKCkuZ2V0TGFiZWwoKSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgbGFiZWwgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIG5ld1N0YXRlID0gewogICAgICAgICAgICAgICAgbGFiZWw6IGxhYmVsCiAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgaWYgKHRoaXMuX2lzTW91bnRlZCAmJiAhX2xvZGFzaC5kZWZhdWx0LmlzRXF1YWwodGhpcy5zdGF0ZSwgbmV3U3RhdGUpKSB7CiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKG5ld1N0YXRlKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIG51bGwsIHRoaXMpOwogICAgfQogIH0sIHsKICAgIGtleTogIl9mb3JtYXRWYWx1ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX2Zvcm1hdFZhbHVlKHZhbHVlKSB7CiAgICAgIGlmICh2YWx1ZSA9PT0gRU1QVFlfVkFMVUUpIHsKICAgICAgICByZXR1cm4gdmFsdWU7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLnByb3BzLnN0eWxlLmZvcm1hdEZpZWxkKHZhbHVlKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjb21wb25lbnREaWRVcGRhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZSgpIHsKICAgICAgdGhpcy5fbG9hZFBhcmFtcygpOwogICAgfQogIH0sIHsKICAgIGtleTogImNvbXBvbmVudFdpbGxVbm1vdW50IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHsKICAgICAgdGhpcy5faXNNb3VudGVkID0gZmFsc2U7CiAgICB9CiAgfSwgewogICAga2V5OiAiY29tcG9uZW50RGlkTW91bnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkgewogICAgICB0aGlzLl9pc01vdW50ZWQgPSB0cnVlOwoKICAgICAgdGhpcy5fbG9hZFBhcmFtcygpOwogICAgfQogIH0sIHsKICAgIGtleTogInJlbmRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgICB2YXIgZmllbGRNZXRhID0gdGhpcy5wcm9wcy5zdHlsZS5nZXRGaWVsZE1ldGEoKTsKICAgICAgdmFyIG1pbkxhYmVsID0gRU1QVFlfVkFMVUU7CiAgICAgIHZhciBtYXhMYWJlbCA9IEVNUFRZX1ZBTFVFOwoKICAgICAgaWYgKGZpZWxkTWV0YSkgewogICAgICAgIHZhciByYW5nZSA9IHsKICAgICAgICAgIG1pbjogZmllbGRNZXRhLm1pbiwKICAgICAgICAgIG1heDogZmllbGRNZXRhLm1heAogICAgICAgIH07CgogICAgICAgIHZhciBtaW4gPSB0aGlzLl9mb3JtYXRWYWx1ZShfbG9kYXNoLmRlZmF1bHQuZ2V0KHJhbmdlLCAnbWluJywgRU1QVFlfVkFMVUUpKTsKCiAgICAgICAgbWluTGFiZWwgPSB0aGlzLnByb3BzLnN0eWxlLmlzRmllbGRNZXRhRW5hYmxlZCgpICYmIHJhbmdlICYmIHJhbmdlLmlzTWluT3V0c2lkZVN0ZFJhbmdlID8gIjwgIi5jb25jYXQobWluKSA6IG1pbjsKCiAgICAgICAgdmFyIG1heCA9IHRoaXMuX2Zvcm1hdFZhbHVlKF9sb2Rhc2guZGVmYXVsdC5nZXQocmFuZ2UsICdtYXgnLCBFTVBUWV9WQUxVRSkpOwoKICAgICAgICBtYXhMYWJlbCA9IHRoaXMucHJvcHMuc3R5bGUuaXNGaWVsZE1ldGFFbmFibGVkKCkgJiYgcmFuZ2UgJiYgcmFuZ2UuaXNNYXhPdXRzaWRlU3RkUmFuZ2UgPyAiPiAiLmNvbmNhdChtYXgpIDogbWF4OwogICAgICB9CgogICAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmFuZ2VkX3N0eWxlX2xlZ2VuZF9yb3cuUmFuZ2VkU3R5bGVMZWdlbmRSb3csIHsKICAgICAgICBoZWFkZXI6IHRoaXMucHJvcHMuc3R5bGUucmVuZGVyUmFuZ2VMZWdlbmRIZWFkZXIoKSwKICAgICAgICBtaW5MYWJlbDogbWluTGFiZWwsCiAgICAgICAgbWF4TGFiZWw6IG1heExhYmVsLAogICAgICAgIHByb3BlcnR5TGFiZWw6IHRoaXMucHJvcHMuc3R5bGUuZ2V0RGlzcGxheVN0eWxlTmFtZSgpLAogICAgICAgIGZpZWxkTGFiZWw6IHRoaXMuc3RhdGUubGFiZWwKICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gT3JkaW5hbExlZ2VuZDsKfShfcmVhY3QuZGVmYXVsdC5Db21wb25lbnQpOwoKZXhwb3J0cy5PcmRpbmFsTGVnZW5kID0gT3JkaW5hbExlZ2VuZDs="},null]}