{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/pages/detection_engine/rules/components/description_step/helpers.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/pages/detection_engine/rules/components/description_step/helpers.js","mtime":1585205047867},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmJ1aWxkVXJsc0Rlc2NyaXB0aW9uID0gZXhwb3J0cy5idWlsZFNldmVyaXR5RGVzY3JpcHRpb24gPSBleHBvcnRzLmJ1aWxkU3RyaW5nQXJyYXlEZXNjcmlwdGlvbiA9IGV4cG9ydHMuYnVpbGRVbm9yZGVyZWRMaXN0QXJyYXlEZXNjcmlwdGlvbiA9IGV4cG9ydHMuYnVpbGRUaHJlYXREZXNjcmlwdGlvbiA9IGV4cG9ydHMuYnVpbGRRdWVyeUJhckRlc2NyaXB0aW9uID0gdm9pZCAwOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCnZhciBfZnAgPSByZXF1aXJlKCJsb2Rhc2gvZnAiKTsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9zdHlsZWRDb21wb25lbnRzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJzdHlsZWQtY29tcG9uZW50cyIpKTsKCnZhciBfcHVibGljID0gcmVxdWlyZSgiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3BsdWdpbnMvZGF0YS9wdWJsaWMiKTsKCnZhciBfbWl0cmVfdGFjdGljc190ZWNobmlxdWVzID0gcmVxdWlyZSgiLi4vLi4vLi4vbWl0cmUvbWl0cmVfdGFjdGljc190ZWNobmlxdWVzIik7Cgp2YXIgX2ZpbHRlcl9sYWJlbCA9IHJlcXVpcmUoIi4vZmlsdGVyX2xhYmVsIik7Cgp2YXIgaTE4biA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoIi4vdHJhbnNsYXRpb25zIikpOwoKdmFyIF9zZXZlcml0eV9iYWRnZSA9IHJlcXVpcmUoIi4uL3NldmVyaXR5X2JhZGdlIik7Cgp2YXIgX2xpc3RfdHJlZV9pY29uID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL2Fzc2V0cy9saXN0X3RyZWVfaWNvbi5zdmciKSk7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KCmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHsKICByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpOwp9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7CiAgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UiKTsKfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7CiAgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGl0ZXIpID09PSAiW29iamVjdCBBcmd1bWVudHNdIikgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7Cn0KCmZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHsKICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7CiAgICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykgewogICAgICBhcnIyW2ldID0gYXJyW2ldOwogICAgfQoKICAgIHJldHVybiBhcnIyOwogIH0KfQoKdmFyIGlzTm90RW1wdHlBcnJheSA9IGZ1bmN0aW9uIGlzTm90RW1wdHlBcnJheSh2YWx1ZXMpIHsKICByZXR1cm4gISgwLCBfZnAuaXNFbXB0eSkodmFsdWVzKSAmJiB2YWx1ZXMuZmlsdGVyKGZ1bmN0aW9uICh2YWwpIHsKICAgIHJldHVybiAhKDAsIF9mcC5pc0VtcHR5KSh2YWwpOwogIH0pLmxlbmd0aCA+IDA7Cn07Cgp2YXIgRXVpQmFkZ2VXcmFwID0gKDAsIF9zdHlsZWRDb21wb25lbnRzLmRlZmF1bHQpKF9ldWkuRXVpQmFkZ2UpLndpdGhDb25maWcoewogIGRpc3BsYXlOYW1lOiAiRXVpQmFkZ2VXcmFwIiwKICBjb21wb25lbnRJZDogImNqdHlrYS0wIgp9KShbIi5ldWlCYWRnZV9fdGV4dHt3aGl0ZS1zcGFjZTpwcmUtd3JhcCAhaW1wb3J0YW50O30iXSk7Cgp2YXIgYnVpbGRRdWVyeUJhckRlc2NyaXB0aW9uID0gZnVuY3Rpb24gYnVpbGRRdWVyeUJhckRlc2NyaXB0aW9uKF9yZWYpIHsKICB2YXIgZmllbGQgPSBfcmVmLmZpZWxkLAogICAgICBmaWx0ZXJzID0gX3JlZi5maWx0ZXJzLAogICAgICBmaWx0ZXJNYW5hZ2VyID0gX3JlZi5maWx0ZXJNYW5hZ2VyLAogICAgICBxdWVyeSA9IF9yZWYucXVlcnksCiAgICAgIHNhdmVkSWQgPSBfcmVmLnNhdmVkSWQsCiAgICAgIGluZGV4UGF0dGVybnMgPSBfcmVmLmluZGV4UGF0dGVybnM7CiAgdmFyIGl0ZW1zID0gW107CgogIGlmICghKDAsIF9mcC5pc0VtcHR5KShmaWx0ZXJzKSkgewogICAgZmlsdGVyTWFuYWdlci5zZXRGaWx0ZXJzKGZpbHRlcnMpOwogICAgaXRlbXMgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KGl0ZW1zKSwgW3sKICAgICAgdGl0bGU6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIGkxOG4uRklMVEVSU19MQUJFTCwgIiAiKSwKICAgICAgZGVzY3JpcHRpb246IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4R3JvdXAsIHsKICAgICAgICB3cmFwOiB0cnVlLAogICAgICAgIHJlc3BvbnNpdmU6IGZhbHNlLAogICAgICAgIGd1dHRlclNpemU6ICJ4cyIKICAgICAgfSwgZmlsdGVyTWFuYWdlci5nZXRGaWx0ZXJzKCkubWFwKGZ1bmN0aW9uIChmaWx0ZXIsIGluZGV4KSB7CiAgICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgICAgICAgZ3JvdzogZmFsc2UsCiAgICAgICAgICBrZXk6ICIiLmNvbmNhdChmaWVsZCwgIi1maWx0ZXItIikuY29uY2F0KGluZGV4KQogICAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoRXVpQmFkZ2VXcmFwLCB7CiAgICAgICAgICBjb2xvcjogImhvbGxvdyIKICAgICAgICB9LCBpbmRleFBhdHRlcm5zICE9IG51bGwgPyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9maWx0ZXJfbGFiZWwuRmlsdGVyTGFiZWwsIHsKICAgICAgICAgIGZpbHRlcjogZmlsdGVyLAogICAgICAgICAgdmFsdWVMYWJlbDogX3B1YmxpYy5lc0ZpbHRlcnMuZ2V0RGlzcGxheVZhbHVlRnJvbUZpbHRlcihmaWx0ZXIsIFtpbmRleFBhdHRlcm5zXSkKICAgICAgICB9KSA6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlMb2FkaW5nU3Bpbm5lciwgewogICAgICAgICAgc2l6ZTogIm0iCiAgICAgICAgfSkpKTsKICAgICAgfSkpCiAgICB9XSk7CiAgfQoKICBpZiAoISgwLCBfZnAuaXNFbXB0eSkocXVlcnkucXVlcnkpKSB7CiAgICBpdGVtcyA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoaXRlbXMpLCBbewogICAgICB0aXRsZTogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgaTE4bi5RVUVSWV9MQUJFTCwgIiAiKSwKICAgICAgZGVzY3JpcHRpb246IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIHF1ZXJ5LnF1ZXJ5LCAiICIpCiAgICB9XSk7CiAgfQoKICBpZiAoISgwLCBfZnAuaXNFbXB0eSkoc2F2ZWRJZCkpIHsKICAgIGl0ZW1zID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShpdGVtcyksIFt7CiAgICAgIHRpdGxlOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5kZWZhdWx0LkZyYWdtZW50LCBudWxsLCBpMThuLlNBVkVEX0lEX0xBQkVMLCAiICIpLAogICAgICBkZXNjcmlwdGlvbjogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgc2F2ZWRJZCwgIiAiKQogICAgfV0pOwogIH0KCiAgcmV0dXJuIGl0ZW1zOwp9OwoKZXhwb3J0cy5idWlsZFF1ZXJ5QmFyRGVzY3JpcHRpb24gPSBidWlsZFF1ZXJ5QmFyRGVzY3JpcHRpb247CnZhciBUaHJlYXRFdWlGbGV4R3JvdXAgPSAoMCwgX3N0eWxlZENvbXBvbmVudHMuZGVmYXVsdCkoX2V1aS5FdWlGbGV4R3JvdXApLndpdGhDb25maWcoewogIGRpc3BsYXlOYW1lOiAiVGhyZWF0RXVpRmxleEdyb3VwIiwKICBjb21wb25lbnRJZDogImNqdHlrYS0xIgp9KShbIi5ldWlGbGV4SXRlbXttYXJnaW4tYm90dG9tOjBweDt9Il0pOwp2YXIgVGVjaG5pcXVlTGlua0l0ZW0gPSAoMCwgX3N0eWxlZENvbXBvbmVudHMuZGVmYXVsdCkoX2V1aS5FdWlCdXR0b25FbXB0eSkud2l0aENvbmZpZyh7CiAgZGlzcGxheU5hbWU6ICJUZWNobmlxdWVMaW5rSXRlbSIsCiAgY29tcG9uZW50SWQ6ICJjanR5a2EtMiIKfSkoWyIuZXVpSWNvbnt3aWR0aDo4cHg7aGVpZ2h0OjhweDt9Il0pOwp2YXIgUmVmZXJlbmNlTGlua0l0ZW0gPSAoMCwgX3N0eWxlZENvbXBvbmVudHMuZGVmYXVsdCkoX2V1aS5FdWlCdXR0b25FbXB0eSkud2l0aENvbmZpZyh7CiAgZGlzcGxheU5hbWU6ICJSZWZlcmVuY2VMaW5rSXRlbSIsCiAgY29tcG9uZW50SWQ6ICJjanR5a2EtMyIKfSkoWyIuZXVpSWNvbnt3aWR0aDoxMnB4O2hlaWdodDoxMnB4O30iXSk7Cgp2YXIgYnVpbGRUaHJlYXREZXNjcmlwdGlvbiA9IGZ1bmN0aW9uIGJ1aWxkVGhyZWF0RGVzY3JpcHRpb24oX3JlZjIpIHsKICB2YXIgbGFiZWwgPSBfcmVmMi5sYWJlbCwKICAgICAgdGhyZWF0ID0gX3JlZjIudGhyZWF0OwoKICBpZiAodGhyZWF0Lmxlbmd0aCA+IDApIHsKICAgIHJldHVybiBbewogICAgICB0aXRsZTogbGFiZWwsCiAgICAgIGRlc2NyaXB0aW9uOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFRocmVhdEV1aUZsZXhHcm91cCwgewogICAgICAgIGRpcmVjdGlvbjogImNvbHVtbiIKICAgICAgfSwgdGhyZWF0Lm1hcChmdW5jdGlvbiAoc2luZ2xlVGhyZWF0LCBpbmRleCkgewogICAgICAgIHZhciB0YWN0aWMgPSBfbWl0cmVfdGFjdGljc190ZWNobmlxdWVzLnRhY3RpY3NPcHRpb25zLmZpbmQoZnVuY3Rpb24gKHQpIHsKICAgICAgICAgIHJldHVybiB0LmlkID09PSBzaW5nbGVUaHJlYXQudGFjdGljLmlkOwogICAgICAgIH0pOwoKICAgICAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICAgICAgICBrZXk6ICIiLmNvbmNhdChzaW5nbGVUaHJlYXQudGFjdGljLm5hbWUsICItIikuY29uY2F0KGluZGV4KQogICAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlMaW5rLCB7CiAgICAgICAgICBocmVmOiBzaW5nbGVUaHJlYXQudGFjdGljLnJlZmVyZW5jZSwKICAgICAgICAgIHRhcmdldDogIl9ibGFuayIKICAgICAgICB9LCB0YWN0aWMgIT0gbnVsbCA/IHRhY3RpYy50ZXh0IDogJycpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEdyb3VwLCB7CiAgICAgICAgICBndXR0ZXJTaXplOiAibm9uZSIsCiAgICAgICAgICBhbGlnbkl0ZW1zOiAiZmxleFN0YXJ0IiwKICAgICAgICAgIGRpcmVjdGlvbjogImNvbHVtbiIKICAgICAgICB9LCBzaW5nbGVUaHJlYXQudGVjaG5pcXVlLm1hcChmdW5jdGlvbiAodGVjaG5pcXVlKSB7CiAgICAgICAgICB2YXIgbXlUZWNobmlxdWUgPSBfbWl0cmVfdGFjdGljc190ZWNobmlxdWVzLnRlY2huaXF1ZXNPcHRpb25zLmZpbmQoZnVuY3Rpb24gKHQpIHsKICAgICAgICAgICAgcmV0dXJuIHQuaWQgPT09IHRlY2huaXF1ZS5pZDsKICAgICAgICAgIH0pOwoKICAgICAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEl0ZW0sIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoVGVjaG5pcXVlTGlua0l0ZW0sIHsKICAgICAgICAgICAgaHJlZjogdGVjaG5pcXVlLnJlZmVyZW5jZSwKICAgICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgICAgICAgaWNvblR5cGU6IF9saXN0X3RyZWVfaWNvbi5kZWZhdWx0LAogICAgICAgICAgICBzaXplOiAieHMiLAogICAgICAgICAgICBmbHVzaDogImxlZnQiCiAgICAgICAgICB9LCBteVRlY2huaXF1ZSAhPSBudWxsID8gbXlUZWNobmlxdWUubGFiZWwgOiAnJykpOwogICAgICAgIH0pKSk7CiAgICAgIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpU3BhY2VyLCBudWxsKSkKICAgIH1dOwogIH0KCiAgcmV0dXJuIFtdOwp9OwoKZXhwb3J0cy5idWlsZFRocmVhdERlc2NyaXB0aW9uID0gYnVpbGRUaHJlYXREZXNjcmlwdGlvbjsKCnZhciBidWlsZFVub3JkZXJlZExpc3RBcnJheURlc2NyaXB0aW9uID0gZnVuY3Rpb24gYnVpbGRVbm9yZGVyZWRMaXN0QXJyYXlEZXNjcmlwdGlvbihsYWJlbCwgZmllbGQsIHZhbHVlcykgewogIGlmIChpc05vdEVtcHR5QXJyYXkodmFsdWVzKSkgewogICAgcmV0dXJuIFt7CiAgICAgIHRpdGxlOiBsYWJlbCwKICAgICAgZGVzY3JpcHRpb246IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoInVsIiwgbnVsbCwgdmFsdWVzLm1hcChmdW5jdGlvbiAodmFsKSB7CiAgICAgICAgcmV0dXJuICgwLCBfZnAuaXNFbXB0eSkodmFsKSA/IG51bGwgOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJsaSIsIHsKICAgICAgICAgIGtleTogIiIuY29uY2F0KGZpZWxkLCAiLSIpLmNvbmNhdCh2YWwpCiAgICAgICAgfSwgdmFsKTsKICAgICAgfSkpCiAgICB9XTsKICB9CgogIHJldHVybiBbXTsKfTsKCmV4cG9ydHMuYnVpbGRVbm9yZGVyZWRMaXN0QXJyYXlEZXNjcmlwdGlvbiA9IGJ1aWxkVW5vcmRlcmVkTGlzdEFycmF5RGVzY3JpcHRpb247Cgp2YXIgYnVpbGRTdHJpbmdBcnJheURlc2NyaXB0aW9uID0gZnVuY3Rpb24gYnVpbGRTdHJpbmdBcnJheURlc2NyaXB0aW9uKGxhYmVsLCBmaWVsZCwgdmFsdWVzKSB7CiAgaWYgKGlzTm90RW1wdHlBcnJheSh2YWx1ZXMpKSB7CiAgICByZXR1cm4gW3sKICAgICAgdGl0bGU6IGxhYmVsLAogICAgICBkZXNjcmlwdGlvbjogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhHcm91cCwgewogICAgICAgIHJlc3BvbnNpdmU6IGZhbHNlLAogICAgICAgIGd1dHRlclNpemU6ICJ4cyIsCiAgICAgICAgd3JhcDogdHJ1ZQogICAgICB9LCB2YWx1ZXMubWFwKGZ1bmN0aW9uICh2YWwpIHsKICAgICAgICByZXR1cm4gKDAsIF9mcC5pc0VtcHR5KSh2YWwpID8gbnVsbCA6IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgICAgICAgZ3JvdzogZmFsc2UsCiAgICAgICAgICBrZXk6ICIiLmNvbmNhdChmaWVsZCwgIi0iKS5jb25jYXQodmFsKQogICAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoRXVpQmFkZ2VXcmFwLCB7CiAgICAgICAgICBjb2xvcjogImhvbGxvdyIKICAgICAgICB9LCB2YWwpKTsKICAgICAgfSkpCiAgICB9XTsKICB9CgogIHJldHVybiBbXTsKfTsKCmV4cG9ydHMuYnVpbGRTdHJpbmdBcnJheURlc2NyaXB0aW9uID0gYnVpbGRTdHJpbmdBcnJheURlc2NyaXB0aW9uOwoKdmFyIGJ1aWxkU2V2ZXJpdHlEZXNjcmlwdGlvbiA9IGZ1bmN0aW9uIGJ1aWxkU2V2ZXJpdHlEZXNjcmlwdGlvbihsYWJlbCwgdmFsdWUpIHsKICByZXR1cm4gW3sKICAgIHRpdGxlOiBsYWJlbCwKICAgIGRlc2NyaXB0aW9uOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9zZXZlcml0eV9iYWRnZS5TZXZlcml0eUJhZGdlLCB7CiAgICAgIHZhbHVlOiB2YWx1ZQogICAgfSkKICB9XTsKfTsKCmV4cG9ydHMuYnVpbGRTZXZlcml0eURlc2NyaXB0aW9uID0gYnVpbGRTZXZlcml0eURlc2NyaXB0aW9uOwoKdmFyIGJ1aWxkVXJsc0Rlc2NyaXB0aW9uID0gZnVuY3Rpb24gYnVpbGRVcmxzRGVzY3JpcHRpb24obGFiZWwsIHZhbHVlcykgewogIGlmIChpc05vdEVtcHR5QXJyYXkodmFsdWVzKSkgewogICAgcmV0dXJuIFt7CiAgICAgIHRpdGxlOiBsYWJlbCwKICAgICAgZGVzY3JpcHRpb246IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4R3JvdXAsIHsKICAgICAgICBndXR0ZXJTaXplOiAibm9uZSIsCiAgICAgICAgYWxpZ25JdGVtczogImZsZXhTdGFydCIsCiAgICAgICAgZGlyZWN0aW9uOiAiY29sdW1uIgogICAgICB9LCB2YWx1ZXMubWFwKGZ1bmN0aW9uICh2YWwpIHsKICAgICAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFJlZmVyZW5jZUxpbmtJdGVtLCB7CiAgICAgICAgICBocmVmOiB2YWwsCiAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgICAgaWNvblR5cGU6ICJsaW5rIiwKICAgICAgICAgIHNpemU6ICJ4cyIsCiAgICAgICAgICBmbHVzaDogImxlZnQiCiAgICAgICAgfSwgdmFsKSk7CiAgICAgIH0pKQogICAgfV07CiAgfQoKICByZXR1cm4gW107Cn07CgpleHBvcnRzLmJ1aWxkVXJsc0Rlc2NyaXB0aW9uID0gYnVpbGRVcmxzRGVzY3JpcHRpb247"},null]}