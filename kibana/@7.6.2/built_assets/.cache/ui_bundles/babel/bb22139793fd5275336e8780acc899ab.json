{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/transform/public/app/sections/create_transform/components/step_define/use_pivot_preview_data.js","dependencies":[{"path":"x-pack/legacy/plugins/transform/public/app/sections/create_transform/components/step_define/use_pivot_preview_data.js","mtime":1585205048551},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnVzZVBpdm90UHJldmlld0RhdGEgPSBleHBvcnRzLlBJVk9UX1BSRVZJRVdfU1RBVFVTID0gdm9pZCAwOwoKdmFyIF9yZWFjdCA9IHJlcXVpcmUoInJlYWN0Iik7Cgp2YXIgX2NvbW1vbiA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uLy4uLy4uL2NvbW1vbi90eXBlcy9jb21tb24iKTsKCnZhciBfdXNlX2FwaSA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uL2hvb2tzL3VzZV9hcGkiKTsKCnZhciBfY29tbW9uMiA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uL2NvbW1vbiIpOwoKZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsKfQoKZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsKICB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7Cn0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsKICB2YXIgX2FyciA9IFtdOwogIHZhciBfbiA9IHRydWU7CiAgdmFyIF9kID0gZmFsc2U7CiAgdmFyIF9lID0gdW5kZWZpbmVkOwoKICB0cnkgewogICAgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgewogICAgICBfYXJyLnB1c2goX3MudmFsdWUpOwoKICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOwogICAgfQogIH0gY2F0Y2ggKGVycikgewogICAgX2QgPSB0cnVlOwogICAgX2UgPSBlcnI7CiAgfSBmaW5hbGx5IHsKICAgIHRyeSB7CiAgICAgIGlmICghX24gJiYgX2lbInJldHVybiJdICE9IG51bGwpIF9pWyJyZXR1cm4iXSgpOwogICAgfSBmaW5hbGx5IHsKICAgICAgaWYgKF9kKSB0aHJvdyBfZTsKICAgIH0KICB9CgogIHJldHVybiBfYXJyOwp9CgpmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7CiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsKfQoKdmFyIFBJVk9UX1BSRVZJRVdfU1RBVFVTOwpleHBvcnRzLlBJVk9UX1BSRVZJRVdfU1RBVFVTID0gUElWT1RfUFJFVklFV19TVEFUVVM7CgooZnVuY3Rpb24gKFBJVk9UX1BSRVZJRVdfU1RBVFVTKSB7CiAgUElWT1RfUFJFVklFV19TVEFUVVNbUElWT1RfUFJFVklFV19TVEFUVVNbIlVOVVNFRCJdID0gMF0gPSAiVU5VU0VEIjsKICBQSVZPVF9QUkVWSUVXX1NUQVRVU1tQSVZPVF9QUkVWSUVXX1NUQVRVU1siTE9BRElORyJdID0gMV0gPSAiTE9BRElORyI7CiAgUElWT1RfUFJFVklFV19TVEFUVVNbUElWT1RfUFJFVklFV19TVEFUVVNbIkxPQURFRCJdID0gMl0gPSAiTE9BREVEIjsKICBQSVZPVF9QUkVWSUVXX1NUQVRVU1tQSVZPVF9QUkVWSUVXX1NUQVRVU1siRVJST1IiXSA9IDNdID0gIkVSUk9SIjsKfSkoUElWT1RfUFJFVklFV19TVEFUVVMgfHwgKGV4cG9ydHMuUElWT1RfUFJFVklFV19TVEFUVVMgPSBQSVZPVF9QUkVWSUVXX1NUQVRVUyA9IHt9KSk7Cgp2YXIgdXNlUGl2b3RQcmV2aWV3RGF0YSA9IGZ1bmN0aW9uIHVzZVBpdm90UHJldmlld0RhdGEoaW5kZXhQYXR0ZXJuLCBxdWVyeSwgYWdncywgZ3JvdXBCeSkgewogIHZhciBfdXNlU3RhdGUgPSAoMCwgX3JlYWN0LnVzZVN0YXRlKSgnJyksCiAgICAgIF91c2VTdGF0ZTIgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUsIDIpLAogICAgICBlcnJvck1lc3NhZ2UgPSBfdXNlU3RhdGUyWzBdLAogICAgICBzZXRFcnJvck1lc3NhZ2UgPSBfdXNlU3RhdGUyWzFdOwoKICB2YXIgX3VzZVN0YXRlMyA9ICgwLCBfcmVhY3QudXNlU3RhdGUpKFBJVk9UX1BSRVZJRVdfU1RBVFVTLlVOVVNFRCksCiAgICAgIF91c2VTdGF0ZTQgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGUzLCAyKSwKICAgICAgc3RhdHVzID0gX3VzZVN0YXRlNFswXSwKICAgICAgc2V0U3RhdHVzID0gX3VzZVN0YXRlNFsxXTsKCiAgdmFyIF91c2VTdGF0ZTUgPSAoMCwgX3JlYWN0LnVzZVN0YXRlKShbXSksCiAgICAgIF91c2VTdGF0ZTYgPSBfc2xpY2VkVG9BcnJheShfdXNlU3RhdGU1LCAyKSwKICAgICAgcHJldmlld0RhdGEgPSBfdXNlU3RhdGU2WzBdLAogICAgICBzZXRQcmV2aWV3RGF0YSA9IF91c2VTdGF0ZTZbMV07CgogIHZhciBfdXNlU3RhdGU3ID0gKDAsIF9yZWFjdC51c2VTdGF0ZSkoewogICAgcHJvcGVydGllczoge30KICB9KSwKICAgICAgX3VzZVN0YXRlOCA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZTcsIDIpLAogICAgICBwcmV2aWV3TWFwcGluZ3MgPSBfdXNlU3RhdGU4WzBdLAogICAgICBzZXRQcmV2aWV3TWFwcGluZ3MgPSBfdXNlU3RhdGU4WzFdOwoKICB2YXIgYXBpID0gKDAsIF91c2VfYXBpLnVzZUFwaSkoKTsKICB2YXIgYWdnc0FyciA9ICgwLCBfY29tbW9uLmRpY3Rpb25hcnlUb0FycmF5KShhZ2dzKTsKICB2YXIgZ3JvdXBCeUFyciA9ICgwLCBfY29tbW9uLmRpY3Rpb25hcnlUb0FycmF5KShncm91cEJ5KTsKICB2YXIgcHJldmlld1JlcXVlc3QgPSAoMCwgX2NvbW1vbjIuZ2V0UHJldmlld1JlcXVlc3RCb2R5KShpbmRleFBhdHRlcm4udGl0bGUsIHF1ZXJ5LCBncm91cEJ5QXJyLCBhZ2dzQXJyKTsKCiAgdmFyIGdldFByZXZpZXdEYXRhID0gZnVuY3Rpb24gZ2V0UHJldmlld0RhdGEoKSB7CiAgICB2YXIgcmVzcDsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gZ2V0UHJldmlld0RhdGEkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBpZiAoIShhZ2dzQXJyLmxlbmd0aCA9PT0gMCB8fCBncm91cEJ5QXJyLmxlbmd0aCA9PT0gMCkpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgc2V0UHJldmlld0RhdGEoW10pOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIHNldEVycm9yTWVzc2FnZSgnJyk7CiAgICAgICAgICAgIHNldFN0YXR1cyhQSVZPVF9QUkVWSUVXX1NUQVRVUy5MT0FESU5HKTsKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDU7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKGFwaS5nZXRUcmFuc2Zvcm1zUHJldmlldyhwcmV2aWV3UmVxdWVzdCkpOwoKICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgcmVzcCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIHNldFByZXZpZXdEYXRhKHJlc3AucHJldmlldyk7CiAgICAgICAgICAgIHNldFByZXZpZXdNYXBwaW5ncyhyZXNwLm1hcHBpbmdzKTsKICAgICAgICAgICAgc2V0U3RhdHVzKFBJVk9UX1BSRVZJRVdfU1RBVFVTLkxPQURFRCk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyMDsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE0OwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDUpOwogICAgICAgICAgICBzZXRFcnJvck1lc3NhZ2UoSlNPTi5zdHJpbmdpZnkoX2NvbnRleHQudDAsIG51bGwsIDIpKTsKICAgICAgICAgICAgc2V0UHJldmlld0RhdGEoW10pOwogICAgICAgICAgICBzZXRQcmV2aWV3TWFwcGluZ3MoewogICAgICAgICAgICAgIHByb3BlcnRpZXM6IHt9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBzZXRTdGF0dXMoUElWT1RfUFJFVklFV19TVEFUVVMuRVJST1IpOwoKICAgICAgICAgIGNhc2UgMjA6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgbnVsbCwgbnVsbCwgW1s1LCAxNF1dKTsKICB9OwoKICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoZnVuY3Rpb24gKCkgewogICAgZ2V0UHJldmlld0RhdGEoKTsgLy8gY3VzdG9tIGNvbXBhcmlzb24KCiAgICAvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHMgKi8KICB9LCBbaW5kZXhQYXR0ZXJuLnRpdGxlLCBKU09OLnN0cmluZ2lmeShhZ2dzQXJyKSwgSlNPTi5zdHJpbmdpZnkoZ3JvdXBCeUFyciksIEpTT04uc3RyaW5naWZ5KHF1ZXJ5KV0pOwogIHJldHVybiB7CiAgICBlcnJvck1lc3NhZ2U6IGVycm9yTWVzc2FnZSwKICAgIHN0YXR1czogc3RhdHVzLAogICAgcHJldmlld0RhdGE6IHByZXZpZXdEYXRhLAogICAgcHJldmlld01hcHBpbmdzOiBwcmV2aWV3TWFwcGluZ3MsCiAgICBwcmV2aWV3UmVxdWVzdDogcHJldmlld1JlcXVlc3QKICB9Owp9OwoKZXhwb3J0cy51c2VQaXZvdFByZXZpZXdEYXRhID0gdXNlUGl2b3RQcmV2aWV3RGF0YTs="},null]}