{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/infra/public/components/source_configuration/source_configuration_settings.js","dependencies":[{"path":"x-pack/legacy/plugins/infra/public/components/source_configuration/source_configuration_settings.js","mtime":1585205044641},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlNvdXJjZUNvbmZpZ3VyYXRpb25TZXR0aW5ncyA9IHZvaWQgMDsKCnZhciBfZXVpID0gcmVxdWlyZSgiQGVsYXN0aWMvZXVpIik7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCnZhciBfcmVhY3QgPSByZXF1aXJlKCJAa2JuL2kxOG4vcmVhY3QiKTsKCnZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX3JlYWN0Um91dGVyRG9tID0gcmVxdWlyZSgicmVhY3Qtcm91dGVyLWRvbSIpOwoKdmFyIF9zb3VyY2UgPSByZXF1aXJlKCIuLi8uLi9jb250YWluZXJzL3NvdXJjZSIpOwoKdmFyIF9maWVsZHNfY29uZmlndXJhdGlvbl9wYW5lbCA9IHJlcXVpcmUoIi4vZmllbGRzX2NvbmZpZ3VyYXRpb25fcGFuZWwiKTsKCnZhciBfaW5kaWNlc19jb25maWd1cmF0aW9uX3BhbmVsID0gcmVxdWlyZSgiLi9pbmRpY2VzX2NvbmZpZ3VyYXRpb25fcGFuZWwiKTsKCnZhciBfbmFtZV9jb25maWd1cmF0aW9uX3BhbmVsID0gcmVxdWlyZSgiLi9uYW1lX2NvbmZpZ3VyYXRpb25fcGFuZWwiKTsKCnZhciBfbG9nX2NvbHVtbnNfY29uZmlndXJhdGlvbl9wYW5lbCA9IHJlcXVpcmUoIi4vbG9nX2NvbHVtbnNfY29uZmlndXJhdGlvbl9wYW5lbCIpOwoKdmFyIF9zb3VyY2VfY29uZmlndXJhdGlvbl9mb3JtX3N0YXRlID0gcmVxdWlyZSgiLi9zb3VyY2VfY29uZmlndXJhdGlvbl9mb3JtX3N0YXRlIik7Cgp2YXIgX3NvdXJjZV9sb2FkaW5nX3BhZ2UgPSByZXF1aXJlKCIuLi9zb3VyY2VfbG9hZGluZ19wYWdlIik7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KLyoKICogQ29weXJpZ2h0IEVsYXN0aWNzZWFyY2ggQi5WLiBhbmQvb3IgbGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZQogKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gTGljZW5zZWQgdW5kZXIgdGhlIEVsYXN0aWMgTGljZW5zZTsKICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBFbGFzdGljIExpY2Vuc2UuCiAqLwoKCnZhciBTb3VyY2VDb25maWd1cmF0aW9uU2V0dGluZ3MgPSBmdW5jdGlvbiBTb3VyY2VDb25maWd1cmF0aW9uU2V0dGluZ3MoX3JlZikgewogIHZhciBzaG91bGRBbGxvd0VkaXQgPSBfcmVmLnNob3VsZEFsbG93RWRpdCwKICAgICAgZGlzcGxheVNldHRpbmdzID0gX3JlZi5kaXNwbGF5U2V0dGluZ3M7CgogIHZhciBfdXNlQ29udGV4dCA9ICgwLCBfcmVhY3QyLnVzZUNvbnRleHQpKF9zb3VyY2UuU291cmNlLkNvbnRleHQpLAogICAgICBjcmVhdGVTb3VyY2VDb25maWd1cmF0aW9uID0gX3VzZUNvbnRleHQuY3JlYXRlU291cmNlQ29uZmlndXJhdGlvbiwKICAgICAgc291cmNlID0gX3VzZUNvbnRleHQuc291cmNlLAogICAgICBzb3VyY2VFeGlzdHMgPSBfdXNlQ29udGV4dC5zb3VyY2VFeGlzdHMsCiAgICAgIGlzTG9hZGluZyA9IF91c2VDb250ZXh0LmlzTG9hZGluZywKICAgICAgdXBkYXRlU291cmNlQ29uZmlndXJhdGlvbiA9IF91c2VDb250ZXh0LnVwZGF0ZVNvdXJjZUNvbmZpZ3VyYXRpb247CgogIHZhciBhdmFpbGFibGVGaWVsZHMgPSAoMCwgX3JlYWN0Mi51c2VNZW1vKShmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gc291cmNlICYmIHNvdXJjZS5zdGF0dXMgPyBzb3VyY2Uuc3RhdHVzLmluZGV4RmllbGRzLm1hcChmdW5jdGlvbiAoZmllbGQpIHsKICAgICAgcmV0dXJuIGZpZWxkLm5hbWU7CiAgICB9KSA6IFtdOwogIH0sIFtzb3VyY2VdKTsKCiAgdmFyIF91c2VTb3VyY2VDb25maWd1cmF0aSA9ICgwLCBfc291cmNlX2NvbmZpZ3VyYXRpb25fZm9ybV9zdGF0ZS51c2VTb3VyY2VDb25maWd1cmF0aW9uRm9ybVN0YXRlKShzb3VyY2UgJiYgc291cmNlLmNvbmZpZ3VyYXRpb24pLAogICAgICBhZGRMb2dDb2x1bW4gPSBfdXNlU291cmNlQ29uZmlndXJhdGkuYWRkTG9nQ29sdW1uLAogICAgICBtb3ZlTG9nQ29sdW1uID0gX3VzZVNvdXJjZUNvbmZpZ3VyYXRpLm1vdmVMb2dDb2x1bW4sCiAgICAgIGluZGljZXNDb25maWd1cmF0aW9uUHJvcHMgPSBfdXNlU291cmNlQ29uZmlndXJhdGkuaW5kaWNlc0NvbmZpZ3VyYXRpb25Qcm9wcywKICAgICAgbG9nQ29sdW1uQ29uZmlndXJhdGlvblByb3BzID0gX3VzZVNvdXJjZUNvbmZpZ3VyYXRpLmxvZ0NvbHVtbkNvbmZpZ3VyYXRpb25Qcm9wcywKICAgICAgZXJyb3JzID0gX3VzZVNvdXJjZUNvbmZpZ3VyYXRpLmVycm9ycywKICAgICAgcmVzZXRGb3JtID0gX3VzZVNvdXJjZUNvbmZpZ3VyYXRpLnJlc2V0Rm9ybSwKICAgICAgaXNGb3JtRGlydHkgPSBfdXNlU291cmNlQ29uZmlndXJhdGkuaXNGb3JtRGlydHksCiAgICAgIGlzRm9ybVZhbGlkID0gX3VzZVNvdXJjZUNvbmZpZ3VyYXRpLmlzRm9ybVZhbGlkLAogICAgICBmb3JtU3RhdGUgPSBfdXNlU291cmNlQ29uZmlndXJhdGkuZm9ybVN0YXRlLAogICAgICBmb3JtU3RhdGVDaGFuZ2VzID0gX3VzZVNvdXJjZUNvbmZpZ3VyYXRpLmZvcm1TdGF0ZUNoYW5nZXM7CgogIHZhciBwZXJzaXN0VXBkYXRlcyA9ICgwLCBfcmVhY3QyLnVzZUNhbGxiYWNrKShmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgaWYgKCFzb3VyY2VFeGlzdHMpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAodXBkYXRlU291cmNlQ29uZmlndXJhdGlvbihmb3JtU3RhdGVDaGFuZ2VzKSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcChjcmVhdGVTb3VyY2VDb25maWd1cmF0aW9uKGZvcm1TdGF0ZSkpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgcmVzZXRGb3JtKCk7CgogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogIH0sIFtzb3VyY2VFeGlzdHMsIHVwZGF0ZVNvdXJjZUNvbmZpZ3VyYXRpb24sIGNyZWF0ZVNvdXJjZUNvbmZpZ3VyYXRpb24sIHJlc2V0Rm9ybSwgZm9ybVN0YXRlLCBmb3JtU3RhdGVDaGFuZ2VzXSk7CiAgdmFyIGlzV3JpdGVhYmxlID0gKDAsIF9yZWFjdDIudXNlTWVtbykoZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHNob3VsZEFsbG93RWRpdCAmJiBzb3VyY2UgJiYgc291cmNlLm9yaWdpbiAhPT0gJ2ludGVybmFsJzsKICB9LCBbc2hvdWxkQWxsb3dFZGl0LCBzb3VyY2VdKTsKCiAgaWYgKCFzb3VyY2UpIHsKICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfc291cmNlX2xvYWRpbmdfcGFnZS5Tb3VyY2VMb2FkaW5nUGFnZSwgbnVsbCk7CiAgfQoKICBpZiAoIXNvdXJjZS5jb25maWd1cmF0aW9uKSB7CiAgICByZXR1cm4gbnVsbDsKICB9CgogIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpUGFnZSwgbnVsbCwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlQYWdlQm9keSwgewogICAgY2xhc3NOYW1lOiAiZXVpLWRpc3BsYXlCbG9jayIsCiAgICByZXN0cmljdFdpZHRoOiB0cnVlLAogICAgImRhdGEtdGVzdC1zdWJqIjogInNvdXJjZUNvbmZpZ3VyYXRpb25Db250ZW50IgogIH0sIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdFJvdXRlckRvbS5Qcm9tcHQsIHsKICAgIHdoZW46IGlzRm9ybURpcnR5LAogICAgbWVzc2FnZTogX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLmluZnJhLnNvdXJjZUNvbmZpZ3VyYXRpb24udW5zYXZlZEZvcm1Qcm9tcHQnLCB7CiAgICAgIGRlZmF1bHRNZXNzYWdlOiAnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGxlYXZlPyBDaGFuZ2VzIHdpbGwgYmUgbG9zdCcKICAgIH0pCiAgfSksIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpUGFuZWwsIHsKICAgIHBhZGRpbmdTaXplOiAibCIKICB9LCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfbmFtZV9jb25maWd1cmF0aW9uX3BhbmVsLk5hbWVDb25maWd1cmF0aW9uUGFuZWwsIHsKICAgIGlzTG9hZGluZzogaXNMb2FkaW5nLAogICAgbmFtZUZpZWxkUHJvcHM6IGluZGljZXNDb25maWd1cmF0aW9uUHJvcHMubmFtZSwKICAgIHJlYWRPbmx5OiAhaXNXcml0ZWFibGUKICB9KSksIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpU3BhY2VyLCBudWxsKSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlQYW5lbCwgewogICAgcGFkZGluZ1NpemU6ICJsIgogIH0sIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9pbmRpY2VzX2NvbmZpZ3VyYXRpb25fcGFuZWwuSW5kaWNlc0NvbmZpZ3VyYXRpb25QYW5lbCwgewogICAgaXNMb2FkaW5nOiBpc0xvYWRpbmcsCiAgICBsb2dBbGlhc0ZpZWxkUHJvcHM6IGluZGljZXNDb25maWd1cmF0aW9uUHJvcHMubG9nQWxpYXMsCiAgICBtZXRyaWNBbGlhc0ZpZWxkUHJvcHM6IGluZGljZXNDb25maWd1cmF0aW9uUHJvcHMubWV0cmljQWxpYXMsCiAgICByZWFkT25seTogIWlzV3JpdGVhYmxlLAogICAgZGlzcGxheVNldHRpbmdzOiBkaXNwbGF5U2V0dGluZ3MKICB9KSksIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpU3BhY2VyLCBudWxsKSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlQYW5lbCwgewogICAgcGFkZGluZ1NpemU6ICJsIgogIH0sIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9maWVsZHNfY29uZmlndXJhdGlvbl9wYW5lbC5GaWVsZHNDb25maWd1cmF0aW9uUGFuZWwsIHsKICAgIGNvbnRhaW5lckZpZWxkUHJvcHM6IGluZGljZXNDb25maWd1cmF0aW9uUHJvcHMuY29udGFpbmVyRmllbGQsCiAgICBob3N0RmllbGRQcm9wczogaW5kaWNlc0NvbmZpZ3VyYXRpb25Qcm9wcy5ob3N0RmllbGQsCiAgICBpc0xvYWRpbmc6IGlzTG9hZGluZywKICAgIHBvZEZpZWxkUHJvcHM6IGluZGljZXNDb25maWd1cmF0aW9uUHJvcHMucG9kRmllbGQsCiAgICByZWFkT25seTogIWlzV3JpdGVhYmxlLAogICAgdGllYnJlYWtlckZpZWxkUHJvcHM6IGluZGljZXNDb25maWd1cmF0aW9uUHJvcHMudGllYnJlYWtlckZpZWxkLAogICAgdGltZXN0YW1wRmllbGRQcm9wczogaW5kaWNlc0NvbmZpZ3VyYXRpb25Qcm9wcy50aW1lc3RhbXBGaWVsZCwKICAgIGRpc3BsYXlTZXR0aW5nczogZGlzcGxheVNldHRpbmdzCiAgfSkpLCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVNwYWNlciwgbnVsbCksIGRpc3BsYXlTZXR0aW5ncyA9PT0gJ2xvZ3MnICYmIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpUGFuZWwsIHsKICAgIHBhZGRpbmdTaXplOiAibCIKICB9LCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfbG9nX2NvbHVtbnNfY29uZmlndXJhdGlvbl9wYW5lbC5Mb2dDb2x1bW5zQ29uZmlndXJhdGlvblBhbmVsLCB7CiAgICBhZGRMb2dDb2x1bW46IGFkZExvZ0NvbHVtbiwKICAgIG1vdmVMb2dDb2x1bW46IG1vdmVMb2dDb2x1bW4sCiAgICBhdmFpbGFibGVGaWVsZHM6IGF2YWlsYWJsZUZpZWxkcywKICAgIGlzTG9hZGluZzogaXNMb2FkaW5nLAogICAgbG9nQ29sdW1uQ29uZmlndXJhdGlvbjogbG9nQ29sdW1uQ29uZmlndXJhdGlvblByb3BzCiAgfSkpLCBlcnJvcnMubGVuZ3RoID4gMCA/IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdDIuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlDYWxsT3V0LCB7CiAgICBjb2xvcjogImRhbmdlciIKICB9LCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudCgidWwiLCBudWxsLCBlcnJvcnMubWFwKGZ1bmN0aW9uIChlcnJvciwgZXJyb3JJbmRleCkgewogICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJsaSIsIHsKICAgICAga2V5OiBlcnJvckluZGV4CiAgICB9LCBlcnJvcik7CiAgfSkpKSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlTcGFjZXIsIHsKICAgIHNpemU6ICJtIgogIH0pKSA6IG51bGwsIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpU3BhY2VyLCB7CiAgICBzaXplOiAibSIKICB9KSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4R3JvdXAsIG51bGwsIGlzV3JpdGVhYmxlICYmIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEl0ZW0sIG51bGwsIGlzTG9hZGluZyA/IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEdyb3VwLCB7CiAgICBqdXN0aWZ5Q29udGVudDogImZsZXhFbmQiCiAgfSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgZ3JvdzogZmFsc2UKICB9LCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUJ1dHRvbiwgewogICAgY29sb3I6ICJwcmltYXJ5IiwKICAgIGlzTG9hZGluZzogdHJ1ZSwKICAgIGZpbGw6IHRydWUKICB9LCAiTG9hZGluZyIpKSkgOiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QyLmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEdyb3VwLCB7CiAgICBqdXN0aWZ5Q29udGVudDogImZsZXhFbmQiCiAgfSwgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4SXRlbSwgewogICAgZ3JvdzogZmFsc2UKICB9LCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUJ1dHRvbiwgewogICAgImRhdGEtdGVzdC1zdWJqIjogImRpc2NhcmRTZXR0aW5nc0J1dHRvbiIsCiAgICBjb2xvcjogImRhbmdlciIsCiAgICBpY29uVHlwZTogImNyb3NzIiwKICAgIGlzRGlzYWJsZWQ6IGlzTG9hZGluZyB8fCAhaXNGb3JtRGlydHksCiAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkgewogICAgICByZXNldEZvcm0oKTsKICAgIH0KICB9LCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgaWQ6ICJ4cGFjay5pbmZyYS5zb3VyY2VDb25maWd1cmF0aW9uLmRpc2NhcmRTZXR0aW5nc0J1dHRvbkxhYmVsIiwKICAgIGRlZmF1bHRNZXNzYWdlOiAiRGlzY2FyZCIKICB9KSkpLCBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICBncm93OiBmYWxzZQogIH0sIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQnV0dG9uLCB7CiAgICAiZGF0YS10ZXN0LXN1YmoiOiAiYXBwbHlTZXR0aW5nc0J1dHRvbiIsCiAgICBjb2xvcjogInByaW1hcnkiLAogICAgaXNEaXNhYmxlZDogIWlzRm9ybURpcnR5IHx8ICFpc0Zvcm1WYWxpZCwKICAgIGZpbGw6IHRydWUsCiAgICBvbkNsaWNrOiBwZXJzaXN0VXBkYXRlcwogIH0sIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5Gb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICBpZDogInhwYWNrLmluZnJhLnNvdXJjZUNvbmZpZ3VyYXRpb24uYXBwbHlTZXR0aW5nc0J1dHRvbkxhYmVsIiwKICAgIGRlZmF1bHRNZXNzYWdlOiAiQXBwbHkiCiAgfSkpKSkpKSkpKSk7Cn07CgpleHBvcnRzLlNvdXJjZUNvbmZpZ3VyYXRpb25TZXR0aW5ncyA9IFNvdXJjZUNvbmZpZ3VyYXRpb25TZXR0aW5nczs="},null]}