{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/ui/public/legacy_compat/ensure_default_index_pattern.js","dependencies":[{"path":"src/legacy/ui/public/legacy_compat/ensure_default_index_pattern.js","mtime":1585205041095},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmVuc3VyZURlZmF1bHRJbmRleFBhdHRlcm4gPSBlbnN1cmVEZWZhdWx0SW5kZXhQYXR0ZXJuOwoKdmFyIF9sb2Rhc2ggPSByZXF1aXJlKCJsb2Rhc2giKTsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInJlYWN0IikpOwoKdmFyIF9yZWFjdERvbSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicmVhY3QtZG9tIikpOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiQGtibi9pMThuIik7Cgp2YXIgX3JlYWN0MiA9IHJlcXVpcmUoIkBrYm4vaTE4bi9yZWFjdCIpOwoKdmFyIF9ldWkgPSByZXF1aXJlKCJAZWxhc3RpYy9ldWkiKTsKCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KLyoKICogTGljZW5zZWQgdG8gRWxhc3RpY3NlYXJjaCBCLlYuIHVuZGVyIG9uZSBvciBtb3JlIGNvbnRyaWJ1dG9yCiAqIGxpY2Vuc2UgYWdyZWVtZW50cy4gU2VlIHRoZSBOT1RJQ0UgZmlsZSBkaXN0cmlidXRlZCB3aXRoCiAqIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiByZWdhcmRpbmcgY29weXJpZ2h0CiAqIG93bmVyc2hpcC4gRWxhc3RpY3NlYXJjaCBCLlYuIGxpY2Vuc2VzIHRoaXMgZmlsZSB0byB5b3UgdW5kZXIKICogdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7IHlvdSBtYXkKICogbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsCiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuCiAqICJBUyBJUyIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWQogKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUKICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucwogKiB1bmRlciB0aGUgTGljZW5zZS4KICovCgoKdmFyIGJhbm5lcklkOwp2YXIgdGltZW91dElkOwovKioKICogQ2hlY2tzIHdoZXRoZXIgYSBkZWZhdWx0IGluZGV4IHBhdHRlcm4gaXMgc2V0IGFuZCBleGlzdHMgYW5kIGRlZmluZXMKICogb25lIG90aGVyd2lzZS4KICoKICogSWYgdGhlcmUgYXJlIG5vIGluZGV4IHBhdHRlcm5zLCByZWRpcmVjdCB0byBtYW5hZ2VtZW50IHBhZ2UgYW5kIHNob3cKICogYmFubmVyLiBJbiB0aGlzIGNhc2UgdGhlIHByb21pc2UgcmV0dXJuZWQgZnJvbSB0aGlzIGZ1bmN0aW9uIHdpbGwgbmV2ZXIKICogcmVzb2x2ZSB0byB3YWl0IGZvciB0aGUgVVJMIGNoYW5nZSB0byBoYXBwZW4uCiAqLwoKZnVuY3Rpb24gZW5zdXJlRGVmYXVsdEluZGV4UGF0dGVybihuZXdQbGF0Zm9ybSwgZGF0YSwgJHJvb3RTY29wZSwga2JuVXJsKSB7CiAgdmFyIHBhdHRlcm5zLCBkZWZhdWx0SWQsIGRlZmluZWQsIGV4aXN0cywgY2FuTWFuYWdlSW5kZXhQYXR0ZXJucywgcmVkaXJlY3RUYXJnZXQ7CiAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBlbnN1cmVEZWZhdWx0SW5kZXhQYXR0ZXJuJChfY29udGV4dCkgewogICAgd2hpbGUgKDEpIHsKICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcChkYXRhLmluZGV4UGF0dGVybnMuZ2V0SWRzKCkpOwoKICAgICAgICBjYXNlIDI6CiAgICAgICAgICBwYXR0ZXJucyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICBkZWZhdWx0SWQgPSBuZXdQbGF0Zm9ybS51aVNldHRpbmdzLmdldCgnZGVmYXVsdEluZGV4Jyk7CiAgICAgICAgICBkZWZpbmVkID0gISFkZWZhdWx0SWQ7CiAgICAgICAgICBleGlzdHMgPSAoMCwgX2xvZGFzaC5jb250YWlucykocGF0dGVybnMsIGRlZmF1bHRJZCk7CgogICAgICAgICAgaWYgKGRlZmluZWQgJiYgIWV4aXN0cykgewogICAgICAgICAgICBuZXdQbGF0Zm9ybS51aVNldHRpbmdzLnJlbW92ZSgnZGVmYXVsdEluZGV4Jyk7CiAgICAgICAgICAgIGRlZmF1bHRJZCA9IGRlZmluZWQgPSBmYWxzZTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoIWRlZmluZWQpIHsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICBjYXNlIDk6CiAgICAgICAgICBpZiAoIShwYXR0ZXJucy5sZW5ndGggPj0gMSkpIHsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KCiAgICAgICAgICBkZWZhdWx0SWQgPSBwYXR0ZXJuc1swXTsKICAgICAgICAgIG5ld1BsYXRmb3JtLnVpU2V0dGluZ3Muc2V0KCdkZWZhdWx0SW5kZXgnLCBkZWZhdWx0SWQpOwogICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIyOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICBjYW5NYW5hZ2VJbmRleFBhdHRlcm5zID0gbmV3UGxhdGZvcm0uYXBwbGljYXRpb24uY2FwYWJpbGl0aWVzLm1hbmFnZW1lbnQua2liYW5hLmluZGV4X3BhdHRlcm5zOwogICAgICAgICAgcmVkaXJlY3RUYXJnZXQgPSBjYW5NYW5hZ2VJbmRleFBhdHRlcm5zID8gJy9tYW5hZ2VtZW50L2tpYmFuYS9pbmRleF9wYXR0ZXJuJyA6ICcvaG9tZSc7CgogICAgICAgICAgaWYgKHRpbWVvdXRJZCkgewogICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dElkKTsKICAgICAgICAgIH0gLy8gQXZvaWQgYmVpbmcgaG9zdGlsZSB0byBuZXcgdXNlcnMgd2hvIGRvbid0IGhhdmUgYW4gaW5kZXggcGF0dGVybiBzZXR1cCB5ZXQKICAgICAgICAgIC8vIGdpdmUgdGhlbSBhIGZyaWVuZGx5IGluZm8gbWVzc2FnZSBpbnN0ZWFkIG9mIGEgdGVyc2UgZXJyb3IgbWVzc2FnZQoKCiAgICAgICAgICBiYW5uZXJJZCA9IG5ld1BsYXRmb3JtLm92ZXJsYXlzLmJhbm5lcnMucmVwbGFjZShiYW5uZXJJZCwgZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICAgICAgX3JlYWN0RG9tLmRlZmF1bHQucmVuZGVyKF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Mi5JMThuUHJvdmlkZXIsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlDYWxsT3V0LCB7CiAgICAgICAgICAgICAgY29sb3I6ICJ3YXJuaW5nIiwKICAgICAgICAgICAgICBpY29uVHlwZTogImlJbkNpcmNsZSIsCiAgICAgICAgICAgICAgdGl0bGU6IF9pMThuLmkxOG4udHJhbnNsYXRlKCdjb21tb24udWkuaW5kZXhQYXR0ZXJuLmJhbm5lckxhYmVsJywgewogICAgICAgICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJJbiBvcmRlciB0byB2aXN1YWxpemUgYW5kIGV4cGxvcmUgZGF0YSBpbiBLaWJhbmEsIHlvdSdsbCBuZWVkIHRvIGNyZWF0ZSBhbiBpbmRleCBwYXR0ZXJuIHRvIHJldHJpZXZlIGRhdGEgZnJvbSBFbGFzdGljc2VhcmNoLiIKICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KSksIGVsZW1lbnQpOwoKICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICByZXR1cm4gX3JlYWN0RG9tLmRlZmF1bHQudW5tb3VudENvbXBvbmVudEF0Tm9kZShlbGVtZW50KTsKICAgICAgICAgICAgfTsKICAgICAgICAgIH0pOyAvLyBoaWRlIHRoZSBtZXNzYWdlIGFmdGVyIHRoZSB1c2VyIGhhcyBoYWQgYSBjaGFuY2UgdG8gYWNrbm93bGVkZ2UgaXQgLS0gc28gaXQgZG9lc24ndCBwZXJtYW5lbnRseSBzdGljayBhcm91bmQKCiAgICAgICAgICB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgbmV3UGxhdGZvcm0ub3ZlcmxheXMuYmFubmVycy5yZW1vdmUoYmFubmVySWQpOwogICAgICAgICAgICB0aW1lb3V0SWQgPSB1bmRlZmluZWQ7CiAgICAgICAgICB9LCAxNTAwMCk7CiAgICAgICAgICBrYm5VcmwuY2hhbmdlKHJlZGlyZWN0VGFyZ2V0KTsKICAgICAgICAgICRyb290U2NvcGUuJGRpZ2VzdCgpOyAvLyByZXR1cm4gbmV2ZXItcmVzb2x2aW5nIHByb21pc2UgdG8gc3RvcCByZXNvbHZpbmcgYW5kIHdhaXQgZm9yIHRoZSB1cmwgY2hhbmdlCgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgbmV3IFByb21pc2UoZnVuY3Rpb24gKCkge30pKTsKCiAgICAgICAgY2FzZSAyMjoKICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgfQogICAgfQogIH0pOwp9"},null]}