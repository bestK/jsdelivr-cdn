{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/graph/public/services/persistence/saved_workspace_references.js","dependencies":[{"path":"x-pack/legacy/plugins/graph/public/services/persistence/saved_workspace_references.js","mtime":1585205044245},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmV4dHJhY3RSZWZlcmVuY2VzID0gZXh0cmFjdFJlZmVyZW5jZXM7CmV4cG9ydHMuaW5qZWN0UmVmZXJlbmNlcyA9IGluamVjdFJlZmVyZW5jZXM7CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsKICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7CgogIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7CiAgICB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsKICAgIGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsKICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7CiAgICB9KTsKICAgIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsKICB9CgogIHJldHVybiBrZXlzOwp9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgewogIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsKCiAgICBpZiAoaSAlIDIpIHsKICAgICAgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICAgIF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOwogICAgICB9KTsKICAgIH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsKICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsKICAgIH0gZWxzZSB7CiAgICAgIG93bktleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsKICAgICAgfSk7CiAgICB9CiAgfQoKICByZXR1cm4gdGFyZ2V0Owp9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7CiAgaWYgKGtleSBpbiBvYmopIHsKICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgewogICAgICB2YWx1ZTogdmFsdWUsCiAgICAgIGVudW1lcmFibGU6IHRydWUsCiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgICAgd3JpdGFibGU6IHRydWUKICAgIH0pOwogIH0gZWxzZSB7CiAgICBvYmpba2V5XSA9IHZhbHVlOwogIH0KCiAgcmV0dXJuIG9iajsKfQoKZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgewogIHJldHVybiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5KGFycikgfHwgX25vbkl0ZXJhYmxlU3ByZWFkKCk7Cn0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHsKICB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZSIpOwp9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHsKICBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChpdGVyKSB8fCBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaXRlcikgPT09ICJbb2JqZWN0IEFyZ3VtZW50c10iKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTsKfQoKZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikgewogIGlmIChBcnJheS5pc0FycmF5KGFycikpIHsKICAgIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGFyci5sZW5ndGgpOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7CiAgICAgIGFycjJbaV0gPSBhcnJbaV07CiAgICB9CgogICAgcmV0dXJuIGFycjI7CiAgfQp9Ci8qCiAqIENvcHlyaWdodCBFbGFzdGljc2VhcmNoIEIuVi4gYW5kL29yIGxpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUKICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgRWxhc3RpYyBMaWNlbnNlLgogKi8KCgpmdW5jdGlvbiBleHRyYWN0UmVmZXJlbmNlcyhfcmVmKSB7CiAgdmFyIGF0dHJpYnV0ZXMgPSBfcmVmLmF0dHJpYnV0ZXMsCiAgICAgIF9yZWYkcmVmZXJlbmNlcyA9IF9yZWYucmVmZXJlbmNlcywKICAgICAgcmVmZXJlbmNlcyA9IF9yZWYkcmVmZXJlbmNlcyA9PT0gdm9pZCAwID8gW10gOiBfcmVmJHJlZmVyZW5jZXM7IC8vIEZvciBzb21lIHJlYXNvbiwgd3NTdGF0ZSBjb21lcyBpbiBzdHJpbmdpZmllZCAyeAoKICB2YXIgc3RhdGUgPSBKU09OLnBhcnNlKEpTT04ucGFyc2UoU3RyaW5nKGF0dHJpYnV0ZXMud3NTdGF0ZSkpKTsKICB2YXIgaW5kZXhQYXR0ZXJuID0gc3RhdGUuaW5kZXhQYXR0ZXJuOwoKICBpZiAoIWluZGV4UGF0dGVybikgewogICAgdGhyb3cgbmV3IEVycm9yKCdpbmRleFBhdHRlcm4gYXR0cmlidXRlIGlzIG1pc3NpbmcgaW4gIndzU3RhdGUiJyk7CiAgfQoKICBzdGF0ZS5pbmRleFBhdHRlcm5SZWZOYW1lID0gJ2luZGV4UGF0dGVybl8wJzsKICBkZWxldGUgc3RhdGUuaW5kZXhQYXR0ZXJuOwogIHJldHVybiB7CiAgICByZWZlcmVuY2VzOiBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHJlZmVyZW5jZXMpLCBbewogICAgICBuYW1lOiAnaW5kZXhQYXR0ZXJuXzAnLAogICAgICB0eXBlOiAnaW5kZXgtcGF0dGVybicsCiAgICAgIGlkOiBpbmRleFBhdHRlcm4KICAgIH1dKSwKICAgIGF0dHJpYnV0ZXM6IF9vYmplY3RTcHJlYWQoe30sIGF0dHJpYnV0ZXMsIHsKICAgICAgd3NTdGF0ZTogSlNPTi5zdHJpbmdpZnkoSlNPTi5zdHJpbmdpZnkoc3RhdGUpKQogICAgfSkKICB9Owp9CgpmdW5jdGlvbiBpbmplY3RSZWZlcmVuY2VzKHNhdmVkT2JqZWN0LCByZWZlcmVuY2VzKSB7CiAgLy8gU2tpcCBpZiB3c1N0YXRlIGlzIG1pc3NpbmcsIGF0IHRoZSB0aW1lIG9mIGRldmVsb3BtZW50IG9mIHRoaXMsIHRoZXJlIGlzIG5vIGd1YXJhbnRlZSBlYWNoCiAgLy8gc2F2ZWQgb2JqZWN0IGhhcyB3c1N0YXRlLgogIGlmICh0eXBlb2Ygc2F2ZWRPYmplY3Qud3NTdGF0ZSAhPT0gJ3N0cmluZycpIHsKICAgIHJldHVybjsKICB9IC8vIE9ubHkgbmVlZCB0byBwYXJzZSAvIHN0cmluZ2lmeSBvbmNlIGhlcmUgY29tcGFyZWQgdG8gZXh0cmFjdFJlZmVyZW5jZXMKCgogIHZhciBzdGF0ZSA9IEpTT04ucGFyc2Uoc2F2ZWRPYmplY3Qud3NTdGF0ZSk7IC8vIExpa2UgdGhlIG1pZ3JhdGlvbiwgc2tpcCBpbmplY3RSZWZlcmVuY2VzIGlmICJpbmRleFBhdHRlcm5SZWZOYW1lIiBpcyBtaXNzaW5nCgogIGlmICghc3RhdGUuaW5kZXhQYXR0ZXJuUmVmTmFtZSkgewogICAgcmV0dXJuOwogIH0KCiAgdmFyIGluZGV4UGF0dGVyblJlZmVyZW5jZSA9IHJlZmVyZW5jZXMuZmluZChmdW5jdGlvbiAocmVmZXJlbmNlKSB7CiAgICByZXR1cm4gcmVmZXJlbmNlLm5hbWUgPT09IHN0YXRlLmluZGV4UGF0dGVyblJlZk5hbWU7CiAgfSk7CgogIGlmICghaW5kZXhQYXR0ZXJuUmVmZXJlbmNlKSB7CiAgICAvLyBUaHJvdyBhbiBlcnJvciBhcyAiaW5kZXhQYXR0ZXJuUmVmTmFtZSIgbWVhbnMgdGhlIHJlZmVyZW5jZSBleGlzdHMgd2l0aGluCiAgICAvLyAicmVmZXJlbmNlcyIgYW5kIGluIHRoaXMgc2NlbmFyaW8gd2UgaGF2ZSBiYWQgZGF0YS4KICAgIHRocm93IG5ldyBFcnJvcigiQ291bGQgbm90IGZpbmQgcmVmZXJlbmNlIFwiIi5jb25jYXQoc3RhdGUuaW5kZXhQYXR0ZXJuUmVmTmFtZSwgIlwiIikpOwogIH0KCiAgc3RhdGUuaW5kZXhQYXR0ZXJuID0gaW5kZXhQYXR0ZXJuUmVmZXJlbmNlLmlkOwogIGRlbGV0ZSBzdGF0ZS5pbmRleFBhdHRlcm5SZWZOYW1lOwogIHNhdmVkT2JqZWN0LndzU3RhdGUgPSBKU09OLnN0cmluZ2lmeShzdGF0ZSk7Cn0="},null]}