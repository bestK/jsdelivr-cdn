{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/kbn_vislib_vis_types/public/components/options/metrics_axes/value_axes_panel.js","dependencies":[{"path":"src/legacy/core_plugins/kbn_vislib_vis_types/public/components/options/metrics_axes/value_axes_panel.js","mtime":1585205039384},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlZhbHVlQXhlc1BhbmVsID0gVmFsdWVBeGVzUGFuZWw7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7Cgp2YXIgX2V1aSA9IHJlcXVpcmUoIkBlbGFzdGljL2V1aSIpOwoKdmFyIF9pMThuID0gcmVxdWlyZSgiQGtibi9pMThuIik7Cgp2YXIgX3JlYWN0MiA9IHJlcXVpcmUoIkBrYm4vaTE4bi9yZWFjdCIpOwoKdmFyIF92YWx1ZV9heGlzX29wdGlvbnMgPSByZXF1aXJlKCIuL3ZhbHVlX2F4aXNfb3B0aW9ucyIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7CiAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgewogICAgcmV0dXJuIG9iajsKICB9IGVsc2UgewogICAgdmFyIG5ld09iaiA9IHt9OwoKICAgIGlmIChvYmogIT0gbnVsbCkgewogICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsKICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OwoKICAgICAgICAgIGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgewogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBuZXdPYmouZGVmYXVsdCA9IG9iajsKICAgIHJldHVybiBuZXdPYmo7CiAgfQp9CgpmdW5jdGlvbiBfZXh0ZW5kcygpIHsKICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgewogICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsKICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsKCiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgewogICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gdGFyZ2V0OwogIH07CgogIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBWYWx1ZUF4ZXNQYW5lbChwcm9wcykgewogIHZhciBzdGF0ZVBhcmFtcyA9IHByb3BzLnN0YXRlUGFyYW1zLAogICAgICBhZGRWYWx1ZUF4aXMgPSBwcm9wcy5hZGRWYWx1ZUF4aXMsCiAgICAgIHJlbW92ZVZhbHVlQXhpcyA9IHByb3BzLnJlbW92ZVZhbHVlQXhpczsKICB2YXIgZ2V0U2VyaWVzID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoZnVuY3Rpb24gKGF4aXMpIHsKICAgIHZhciBpc0ZpcnN0ID0gc3RhdGVQYXJhbXMudmFsdWVBeGVzWzBdLmlkID09PSBheGlzLmlkOwogICAgdmFyIHNlcmllcyA9IHN0YXRlUGFyYW1zLnNlcmllc1BhcmFtcy5maWx0ZXIoZnVuY3Rpb24gKHNlcmllKSB7CiAgICAgIHJldHVybiBzZXJpZS52YWx1ZUF4aXMgPT09IGF4aXMuaWQgfHwgaXNGaXJzdCAmJiAhc2VyaWUudmFsdWVBeGlzOwogICAgfSk7CiAgICByZXR1cm4gc2VyaWVzLm1hcChmdW5jdGlvbiAoc2VyaWUpIHsKICAgICAgcmV0dXJuIHNlcmllLmRhdGEubGFiZWw7CiAgICB9KS5qb2luKCcsICcpOwogIH0sIFtzdGF0ZVBhcmFtcy52YWx1ZUF4ZXMsIHN0YXRlUGFyYW1zLnNlcmllc1BhcmFtc10pOwogIHZhciByZW1vdmVCdXR0b25Ub29sdGlwID0gKDAsIF9yZWFjdC51c2VNZW1vKShmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gX2kxOG4uaTE4bi50cmFuc2xhdGUoJ2tiblZpc2xpYlZpc1R5cGVzLmNvbnRyb2xzLnBvaW50U2VyaWVzLnZhbHVlQXhlcy5yZW1vdmVCdXR0b25Ub29sdGlwJywgewogICAgICBkZWZhdWx0TWVzc2FnZTogJ1JlbW92ZSBZLWF4aXMnCiAgICB9KTsKICB9LCBbXSk7CiAgdmFyIHJlbmRlclJlbW92ZUJ1dHRvbiA9ICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKGZ1bmN0aW9uIChheGlzKSB7CiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVRvb2xUaXAsIHsKICAgICAgcG9zaXRpb246ICJib3R0b20iLAogICAgICBjb250ZW50OiByZW1vdmVCdXR0b25Ub29sdGlwCiAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpQnV0dG9uSWNvbiwgewogICAgICBjb2xvcjogImRhbmdlciIsCiAgICAgIGljb25UeXBlOiAiY3Jvc3MiLAogICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkgewogICAgICAgIHJldHVybiByZW1vdmVWYWx1ZUF4aXMoYXhpcyk7CiAgICAgIH0sCiAgICAgICJhcmlhLWxhYmVsIjogcmVtb3ZlQnV0dG9uVG9vbHRpcCwKICAgICAgImRhdGEtdGVzdC1zdWJqIjogInJlbW92ZVZhbHVlQXhpc0J0biIKICAgIH0pKTsKICB9LCBbcmVtb3ZlVmFsdWVBeGlzXSk7CiAgdmFyIGFkZEJ1dHRvblRvb2x0aXAgPSAoMCwgX3JlYWN0LnVzZU1lbW8pKGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgna2JuVmlzbGliVmlzVHlwZXMuY29udHJvbHMucG9pbnRTZXJpZXMudmFsdWVBeGVzLmFkZEJ1dHRvblRvb2x0aXAnLCB7CiAgICAgIGRlZmF1bHRNZXNzYWdlOiAnQWRkIFktYXhpcycKICAgIH0pOwogIH0sIFtdKTsKICB2YXIgZ2V0QnV0dG9uQ29udGVudCA9ICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKGZ1bmN0aW9uIChheGlzKSB7CiAgICB2YXIgZGVzY3JpcHRpb24gPSBnZXRTZXJpZXMoYXhpcyk7CiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgYXhpcy5uYW1lLCAnICcsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlUb29sVGlwLCB7CiAgICAgIGNvbnRlbnQ6IGRlc2NyaXB0aW9uCiAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5kZWZhdWx0LkZyYWdtZW50LCBudWxsLCBkZXNjcmlwdGlvbikpKTsKICB9LCBbZ2V0U2VyaWVzXSk7CiAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlQYW5lbCwgewogICAgcGFkZGluZ1NpemU6ICJzIgogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlGbGV4R3JvdXAsIHsKICAgIGd1dHRlclNpemU6ICJub25lIiwKICAgIGp1c3RpZnlDb250ZW50OiAic3BhY2VCZXR3ZWVuIiwKICAgIGFsaWduSXRlbXM6ICJiYXNlbGluZSIKICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9ldWkuRXVpRmxleEl0ZW0sIHsKICAgIGdyb3c6IGZhbHNlCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVRpdGxlLCB7CiAgICBzaXplOiAieHMiCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgiaDMiLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdDIuRm9ybWF0dGVkTWVzc2FnZSwgewogICAgaWQ6ICJrYm5WaXNsaWJWaXNUeXBlcy5jb250cm9scy5wb2ludFNlcmllcy52YWx1ZUF4ZXMueUF4aXNUaXRsZSIsCiAgICBkZWZhdWx0TWVzc2FnZTogIlktYXhlcyIKICB9KSkpKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUZsZXhJdGVtLCB7CiAgICBncm93OiBmYWxzZQogIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX2V1aS5FdWlUb29sVGlwLCB7CiAgICBwb3NpdGlvbjogImJvdHRvbSIsCiAgICBjb250ZW50OiBhZGRCdXR0b25Ub29sdGlwCiAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUJ1dHRvbkljb24sIHsKICAgIGljb25UeXBlOiAicGx1c0luQ2lyY2xlRmlsbGVkIiwKICAgIG9uQ2xpY2s6IGFkZFZhbHVlQXhpcywKICAgICJhcmlhLWxhYmVsIjogYWRkQnV0dG9uVG9vbHRpcCwKICAgICJkYXRhLXRlc3Qtc3ViaiI6ICJ2aXN1YWxpemVBZGRZQXhpc0J1dHRvbiIKICB9KSkpKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVNwYWNlciwgewogICAgc2l6ZTogInMiCiAgfSksIHN0YXRlUGFyYW1zLnZhbHVlQXhlcy5tYXAoZnVuY3Rpb24gKGF4aXMsIGluZGV4KSB7CiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aUFjY29yZGlvbiwgewogICAgICBpZDogInlBeGlzQWNjb3JkaW9uIi5jb25jYXQoYXhpcy5pZCksCiAgICAgIGtleTogYXhpcy5pZCwKICAgICAgImRhdGEtdGVzdC1zdWJqIjogInRvZ2dsZVlBeGlzT3B0aW9ucy0iLmNvbmNhdChheGlzLmlkKSwKICAgICAgY2xhc3NOYW1lOiAidmlzRWRpdG9yU2lkZWJhcl9fc2VjdGlvbiB2aXNFZGl0b3JTaWRlYmFyX19jb2xsYXBzaWJsZSIsCiAgICAgIGluaXRpYWxJc09wZW46IGZhbHNlLAogICAgICBidXR0b25Db250ZW50OiBnZXRCdXR0b25Db250ZW50KGF4aXMpLAogICAgICBidXR0b25DbGFzc05hbWU6ICJldWktdGV4dFRydW5jYXRlIiwKICAgICAgYnV0dG9uQ29udGVudENsYXNzTmFtZTogInZpc0VkaXRvclNpZGViYXJfX2FnZ0dyb3VwQWNjb3JkaW9uQnV0dG9uQ29udGVudCBldWktdGV4dFRydW5jYXRlIiwKICAgICAgImFyaWEtbGFiZWwiOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgna2JuVmlzbGliVmlzVHlwZXMuY29udHJvbHMucG9pbnRTZXJpZXMudmFsdWVBeGVzLnRvZ2dsZU9wdGlvbnNBcmlhTGFiZWwnLCB7CiAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdUb2dnbGUge2F4aXNOYW1lfSBvcHRpb25zJywKICAgICAgICB2YWx1ZXM6IHsKICAgICAgICAgIGF4aXNOYW1lOiBheGlzLm5hbWUKICAgICAgICB9CiAgICAgIH0pLAogICAgICBleHRyYUFjdGlvbjogc3RhdGVQYXJhbXMudmFsdWVBeGVzLmxlbmd0aCA9PT0gMSA/IHVuZGVmaW5lZCA6IHJlbmRlclJlbW92ZUJ1dHRvbihheGlzKQogICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfZXVpLkV1aVNwYWNlciwgewogICAgICBzaXplOiAibSIKICAgIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF92YWx1ZV9heGlzX29wdGlvbnMuVmFsdWVBeGlzT3B0aW9ucywgX2V4dGVuZHMoewogICAgICBheGlzOiBheGlzLAogICAgICBpbmRleDogaW5kZXgKICAgIH0sIHByb3BzKSkpKTsKICB9KSk7Cn0="},null]}