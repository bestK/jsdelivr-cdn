{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/maps/public/connected_components/map/mb/utils.js","dependencies":[{"path":"x-pack/legacy/plugins/maps/public/connected_components/map/mb/utils.js","mtime":1585205045265},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnJlbW92ZU9ycGhhbmVkU291cmNlc0FuZExheWVycyA9IHJlbW92ZU9ycGhhbmVkU291cmNlc0FuZExheWVyczsKZXhwb3J0cy5zeW5jTGF5ZXJPcmRlckZvclNpbmdsZUxheWVyID0gc3luY0xheWVyT3JkZXJGb3JTaW5nbGVMYXllcjsKZXhwb3J0cy5sb2FkU3ByaXRlU2hlZXRJbWFnZURhdGEgPSBsb2FkU3ByaXRlU2hlZXRJbWFnZURhdGE7CmV4cG9ydHMuYWRkU3ByaXRlU2hlZXRUb01hcEZyb21JbWFnZURhdGEgPSBhZGRTcHJpdGVTaGVldFRvTWFwRnJvbUltYWdlRGF0YTsKZXhwb3J0cy5hZGRTcHJpdGVzaGVldFRvTWFwID0gYWRkU3ByaXRlc2hlZXRUb01hcDsKCnZhciBfbG9kYXNoID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJsb2Rhc2giKSk7Cgp2YXIgX2ltYWdlX3V0aWxzID0gcmVxdWlyZSgiLi9pbWFnZV91dGlscyIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH0KCi8qCiAqIENvcHlyaWdodCBFbGFzdGljc2VhcmNoIEIuVi4gYW5kL29yIGxpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUKICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuIExpY2Vuc2VkIHVuZGVyIHRoZSBFbGFzdGljIExpY2Vuc2U7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgRWxhc3RpYyBMaWNlbnNlLgogKi8KZnVuY3Rpb24gcmVtb3ZlT3JwaGFuZWRTb3VyY2VzQW5kTGF5ZXJzKG1iTWFwLCBsYXllckxpc3QpIHsKICB2YXIgbWJTdHlsZSA9IG1iTWFwLmdldFN0eWxlKCk7CiAgdmFyIG1iTGF5ZXJJZHNUb1JlbW92ZSA9IFtdOwogIG1iU3R5bGUubGF5ZXJzLmZvckVhY2goZnVuY3Rpb24gKG1iTGF5ZXIpIHsKICAgIHZhciBsYXllciA9IGxheWVyTGlzdC5maW5kKGZ1bmN0aW9uIChsYXllcikgewogICAgICByZXR1cm4gbGF5ZXIub3duc01iTGF5ZXJJZChtYkxheWVyLmlkKTsKICAgIH0pOwoKICAgIGlmICghbGF5ZXIpIHsKICAgICAgbWJMYXllcklkc1RvUmVtb3ZlLnB1c2gobWJMYXllci5pZCk7CiAgICB9CiAgfSk7CiAgbWJMYXllcklkc1RvUmVtb3ZlLmZvckVhY2goZnVuY3Rpb24gKG1iTGF5ZXJJZCkgewogICAgcmV0dXJuIG1iTWFwLnJlbW92ZUxheWVyKG1iTGF5ZXJJZCk7CiAgfSk7CiAgdmFyIG1iU291cmNlc1RvUmVtb3ZlID0gW107CgogIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKG1iU291cmNlSWQpIHsKICAgIGlmIChtYlN0eWxlLnNvdXJjZXMuaGFzT3duUHJvcGVydHkobWJTb3VyY2VJZCkpIHsKICAgICAgdmFyIGxheWVyID0gbGF5ZXJMaXN0LmZpbmQoZnVuY3Rpb24gKGxheWVyKSB7CiAgICAgICAgcmV0dXJuIGxheWVyLm93bnNNYlNvdXJjZUlkKG1iU291cmNlSWQpOwogICAgICB9KTsKCiAgICAgIGlmICghbGF5ZXIpIHsKICAgICAgICBtYlNvdXJjZXNUb1JlbW92ZS5wdXNoKG1iU291cmNlSWQpOwogICAgICB9CiAgICB9CiAgfTsKCiAgZm9yICh2YXIgbWJTb3VyY2VJZCBpbiBtYlN0eWxlLnNvdXJjZXMpIHsKICAgIF9sb29wKG1iU291cmNlSWQpOwogIH0KCiAgbWJTb3VyY2VzVG9SZW1vdmUuZm9yRWFjaChmdW5jdGlvbiAobWJTb3VyY2VJZCkgewogICAgcmV0dXJuIG1iTWFwLnJlbW92ZVNvdXJjZShtYlNvdXJjZUlkKTsKICB9KTsKfQovKioKICogVGhpcyBpcyBmdW5jdGlvbiBhc3N1bWVzIG9ubHkgYSBzaW5nbGUgbGF5ZXIgbW92ZWQgaW4gdGhlIGxheWVyTGlzdCwgY29tcGFyZWQgdG8gbWJNYXAKICogSXQgaXMgb3B0aW1pemVkIHRvIG1pbmltaXplIHRoZSBhbW91bnQgb2YgbWJNYXAubW92ZUxheWVyIGNhbGxzLgogKiBAcGFyYW0gbWJNYXAKICogQHBhcmFtIGxheWVyTGlzdAogKi8KCgpmdW5jdGlvbiBzeW5jTGF5ZXJPcmRlckZvclNpbmdsZUxheWVyKG1iTWFwLCBsYXllckxpc3QpIHsKICBpZiAoIWxheWVyTGlzdCB8fCBsYXllckxpc3QubGVuZ3RoID09PSAwKSB7CiAgICByZXR1cm47CiAgfQoKICB2YXIgbWJMYXllcnMgPSBtYk1hcC5nZXRTdHlsZSgpLmxheWVycy5zbGljZSgpOwogIHZhciBsYXllcklkcyA9IG1iTGF5ZXJzLm1hcChmdW5jdGlvbiAobWJMYXllcikgewogICAgdmFyIGxheWVyID0gbGF5ZXJMaXN0LmZpbmQoZnVuY3Rpb24gKGxheWVyKSB7CiAgICAgIHJldHVybiBsYXllci5vd25zTWJMYXllcklkKG1iTGF5ZXIuaWQpOwogICAgfSk7CiAgICByZXR1cm4gbGF5ZXIuZ2V0SWQoKTsKICB9KTsKCiAgdmFyIGN1cnJlbnRMYXllck9yZGVyTGF5ZXJJZHMgPSBfbG9kYXNoLmRlZmF1bHQudW5pcShsYXllcklkcyk7CgogIHZhciBuZXdMYXllck9yZGVyTGF5ZXJJZHNVbmZpbHRlcmVkID0gbGF5ZXJMaXN0Lm1hcChmdW5jdGlvbiAobCkgewogICAgcmV0dXJuIGwuZ2V0SWQoKTsKICB9KTsKICB2YXIgbmV3TGF5ZXJPcmRlckxheWVySWRzID0gbmV3TGF5ZXJPcmRlckxheWVySWRzVW5maWx0ZXJlZC5maWx0ZXIoZnVuY3Rpb24gKGxheWVySWQpIHsKICAgIHJldHVybiBjdXJyZW50TGF5ZXJPcmRlckxheWVySWRzLmluY2x1ZGVzKGxheWVySWQpOwogIH0pOwogIHZhciBuZXRQb3MgPSAwOwogIHZhciBuZXROZWcgPSAwOwogIHZhciBtb3ZlbWVudEFyciA9IGN1cnJlbnRMYXllck9yZGVyTGF5ZXJJZHMucmVkdWNlKGZ1bmN0aW9uIChhY2N1LCBpZCwgaWR4KSB7CiAgICB2YXIgbW92ZW1lbnQgPSBuZXdMYXllck9yZGVyTGF5ZXJJZHMuZmluZEluZGV4KGZ1bmN0aW9uIChuZXdPSWQpIHsKICAgICAgcmV0dXJuIG5ld09JZCA9PT0gaWQ7CiAgICB9KSAtIGlkeDsKICAgIG1vdmVtZW50ID4gMCA/IG5ldFBvcysrIDogbW92ZW1lbnQgPCAwICYmIG5ldE5lZysrOwogICAgYWNjdS5wdXNoKHsKICAgICAgaWQ6IGlkLAogICAgICBtb3ZlbWVudDogbW92ZW1lbnQKICAgIH0pOwogICAgcmV0dXJuIGFjY3U7CiAgfSwgW10pOwoKICBpZiAobmV0UG9zID09PSAwICYmIG5ldE5lZyA9PT0gMCkgewogICAgcmV0dXJuOwogIH0KCiAgdmFyIG1vdmVkTGF5ZXJJZCA9IG5ldFBvcyA+PSBuZXROZWcgJiYgbW92ZW1lbnRBcnIuZmluZChmdW5jdGlvbiAobCkgewogICAgcmV0dXJuIGwubW92ZW1lbnQgPCAwOwogIH0pLmlkIHx8IG5ldFBvcyA8IG5ldE5lZyAmJiBtb3ZlbWVudEFyci5maW5kKGZ1bmN0aW9uIChsKSB7CiAgICByZXR1cm4gbC5tb3ZlbWVudCA+IDA7CiAgfSkuaWQ7CiAgdmFyIG5leHRMYXllcklkeCA9IG5ld0xheWVyT3JkZXJMYXllcklkcy5maW5kSW5kZXgoZnVuY3Rpb24gKGxheWVySWQpIHsKICAgIHJldHVybiBsYXllcklkID09PSBtb3ZlZExheWVySWQ7CiAgfSkgKyAxOwogIHZhciBuZXh0TWJMYXllcklkOwoKICBpZiAobmV4dExheWVySWR4ID09PSBuZXdMYXllck9yZGVyTGF5ZXJJZHMubGVuZ3RoKSB7CiAgICBuZXh0TWJMYXllcklkID0gbnVsbDsKICB9IGVsc2UgewogICAgdmFyIGZvdW5kTGF5ZXIgPSBtYkxheWVycy5maW5kKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgIHZhciBtYkxheWVySWQgPSBfcmVmLmlkOwogICAgICB2YXIgbGF5ZXJJZCA9IG5ld0xheWVyT3JkZXJMYXllcklkc1tuZXh0TGF5ZXJJZHhdOwogICAgICB2YXIgbGF5ZXIgPSBsYXllckxpc3QuZmluZChmdW5jdGlvbiAobGF5ZXIpIHsKICAgICAgICByZXR1cm4gbGF5ZXIuZ2V0SWQoKSA9PT0gbGF5ZXJJZDsKICAgICAgfSk7CiAgICAgIHJldHVybiBsYXllci5vd25zTWJMYXllcklkKG1iTGF5ZXJJZCk7CiAgICB9KTsKICAgIG5leHRNYkxheWVySWQgPSBmb3VuZExheWVyLmlkOwogIH0KCiAgdmFyIG1vdmVkTGF5ZXIgPSBsYXllckxpc3QuZmluZChmdW5jdGlvbiAobGF5ZXIpIHsKICAgIHJldHVybiBsYXllci5nZXRJZCgpID09PSBtb3ZlZExheWVySWQ7CiAgfSk7CiAgbWJMYXllcnMuZm9yRWFjaChmdW5jdGlvbiAoX3JlZjIpIHsKICAgIHZhciBtYkxheWVySWQgPSBfcmVmMi5pZDsKCiAgICBpZiAobW92ZWRMYXllci5vd25zTWJMYXllcklkKG1iTGF5ZXJJZCkpIHsKICAgICAgbWJNYXAubW92ZUxheWVyKG1iTGF5ZXJJZCwgbmV4dE1iTGF5ZXJJZCk7CiAgICB9CiAgfSk7Cn0KCmZ1bmN0aW9uIGdldEltYWdlRGF0YShpbWcpIHsKICB2YXIgY2FudmFzID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpOwogIHZhciBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7CgogIGlmICghY29udGV4dCkgewogICAgdGhyb3cgbmV3IEVycm9yKCdmYWlsZWQgdG8gY3JlYXRlIGNhbnZhcyAyZCBjb250ZXh0Jyk7CiAgfQoKICBjYW52YXMud2lkdGggPSBpbWcud2lkdGg7CiAgY2FudmFzLmhlaWdodCA9IGltZy5oZWlnaHQ7CiAgY29udGV4dC5kcmF3SW1hZ2UoaW1nLCAwLCAwLCBpbWcud2lkdGgsIGltZy5oZWlnaHQpOwogIHJldHVybiBjb250ZXh0LmdldEltYWdlRGF0YSgwLCAwLCBpbWcud2lkdGgsIGltZy5oZWlnaHQpOwp9CgpmdW5jdGlvbiBsb2FkU3ByaXRlU2hlZXRJbWFnZURhdGEoaW1nVXJsKSB7CiAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBsb2FkU3ByaXRlU2hlZXRJbWFnZURhdGEkKF9jb250ZXh0KSB7CiAgICB3aGlsZSAoMSkgewogICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgICAgICB2YXIgaW1hZ2UgPSBuZXcgSW1hZ2UoKTsKICAgICAgICAgICAgaW1hZ2UuY3Jvc3NPcmlnaW4gPSAnQW5vbnltb3VzJzsKCiAgICAgICAgICAgIGltYWdlLm9ubG9hZCA9IGZ1bmN0aW9uIChlbCkgewogICAgICAgICAgICAgIHZhciBpbWdEYXRhID0gZ2V0SW1hZ2VEYXRhKGVsLmN1cnJlbnRUYXJnZXQpOwogICAgICAgICAgICAgIHJlc29sdmUoaW1nRGF0YSk7CiAgICAgICAgICAgIH07CgogICAgICAgICAgICBpbWFnZS5vbmVycm9yID0gZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICByZWplY3QoZSk7CiAgICAgICAgICAgIH07CgogICAgICAgICAgICBpbWFnZS5zcmMgPSBpbWdVcmw7CiAgICAgICAgICB9KSk7CgogICAgICAgIGNhc2UgMToKICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgfQogICAgfQogIH0pOwp9CgpmdW5jdGlvbiBhZGRTcHJpdGVTaGVldFRvTWFwRnJvbUltYWdlRGF0YShqc29uLCBpbWdEYXRhLCBtYk1hcCkgewogIGZvciAodmFyIGltYWdlSWQgaW4ganNvbikgewogICAgaWYgKCEoanNvbi5oYXNPd25Qcm9wZXJ0eShpbWFnZUlkKSAmJiAhbWJNYXAuaGFzSW1hZ2UoaW1hZ2VJZCkpKSB7CiAgICAgIGNvbnRpbnVlOwogICAgfQoKICAgIHZhciBfanNvbiRpbWFnZUlkID0ganNvbltpbWFnZUlkXSwKICAgICAgICB3aWR0aCA9IF9qc29uJGltYWdlSWQud2lkdGgsCiAgICAgICAgaGVpZ2h0ID0gX2pzb24kaW1hZ2VJZC5oZWlnaHQsCiAgICAgICAgeCA9IF9qc29uJGltYWdlSWQueCwKICAgICAgICB5ID0gX2pzb24kaW1hZ2VJZC55LAogICAgICAgIHNkZiA9IF9qc29uJGltYWdlSWQuc2RmLAogICAgICAgIHBpeGVsUmF0aW8gPSBfanNvbiRpbWFnZUlkLnBpeGVsUmF0aW87CgogICAgaWYgKHR5cGVvZiB3aWR0aCAhPT0gJ251bWJlcicgfHwgdHlwZW9mIGhlaWdodCAhPT0gJ251bWJlcicpIHsKICAgICAgY29udGludWU7CiAgICB9CgogICAgdmFyIGRhdGEgPSBuZXcgX2ltYWdlX3V0aWxzLlJHQkFJbWFnZSh7CiAgICAgIHdpZHRoOiB3aWR0aCwKICAgICAgaGVpZ2h0OiBoZWlnaHQKICAgIH0pOwoKICAgIF9pbWFnZV91dGlscy5SR0JBSW1hZ2UuY29weShpbWdEYXRhLCBkYXRhLCB7CiAgICAgIHg6IHgsCiAgICAgIHk6IHkKICAgIH0sIHsKICAgICAgeDogMCwKICAgICAgeTogMAogICAgfSwgewogICAgICB3aWR0aDogd2lkdGgsCiAgICAgIGhlaWdodDogaGVpZ2h0CiAgICB9KTsKCiAgICBtYk1hcC5hZGRJbWFnZShpbWFnZUlkLCBkYXRhLCB7CiAgICAgIHBpeGVsUmF0aW86IHBpeGVsUmF0aW8sCiAgICAgIHNkZjogc2RmCiAgICB9KTsKICB9Cn0KCmZ1bmN0aW9uIGFkZFNwcml0ZXNoZWV0VG9NYXAoanNvbiwgaW1nVXJsLCBtYk1hcCkgewogIHZhciBpbWdEYXRhOwogIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gYWRkU3ByaXRlc2hlZXRUb01hcCQoX2NvbnRleHQyKSB7CiAgICB3aGlsZSAoMSkgewogICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKGxvYWRTcHJpdGVTaGVldEltYWdlRGF0YShpbWdVcmwpKTsKCiAgICAgICAgY2FzZSAyOgogICAgICAgICAgaW1nRGF0YSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgYWRkU3ByaXRlU2hlZXRUb01hcEZyb21JbWFnZURhdGEoanNvbiwgaW1nRGF0YSwgbWJNYXApOwoKICAgICAgICBjYXNlIDQ6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICB9CiAgICB9CiAgfSk7Cn0="},null]}