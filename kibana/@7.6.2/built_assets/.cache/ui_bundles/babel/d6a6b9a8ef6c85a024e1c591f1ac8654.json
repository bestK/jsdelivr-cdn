{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/remote_clusters/public/app/store/actions/edit_cluster.js","dependencies":[{"path":"x-pack/legacy/plugins/remote_clusters/public/app/store/actions/edit_cluster.js","mtime":1585205046656},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmNsZWFyRWRpdENsdXN0ZXJFcnJvcnMgPSBleHBvcnRzLnN0b3BFZGl0aW5nQ2x1c3RlciA9IGV4cG9ydHMuc3RhcnRFZGl0aW5nQ2x1c3RlciA9IGV4cG9ydHMuZWRpdENsdXN0ZXIgPSB2b2lkIDA7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCnZhciBfbm90aWZpY2F0aW9uID0gcmVxdWlyZSgiLi4vLi4vc2VydmljZXMvbm90aWZpY2F0aW9uIik7Cgp2YXIgX2NvbnN0YW50cyA9IHJlcXVpcmUoIi4uLy4uL2NvbnN0YW50cyIpOwoKdmFyIF9sb2FkX2NsdXN0ZXJzID0gcmVxdWlyZSgiLi9sb2FkX2NsdXN0ZXJzIik7Cgp2YXIgX3NlcnZpY2VzID0gcmVxdWlyZSgiLi4vLi4vc2VydmljZXMiKTsKCnZhciBfYWN0aW9uX3R5cGVzID0gcmVxdWlyZSgiLi4vYWN0aW9uX3R5cGVzIik7CgovKgogKiBDb3B5cmlnaHQgRWxhc3RpY3NlYXJjaCBCLlYuIGFuZC9vciBsaWNlbnNlZCB0byBFbGFzdGljc2VhcmNoIEIuVi4gdW5kZXIgb25lCiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiBMaWNlbnNlZCB1bmRlciB0aGUgRWxhc3RpYyBMaWNlbnNlOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIEVsYXN0aWMgTGljZW5zZS4KICovCnZhciBlZGl0Q2x1c3RlciA9IGZ1bmN0aW9uIGVkaXRDbHVzdGVyKGNsdXN0ZXIpIHsKICByZXR1cm4gZnVuY3Rpb24gX2NhbGxlZShkaXNwYXRjaCkgewogICAgdmFyIHN0YXR1c0NvZGUsIGRhdGEsIF9nZXRSb3V0ZXIsIGhpc3RvcnksIHNlYXJjaCwgX2V4dHJhY3RRdWVyeVBhcmFtcywgcmVkaXJlY3RVcmwsIGRlY29kZWRSZWRpcmVjdDsKCiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBkaXNwYXRjaCh7CiAgICAgICAgICAgICAgdHlwZTogX2FjdGlvbl90eXBlcy5FRElUX0NMVVNURVJfU0FWRQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKFByb21pc2UuYWxsKFsoMCwgX3NlcnZpY2VzLmVkaXRDbHVzdGVyKShjbHVzdGVyKSwgLy8gV2FpdCBhdCBsZWFzdCBoYWxmIGEgc2Vjb25kIHRvIGF2b2lkIGEgd2VpcmQgZmxpY2tlciBvZiB0aGUgc2F2aW5nIGZlZWRiYWNrLgogICAgICAgICAgICBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgICAgICAgIHJldHVybiBzZXRUaW1lb3V0KHJlc29sdmUsIDUwMCk7CiAgICAgICAgICAgIH0pXSkpOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEzOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA2OwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwoKICAgICAgICAgICAgaWYgKCFfY29udGV4dC50MCkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgc3RhdHVzQ29kZSA9IF9jb250ZXh0LnQwLnN0YXR1c0NvZGUsIGRhdGEgPSBfY29udGV4dC50MC5kYXRhOyAvLyBFeHBlY3QgYW4gZXJyb3IgaW4gdGhlIHNoYXBlIHByb3ZpZGVkIGJ5IEFuZ3VsYXIncyAkaHR0cCBzZXJ2aWNlLgoKICAgICAgICAgICAgaWYgKCFkYXRhKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBkaXNwYXRjaCh7CiAgICAgICAgICAgICAgdHlwZTogX2FjdGlvbl90eXBlcy5FRElUX0NMVVNURVJfRkFJTFVSRSwKICAgICAgICAgICAgICBwYXlsb2FkOiB7CiAgICAgICAgICAgICAgICBlcnJvcjogewogICAgICAgICAgICAgICAgICBtZXNzYWdlOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2sucmVtb3RlQ2x1c3RlcnMuZWRpdEFjdGlvbi5mYWlsZWREZWZhdWx0RXJyb3JNZXNzYWdlJywgewogICAgICAgICAgICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAnUmVxdWVzdCBmYWlsZWQgd2l0aCBhIHtzdGF0dXNDb2RlfSBlcnJvci4ge21lc3NhZ2V9JywKICAgICAgICAgICAgICAgICAgICB2YWx1ZXM6IHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c0NvZGU6IHN0YXR1c0NvZGUsCiAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBkYXRhLm1lc3NhZ2UKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBjYXVzZTogZGF0YS5jYXVzZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkpOwoKICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsICgwLCBfbm90aWZpY2F0aW9uLmZhdGFsRXJyb3IpKF9jb250ZXh0LnQwLCBfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2sucmVtb3RlQ2x1c3RlcnMuZWRpdEFjdGlvbi5lcnJvclRpdGxlJywgewogICAgICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAnRXJyb3IgZWRpdGluZyBjbHVzdGVyJwogICAgICAgICAgICB9KSkpOwoKICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgIGRpc3BhdGNoKHsKICAgICAgICAgICAgICB0eXBlOiBfYWN0aW9uX3R5cGVzLkVESVRfQ0xVU1RFUl9TVUNDRVNTCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBfZ2V0Um91dGVyID0gKDAsIF9zZXJ2aWNlcy5nZXRSb3V0ZXIpKCksIGhpc3RvcnkgPSBfZ2V0Um91dGVyLmhpc3RvcnksIHNlYXJjaCA9IF9nZXRSb3V0ZXIucm91dGUubG9jYXRpb24uc2VhcmNoOwogICAgICAgICAgICBfZXh0cmFjdFF1ZXJ5UGFyYW1zID0gKDAsIF9zZXJ2aWNlcy5leHRyYWN0UXVlcnlQYXJhbXMpKHNlYXJjaCksIHJlZGlyZWN0VXJsID0gX2V4dHJhY3RRdWVyeVBhcmFtcy5yZWRpcmVjdDsKCiAgICAgICAgICAgIGlmIChyZWRpcmVjdFVybCkgewogICAgICAgICAgICAgIC8vIEEgdG9hc3QgaXMgb25seSBuZWVkZWQgaWYgd2UncmUgbGVhdmluZyB0aGUgYXBwLgogICAgICAgICAgICAgIF9ub3RpZmljYXRpb24udG9hc3RzLmFkZFN1Y2Nlc3MoX2kxOG4uaTE4bi50cmFuc2xhdGUoJ3hwYWNrLnJlbW90ZUNsdXN0ZXJzLmVkaXRBY3Rpb24uc3VjY2Vzc1RpdGxlJywgewogICAgICAgICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJFZGl0ZWQgcmVtb3RlIGNsdXN0ZXIgJ3tuYW1lfSciLAogICAgICAgICAgICAgICAgdmFsdWVzOiB7CiAgICAgICAgICAgICAgICAgIG5hbWU6IGNsdXN0ZXIubmFtZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgZGVjb2RlZFJlZGlyZWN0ID0gZGVjb2RlVVJJQ29tcG9uZW50KHJlZGlyZWN0VXJsKTsKICAgICAgICAgICAgICAoMCwgX3NlcnZpY2VzLnJlZGlyZWN0KSgiIi5jb25jYXQoZGVjb2RlZFJlZGlyZWN0LCAiP2NsdXN0ZXI9IikuY29uY2F0KGNsdXN0ZXIubmFtZSkpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vIFRoaXMgd2lsbCBvcGVuIHRoZSBlZGl0ZWQgY2x1c3RlciBpbiB0aGUgZGV0YWlsIHBhbmVsLiBOb3RlIHRoYXQgd2UncmUgKm5vdCogc2hvd2luZyBhIHN1Y2Nlc3MgdG9hc3QKICAgICAgICAgICAgICAvLyBoZXJlLCBiZWNhdXNlIGl0IHdvdWxkIHBhcnRpYWxseSBvYnNjdXJlIHRoZSBkZXRhaWwgcGFuZWwuCiAgICAgICAgICAgICAgaGlzdG9yeS5wdXNoKHsKICAgICAgICAgICAgICAgIHBhdGhuYW1lOiAiIi5jb25jYXQoX2NvbnN0YW50cy5DUlVEX0FQUF9CQVNFX1BBVEgsICIvbGlzdCIpLAogICAgICAgICAgICAgICAgc2VhcmNoOiAiP2NsdXN0ZXI9Ii5jb25jYXQoY2x1c3Rlci5uYW1lKQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CgogICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBudWxsLCBudWxsLCBbWzEsIDZdXSk7CiAgfTsKfTsKCmV4cG9ydHMuZWRpdENsdXN0ZXIgPSBlZGl0Q2x1c3RlcjsKCnZhciBzdGFydEVkaXRpbmdDbHVzdGVyID0gZnVuY3Rpb24gc3RhcnRFZGl0aW5nQ2x1c3RlcihfcmVmKSB7CiAgdmFyIGNsdXN0ZXJOYW1lID0gX3JlZi5jbHVzdGVyTmFtZTsKICByZXR1cm4gZnVuY3Rpb24gKGRpc3BhdGNoKSB7CiAgICBkaXNwYXRjaCgoMCwgX2xvYWRfY2x1c3RlcnMubG9hZENsdXN0ZXJzKSgpKTsKICAgIGRpc3BhdGNoKHsKICAgICAgdHlwZTogX2FjdGlvbl90eXBlcy5FRElUX0NMVVNURVJfU1RBUlQsCiAgICAgIHBheWxvYWQ6IHsKICAgICAgICBjbHVzdGVyTmFtZTogY2x1c3Rlck5hbWUKICAgICAgfQogICAgfSk7CiAgfTsKfTsKCmV4cG9ydHMuc3RhcnRFZGl0aW5nQ2x1c3RlciA9IHN0YXJ0RWRpdGluZ0NsdXN0ZXI7Cgp2YXIgc3RvcEVkaXRpbmdDbHVzdGVyID0gZnVuY3Rpb24gc3RvcEVkaXRpbmdDbHVzdGVyKCkgewogIHJldHVybiBmdW5jdGlvbiAoZGlzcGF0Y2gpIHsKICAgIC8vIExvYWQgdGhlIGNsdXN0ZXJzIHRvIHJlZnJlc2ggdGhlIG9uZSB3ZSBqdXN0IGVkaXRlZC4KICAgIGRpc3BhdGNoKCgwLCBfbG9hZF9jbHVzdGVycy5sb2FkQ2x1c3RlcnMpKCkpOwogICAgZGlzcGF0Y2goewogICAgICB0eXBlOiBfYWN0aW9uX3R5cGVzLkVESVRfQ0xVU1RFUl9TVE9QCiAgICB9KTsKICB9Owp9OwoKZXhwb3J0cy5zdG9wRWRpdGluZ0NsdXN0ZXIgPSBzdG9wRWRpdGluZ0NsdXN0ZXI7Cgp2YXIgY2xlYXJFZGl0Q2x1c3RlckVycm9ycyA9IGZ1bmN0aW9uIGNsZWFyRWRpdENsdXN0ZXJFcnJvcnMoKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChkaXNwYXRjaCkgewogICAgZGlzcGF0Y2goewogICAgICB0eXBlOiBfYWN0aW9uX3R5cGVzLkNMRUFSX0VESVRfQ0xVU1RFUl9FUlJPUlMKICAgIH0pOwogIH07Cn07CgpleHBvcnRzLmNsZWFyRWRpdENsdXN0ZXJFcnJvcnMgPSBjbGVhckVkaXRDbHVzdGVyRXJyb3JzOw=="},null]}