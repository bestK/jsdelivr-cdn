{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/ui/public/chrome/api/nav.js","dependencies":[{"path":"src/legacy/ui/public/chrome/api/nav.js","mtime":1585205040991},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmluaXRDaHJvbWVOYXZBcGkgPSBpbml0Q2hyb21lTmF2QXBpOwoKdmFyIF9hYnNvbHV0ZV90b19wYXJzZWRfdXJsID0gcmVxdWlyZSgiLi4vLi4vdXJsL2Fic29sdXRlX3RvX3BhcnNlZF91cmwiKTsKCnZhciBfbmV3X3BsYXRmb3JtID0gcmVxdWlyZSgiLi4vLi4vbmV3X3BsYXRmb3JtIik7Cgp2YXIgX3JlbGF0aXZlX3RvX2Fic29sdXRlID0gcmVxdWlyZSgiLi4vLi4vdXJsL3JlbGF0aXZlX3RvX2Fic29sdXRlIik7Ci8qCiAqIExpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUgb3IgbW9yZSBjb250cmlidXRvcgogKiBsaWNlbnNlIGFncmVlbWVudHMuIFNlZSB0aGUgTk9USUNFIGZpbGUgZGlzdHJpYnV0ZWQgd2l0aAogKiB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodAogKiBvd25lcnNoaXAuIEVsYXN0aWNzZWFyY2ggQi5WLiBsaWNlbnNlcyB0aGlzIGZpbGUgdG8geW91IHVuZGVyCiAqIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOyB5b3UgbWF5CiAqIG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKICoKICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAogKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgogKiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkKICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKICogdW5kZXIgdGhlIExpY2Vuc2UuCiAqLwoKCmZ1bmN0aW9uIGluaXRDaHJvbWVOYXZBcGkoY2hyb21lLCBpbnRlcm5hbHMpIHsKICB2YXIgY29yZU5hdkxpbmtzID0gX25ld19wbGF0Zm9ybS5ucFN0YXJ0LmNvcmUuY2hyb21lLm5hdkxpbmtzOwogIC8qKgogICAqIENsZWFyIGxhc3QgdXJsIGZvciBkZWxldGVkIHNhdmVkIG9iamVjdHMgdG8gYXZvaWQgbG9hZGluZyBwYWdlcyB3aXRoICJDb3VsZCBub3QgbG9jYXRlLi4uIgogICAqLwoKICBjaHJvbWUudW50cmFja05hdkxpbmtzRm9yRGVsZXRlZFNhdmVkT2JqZWN0cyA9IGZ1bmN0aW9uIChkZWxldGVkSWRzKSB7CiAgICBmdW5jdGlvbiB1cmxDb250YWluc0RlbGV0ZWRJZCh1cmwpIHsKICAgICAgdmFyIGluY2x1ZGVkSWQgPSBkZWxldGVkSWRzLmZpbmQoZnVuY3Rpb24gKGRlbGV0ZWRJZCkgewogICAgICAgIHJldHVybiB1cmwuaW5jbHVkZXMoZGVsZXRlZElkKTsKICAgICAgfSk7CiAgICAgIHJldHVybiBpbmNsdWRlZElkICE9PSB1bmRlZmluZWQ7CiAgICB9CgogICAgY29yZU5hdkxpbmtzLmdldEFsbCgpLmZvckVhY2goZnVuY3Rpb24gKGxpbmspIHsKICAgICAgaWYgKGxpbmsubGlua1RvTGFzdFN1YlVybCAmJiB1cmxDb250YWluc0RlbGV0ZWRJZChsaW5rLnVybCkpIHsKICAgICAgICBzZXRMYXN0VXJsKGxpbmssIGxpbmsuYmFzZVVybCk7CiAgICAgIH0KICAgIH0pOwogIH07CiAgLyoqCiAgICogTWFudWFsbHkgc2V0cyB0aGUgbGFzdCB1cmwgZm9yIHRoZSBnaXZlbiBhcHAuIFRoZSBsYXN0IHVybCBmb3IgYSBnaXZlbiBhcHAgaXMgdXBkYXRlZCBhdXRvbWF0aWNhbGx5IGR1cmluZwogICAqIG5vcm1hbCBwYWdlIG5hdmlnYXRpb24sIHNvIHRoaXMgc2hvdWxkIG9ubHkgbmVlZCB0byBiZSBjYWxsZWQgdG8gaW5zZXJ0IGEgbGFzdCB1cmwgdGhhdCB3YXMgbm90IGFjdHVhbGx5CiAgICogbmF2aWdhdGVkIHRvLiBGb3IgaW5zdGFuY2UsIHdoZW4gc2F2aW5nIGFuIG9iamVjdCBhbmQgcmVkaXJlY3RpbmcgdG8gYW5vdGhlciBwYWdlLCB0aGUgbGFzdCB1cmwgb2YgdGhlIGFwcAogICAqIHNob3VsZCBiZSB0aGUgc2F2ZWQgaW5zdGFuY2UsIGJ1dCBiZWNhdXNlIG9mIHRoZSByZWRpcmVjdCB0byBhIGRpZmZlcmVudCBwYWdlIChlLmcuIGBTYXZlIGFuZCBBZGQgdG8gRGFzaGJvYXJkYAogICAqIG9uIHZpc3VhbGl6ZSB0YWIpLCBpdCB3b24ndCBiZSB0cmFja2VkIGF1dG9tYXRpY2FsbHkgYW5kIHdpbGwgbmVlZCB0byBiZSBpbnNlcnRlZCBtYW51YWxseS4gU2VlCiAgICogaHR0cHM6Ly9naXRodWIuY29tL2VsYXN0aWMva2liYW5hL3B1bGwvMTE5MzIgZm9yIG1vcmUgYmFja2dyb3VuZCBvbiB3aHkgdGhpcyB3YXMgYWRkZWQuCiAgICoKICAgKiBAcGFyYW0gaWQge1N0cmluZ30gLSBhbiBpZCB0aGF0IHJlcHJlc2VudHMgdGhlIG5hdmlnYXRpb24gbGluay4KICAgKiBAcGFyYW0ga2liYW5hUGFyc2VkVXJsIHtLaWJhbmFQYXJzZWRVcmx9IHRoZSB1cmwgdG8gdHJhY2sKICAgKi8KCgogIGNocm9tZS50cmFja1N1YlVybEZvckFwcCA9IGZ1bmN0aW9uIChpZCwga2liYW5hUGFyc2VkVXJsKSB7CiAgICB2YXIgbmF2TGluayA9IGNvcmVOYXZMaW5rcy5nZXQoaWQpOwoKICAgIGlmIChuYXZMaW5rKSB7CiAgICAgIHNldExhc3RVcmwobmF2TGluaywga2liYW5hUGFyc2VkVXJsLmdldEFic29sdXRlVXJsKCkpOwogICAgfQogIH07CgogIGludGVybmFscy50cmFja1Bvc3NpYmxlU3ViVXJsID0gZnVuY3Rpb24gX2NhbGxlZSh1cmwpIHsKICAgIHZhciBraWJhbmFQYXJzZWRVcmw7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBraWJhbmFQYXJzZWRVcmwgPSAoMCwgX2Fic29sdXRlX3RvX3BhcnNlZF91cmwuYWJzb2x1dGVUb1BhcnNlZFVybCkodXJsLCBjaHJvbWUuZ2V0QmFzZVBhdGgoKSk7CiAgICAgICAgICAgIGNvcmVOYXZMaW5rcy5nZXRBbGwoKSAvLyBGaWx0ZXIgb25seSBsZWdhY3kgbGlua3MKICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAobGluaykgewogICAgICAgICAgICAgIHJldHVybiBsaW5rLmxlZ2FjeTsKICAgICAgICAgICAgfSkuZm9yRWFjaChmdW5jdGlvbiAobGluaykgewogICAgICAgICAgICAgIHZhciBhY3RpdmUgPSB1cmwuc3RhcnRzV2l0aChsaW5rLnN1YlVybEJhc2UpOwogICAgICAgICAgICAgIGxpbmsgPSBjb3JlTmF2TGlua3MudXBkYXRlKGxpbmsuaWQsIHsKICAgICAgICAgICAgICAgIGFjdGl2ZTogYWN0aXZlCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGlmIChhY3RpdmUpIHsKICAgICAgICAgICAgICAgIHNldExhc3RVcmwobGluaywgdXJsKTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGxpbmsgPSByZWZyZXNoTGFzdFVybChsaW5rKTsKICAgICAgICAgICAgICB2YXIgbmV3R2xvYmFsU3RhdGUgPSBraWJhbmFQYXJzZWRVcmwuZ2V0R2xvYmFsU3RhdGUoKTsKCiAgICAgICAgICAgICAgaWYgKG5ld0dsb2JhbFN0YXRlKSB7CiAgICAgICAgICAgICAgICBpbmplY3ROZXdHbG9iYWxTdGF0ZShsaW5rLCBraWJhbmFQYXJzZWRVcmwuYXBwSWQsIG5ld0dsb2JhbFN0YXRlKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9KTsKICB9OwoKICBmdW5jdGlvbiBsYXN0U3ViVXJsS2V5KGxpbmspIHsKICAgIHJldHVybiAibGFzdFN1YlVybDoiLmNvbmNhdChsaW5rLmJhc2VVcmwpOwogIH0KCiAgZnVuY3Rpb24gZ2V0TGFzdFVybChsaW5rKSB7CiAgICByZXR1cm4gaW50ZXJuYWxzLmFwcFVybFN0b3JlLmdldEl0ZW0obGFzdFN1YlVybEtleShsaW5rKSk7CiAgfQoKICBmdW5jdGlvbiBzZXRMYXN0VXJsKGxpbmssIHVybCkgewogICAgaWYgKGxpbmsubGlua1RvTGFzdFN1YlVybCA9PT0gZmFsc2UpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIGludGVybmFscy5hcHBVcmxTdG9yZS5zZXRJdGVtKGxhc3RTdWJVcmxLZXkobGluayksIHVybCk7CiAgICByZWZyZXNoTGFzdFVybChsaW5rKTsKICB9CgogIGZ1bmN0aW9uIHJlZnJlc2hMYXN0VXJsKGxpbmspIHsKICAgIHZhciBsYXN0U3ViVXJsID0gZ2V0TGFzdFVybChsaW5rKTsKICAgIHJldHVybiBjb3JlTmF2TGlua3MudXBkYXRlKGxpbmsuaWQsIHsKICAgICAgdXJsOiBsYXN0U3ViVXJsIHx8IGxpbmsudXJsIHx8IGxpbmsuYmFzZVVybAogICAgfSk7CiAgfQoKICBmdW5jdGlvbiBpbmplY3ROZXdHbG9iYWxTdGF0ZShsaW5rLCBmcm9tQXBwSWQsIG5ld0dsb2JhbFN0YXRlKSB7CiAgICB2YXIga2liYW5hUGFyc2VkVXJsID0gKDAsIF9hYnNvbHV0ZV90b19wYXJzZWRfdXJsLmFic29sdXRlVG9QYXJzZWRVcmwpKGdldExhc3RVcmwobGluaykgfHwgbGluay51cmwgfHwgbGluay5iYXNlVXJsLCBjaHJvbWUuZ2V0QmFzZVBhdGgoKSk7IC8vIGRvbid0IGNvcHkgZ2xvYmFsIHN0YXRlIGlmIGxpbmtzIGFyZSBmb3IgZGlmZmVyZW50IGFwcHMKCiAgICBpZiAoZnJvbUFwcElkICE9PSBraWJhbmFQYXJzZWRVcmwuYXBwSWQpIHJldHVybjsKICAgIGtpYmFuYVBhcnNlZFVybC5zZXRHbG9iYWxTdGF0ZShuZXdHbG9iYWxTdGF0ZSk7CiAgICBjb3JlTmF2TGlua3MudXBkYXRlKGxpbmsuaWQsIHsKICAgICAgdXJsOiBraWJhbmFQYXJzZWRVcmwuZ2V0QWJzb2x1dGVVcmwoKQogICAgfSk7CiAgfSAvLyBzaW11bGF0ZSBhIHBvc3NpYmxlIGNoYW5nZSBpbiB1cmwgdG8gaW5pdGlhbGl6ZSB0aGUKICAvLyBsaW5rLmFjdGl2ZSBhbmQgbGluay5sYXN0VXJsIHByb3BlcnRpZXMKCgogIGNvcmVOYXZMaW5rcy5nZXRBbGwoKS5maWx0ZXIoZnVuY3Rpb24gKGxpbmspIHsKICAgIHJldHVybiBsaW5rLnN1YlVybEJhc2U7CiAgfSkuZm9yRWFjaChmdW5jdGlvbiAobGluaykgewogICAgY29yZU5hdkxpbmtzLnVwZGF0ZShsaW5rLmlkLCB7CiAgICAgIHN1YlVybEJhc2U6ICgwLCBfcmVsYXRpdmVfdG9fYWJzb2x1dGUucmVsYXRpdmVUb0Fic29sdXRlKShjaHJvbWUuYWRkQmFzZVBhdGgobGluay5zdWJVcmxCYXNlKSkKICAgIH0pOwogIH0pOwogIGludGVybmFscy50cmFja1Bvc3NpYmxlU3ViVXJsKGRvY3VtZW50LmxvY2F0aW9uLmhyZWYpOwp9"},null]}