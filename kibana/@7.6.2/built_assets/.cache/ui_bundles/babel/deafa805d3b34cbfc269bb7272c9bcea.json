{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/siem/public/components/embeddables/embedded_map_helpers.js","dependencies":[{"path":"x-pack/legacy/plugins/siem/public/components/embeddables/embedded_map_helpers.js","mtime":1585205047420},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmZpbmRNYXRjaGluZ0luZGV4UGF0dGVybnMgPSBleHBvcnRzLmNyZWF0ZUVtYmVkZGFibGUgPSB2b2lkIDA7Cgp2YXIgX3V1aWQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInV1aWQiKSk7Cgp2YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfcmVhY3RSZXZlcnNlUG9ydGFsID0gcmVxdWlyZSgicmVhY3QtcmV2ZXJzZS1wb3J0YWwiKTsKCnZhciBfbWluaW1hdGNoID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJtaW5pbWF0Y2giKSk7Cgp2YXIgX3B1YmxpYyA9IHJlcXVpcmUoIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9sZWdhY3kvY29yZV9wbHVnaW5zL2VtYmVkZGFibGVfYXBpL3B1YmxpYy9ucF9yZWFkeS9wdWJsaWMiKTsKCnZhciBfbWFwX2NvbmZpZyA9IHJlcXVpcmUoIi4vbWFwX2NvbmZpZyIpOwoKdmFyIF9jb25zdGFudHMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi9tYXBzL2NvbW1vbi9jb25zdGFudHMiKTsKCnZhciBpMThuID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgiLi90cmFuc2xhdGlvbnMiKSk7CgpmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsKICBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7CiAgICByZXR1cm4gb2JqOwogIH0gZWxzZSB7CiAgICB2YXIgbmV3T2JqID0ge307CgogICAgaWYgKG9iaiAhPSBudWxsKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICAgICAgdmFyIGRlc2MgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDoge307CgogICAgICAgICAgaWYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSB7CiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIG5ld09iai5kZWZhdWx0ID0gb2JqOwogICAgcmV0dXJuIG5ld09iajsKICB9Cn0KCmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7CiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsKICAgIGRlZmF1bHQ6IG9iagogIH07Cn0KCmZ1bmN0aW9uIF9leHRlbmRzKCkgewogIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7CiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgewogICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOwoKICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgewogICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7CiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOwogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIHJldHVybiB0YXJnZXQ7CiAgfTsKCiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KLyoqCiAqIENyZWF0ZXMgTWFwRW1iZWRkYWJsZSB3aXRoIHByb3ZpZGVkIGluaXRpYWwgY29uZmlndXJhdGlvbgogKgogKiBAcGFyYW0gZmlsdGVycyBhbnkgZXhpc3RpbmcgZ2xvYmFsIGZpbHRlcnMKICogQHBhcmFtIGluZGV4UGF0dGVybnMgbGlzdCBvZiBpbmRleCBwYXR0ZXJucyB0byBjb25maWd1cmUgbGF5ZXJzIGZvcgogKiBAcGFyYW0gcXVlcnkgaW5pdGlhbCBxdWVyeSBjb25zdHJhaW50cyBhcyBRdWVyeQogKiBAcGFyYW0gc3RhcnREYXRlCiAqIEBwYXJhbSBlbmREYXRlCiAqIEBwYXJhbSBzZXRRdWVyeSBmdW5jdGlvbiBhcyBwcm92aWRlZCBieSB0aGUgR2xvYmFsVGltZSBjb21wb25lbnQgZm9yIHJlYWN0aW5nIHRvIHJlZnJlc2gKICogQHBhcmFtIHBvcnRhbE5vZGUgd3JhcHBlciBmb3IgTWFwVG9vbFRpcCBzbyBpdCBpcyBub3QgcmVuZGVyZWQgaW4gdGhlIGVtYmVkZGFibGVzIGNvbXBvbmVudCB0cmVlCiAqIEBwYXJhbSBlbWJlZGRhYmxlQXBpCiAqCiAqIEB0aHJvd3MgRXJyb3IgaWYgRW1iZWRkYWJsZUZhY3RvcnkgZG9lcyBub3QgZXhpc3QKICovCgoKdmFyIGNyZWF0ZUVtYmVkZGFibGUgPSBmdW5jdGlvbiBjcmVhdGVFbWJlZGRhYmxlKGZpbHRlcnMsIGluZGV4UGF0dGVybnMsIHF1ZXJ5LCBzdGFydERhdGUsIGVuZERhdGUsIHNldFF1ZXJ5LCBwb3J0YWxOb2RlLCBlbWJlZGRhYmxlQXBpKSB7CiAgdmFyIGZhY3RvcnksIHN0YXRlLCBpbnB1dCwgcmVuZGVyVG9vbHRpcENvbnRlbnQsIGVtYmVkZGFibGVPYmplY3Q7CiAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBjcmVhdGVFbWJlZGRhYmxlJChfY29udGV4dCkgewogICAgd2hpbGUgKDEpIHsKICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIGZhY3RvcnkgPSBlbWJlZGRhYmxlQXBpLmdldEVtYmVkZGFibGVGYWN0b3J5KF9jb25zdGFudHMuTUFQX1NBVkVEX09CSkVDVF9UWVBFKTsKICAgICAgICAgIHN0YXRlID0gewogICAgICAgICAgICBsYXllckxpc3Q6ICgwLCBfbWFwX2NvbmZpZy5nZXRMYXllckxpc3QpKGluZGV4UGF0dGVybnMpLAogICAgICAgICAgICB0aXRsZTogaTE4bi5NQVBfVElUTEUKICAgICAgICAgIH07CiAgICAgICAgICBpbnB1dCA9IHsKICAgICAgICAgICAgaWQ6IF91dWlkLmRlZmF1bHQudjQoKSwKICAgICAgICAgICAgZmlsdGVyczogZmlsdGVycywKICAgICAgICAgICAgaGlkZVBhbmVsVGl0bGVzOiB0cnVlLAogICAgICAgICAgICBxdWVyeTogcXVlcnksCiAgICAgICAgICAgIHJlZnJlc2hDb25maWc6IHsKICAgICAgICAgICAgICB2YWx1ZTogMCwKICAgICAgICAgICAgICBwYXVzZTogdHJ1ZQogICAgICAgICAgICB9LAogICAgICAgICAgICB0aW1lUmFuZ2U6IHsKICAgICAgICAgICAgICBmcm9tOiBuZXcgRGF0ZShzdGFydERhdGUpLnRvSVNPU3RyaW5nKCksCiAgICAgICAgICAgICAgdG86IG5ldyBEYXRlKGVuZERhdGUpLnRvSVNPU3RyaW5nKCkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgdmlld01vZGU6IF9wdWJsaWMuVmlld01vZGUuVklFVywKICAgICAgICAgICAgaXNMYXllclRPQ09wZW46IGZhbHNlLAogICAgICAgICAgICBvcGVuVE9DRGV0YWlsczogW10sCiAgICAgICAgICAgIGhpZGVGaWx0ZXJBY3Rpb25zOiBmYWxzZSwKICAgICAgICAgICAgbWFwQ2VudGVyOiB7CiAgICAgICAgICAgICAgbG9uOiAtMS4wNTQ2OSwKICAgICAgICAgICAgICBsYXQ6IDE1Ljk2MTMzLAogICAgICAgICAgICAgIHpvb206IDEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGlzYWJsZWRBY3Rpb25zOiBbJ0NVU1RPTV9USU1FX1JBTkdFJywgJ0NVU1RPTV9USU1FX1JBTkdFX0JBREdFJ10KICAgICAgICAgIH07CgogICAgICAgICAgcmVuZGVyVG9vbHRpcENvbnRlbnQgPSBmdW5jdGlvbiByZW5kZXJUb29sdGlwQ29udGVudChfcmVmKSB7CiAgICAgICAgICAgIHZhciBhZGRGaWx0ZXJzID0gX3JlZi5hZGRGaWx0ZXJzLAogICAgICAgICAgICAgICAgY2xvc2VUb29sdGlwID0gX3JlZi5jbG9zZVRvb2x0aXAsCiAgICAgICAgICAgICAgICBmZWF0dXJlcyA9IF9yZWYuZmVhdHVyZXMsCiAgICAgICAgICAgICAgICBpc0xvY2tlZCA9IF9yZWYuaXNMb2NrZWQsCiAgICAgICAgICAgICAgICBnZXRMYXllck5hbWUgPSBfcmVmLmdldExheWVyTmFtZSwKICAgICAgICAgICAgICAgIGxvYWRGZWF0dXJlUHJvcGVydGllcyA9IF9yZWYubG9hZEZlYXR1cmVQcm9wZXJ0aWVzLAogICAgICAgICAgICAgICAgbG9hZEZlYXR1cmVHZW9tZXRyeSA9IF9yZWYubG9hZEZlYXR1cmVHZW9tZXRyeTsKICAgICAgICAgICAgdmFyIHByb3BzID0gewogICAgICAgICAgICAgIGFkZEZpbHRlcnM6IGFkZEZpbHRlcnMsCiAgICAgICAgICAgICAgY2xvc2VUb29sdGlwOiBjbG9zZVRvb2x0aXAsCiAgICAgICAgICAgICAgZmVhdHVyZXM6IGZlYXR1cmVzLAogICAgICAgICAgICAgIGlzTG9ja2VkOiBpc0xvY2tlZCwKICAgICAgICAgICAgICBnZXRMYXllck5hbWU6IGdldExheWVyTmFtZSwKICAgICAgICAgICAgICBsb2FkRmVhdHVyZVByb3BlcnRpZXM6IGxvYWRGZWF0dXJlUHJvcGVydGllcywKICAgICAgICAgICAgICBsb2FkRmVhdHVyZUdlb21ldHJ5OiBsb2FkRmVhdHVyZUdlb21ldHJ5CiAgICAgICAgICAgIH07CiAgICAgICAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdFJldmVyc2VQb3J0YWwuT3V0UG9ydGFsLCBfZXh0ZW5kcyh7CiAgICAgICAgICAgICAgbm9kZTogcG9ydGFsTm9kZQogICAgICAgICAgICB9LCBwcm9wcykpOwogICAgICAgICAgfTsgLy8gQHRzLWlnbm9yZSBtZXRob2QgYWRkZWQgaW4gaHR0cHM6Ly9naXRodWIuY29tL2VsYXN0aWMva2liYW5hL3B1bGwvNDM4NzgKCgogICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKGZhY3RvcnkuY3JlYXRlRnJvbVN0YXRlKHN0YXRlLCBpbnB1dCwgdW5kZWZpbmVkLCByZW5kZXJUb29sdGlwQ29udGVudCkpOwoKICAgICAgICBjYXNlIDY6CiAgICAgICAgICBlbWJlZGRhYmxlT2JqZWN0ID0gX2NvbnRleHQuc2VudDsgLy8gV2lyZSB1cCB0byBhcHAgcmVmcmVzaCBhY3Rpb24KCiAgICAgICAgICBzZXRRdWVyeSh7CiAgICAgICAgICAgIGlkOiAnZW1iZWRkZWRNYXAnLAogICAgICAgICAgICAvLyBTY29wZSB0byBwYWdlIHR5cGUgaWYgdXNpbmcgbWFwIGVsc2V3aGVyZQogICAgICAgICAgICBpbnNwZWN0OiBudWxsLAogICAgICAgICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgICAgICAgcmVmZXRjaDogZnVuY3Rpb24gcmVmZXRjaCgpIHsKICAgICAgICAgICAgICByZXR1cm4gZW1iZWRkYWJsZU9iamVjdC5yZWxvYWQoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBlbWJlZGRhYmxlT2JqZWN0KTsKCiAgICAgICAgY2FzZSA5OgogICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICB9CiAgICB9CiAgfSk7Cn07Ci8qKgogKiBSZXR1cm5zIGtpYmFuYUluZGV4UGF0dGVybnMgdGhhdCB3aWxkY2FyZCBtYXRjaCBhdCBsZWFzdCBvbmUgb2Ygc2llbURlZmF1bHRJbmRpY2VzCiAqCiAqIEBwYXJhbSBraWJhbmFJbmRleFBhdHRlcm5zCiAqIEBwYXJhbSBzaWVtRGVmYXVsdEluZGljZXMKICovCgoKZXhwb3J0cy5jcmVhdGVFbWJlZGRhYmxlID0gY3JlYXRlRW1iZWRkYWJsZTsKCnZhciBmaW5kTWF0Y2hpbmdJbmRleFBhdHRlcm5zID0gZnVuY3Rpb24gZmluZE1hdGNoaW5nSW5kZXhQYXR0ZXJucyhfcmVmMikgewogIHZhciBraWJhbmFJbmRleFBhdHRlcm5zID0gX3JlZjIua2liYW5hSW5kZXhQYXR0ZXJucywKICAgICAgc2llbURlZmF1bHRJbmRpY2VzID0gX3JlZjIuc2llbURlZmF1bHRJbmRpY2VzOwoKICB0cnkgewogICAgcmV0dXJuIGtpYmFuYUluZGV4UGF0dGVybnMuZmlsdGVyKGZ1bmN0aW9uIChraXApIHsKICAgICAgcmV0dXJuIHNpZW1EZWZhdWx0SW5kaWNlcy5zb21lKGZ1bmN0aW9uIChzZGkpIHsKICAgICAgICByZXR1cm4gKDAsIF9taW5pbWF0Y2guZGVmYXVsdCkoc2RpLCBraXAuYXR0cmlidXRlcy50aXRsZSk7CiAgICAgIH0pOwogICAgfSk7CiAgfSBjYXRjaCAoX3VudXNlZCkgewogICAgcmV0dXJuIFtdOwogIH0KfTsKCmV4cG9ydHMuZmluZE1hdGNoaW5nSW5kZXhQYXR0ZXJucyA9IGZpbmRNYXRjaGluZ0luZGV4UGF0dGVybnM7"},null]}