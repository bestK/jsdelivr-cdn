{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/watcher/public/np_ready/application/app_context.js","dependencies":[{"path":"x-pack/legacy/plugins/watcher/public/np_ready/application/app_context.js","mtime":1585205048871},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLnVzZUFwcENvbnRleHQgPSBleHBvcnRzLkFwcENvbnRleHRQcm92aWRlciA9IHZvaWQgMDsKCnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJyZWFjdCIpKTsKCnZhciBfY29uc3RhbnRzID0gcmVxdWlyZSgiLi4vLi4vLi4vY29tbW9uL2NvbnN0YW50cyIpOwoKZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7CiAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgewogICAgcmV0dXJuIG9iajsKICB9IGVsc2UgewogICAgdmFyIG5ld09iaiA9IHt9OwoKICAgIGlmIChvYmogIT0gbnVsbCkgewogICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsKICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OwoKICAgICAgICAgIGlmIChkZXNjLmdldCB8fCBkZXNjLnNldCkgewogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBuZXdPYmouZGVmYXVsdCA9IG9iajsKICAgIHJldHVybiBuZXdPYmo7CiAgfQp9CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsKICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7CgogIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7CiAgICB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsKICAgIGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsKICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7CiAgICB9KTsKICAgIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsKICB9CgogIHJldHVybiBrZXlzOwp9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgewogIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsKCiAgICBpZiAoaSAlIDIpIHsKICAgICAgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICAgIF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOwogICAgICB9KTsKICAgIH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsKICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsKICAgIH0gZWxzZSB7CiAgICAgIG93bktleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsKICAgICAgfSk7CiAgICB9CiAgfQoKICByZXR1cm4gdGFyZ2V0Owp9CgpmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoc291cmNlLCBleGNsdWRlZCkgewogIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OwoKICB2YXIgdGFyZ2V0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCk7CgogIHZhciBrZXksIGk7CgogIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7CiAgICB2YXIgc291cmNlU3ltYm9sS2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlKTsKCiAgICBmb3IgKGkgPSAwOyBpIDwgc291cmNlU3ltYm9sS2V5cy5sZW5ndGg7IGkrKykgewogICAgICBrZXkgPSBzb3VyY2VTeW1ib2xLZXlzW2ldOwogICAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOwogICAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzb3VyY2UsIGtleSkpIGNvbnRpbnVlOwogICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOwogICAgfQogIH0KCiAgcmV0dXJuIHRhcmdldDsKfQoKZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkgewogIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OwogIHZhciB0YXJnZXQgPSB7fTsKICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7CiAgdmFyIGtleSwgaTsKCiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHsKICAgIGtleSA9IHNvdXJjZUtleXNbaV07CiAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOwogICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsKICB9CgogIHJldHVybiB0YXJnZXQ7Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsKICBpZiAoa2V5IGluIG9iaikgewogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7CiAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgICB3cml0YWJsZTogdHJ1ZQogICAgfSk7CiAgfSBlbHNlIHsKICAgIG9ialtrZXldID0gdmFsdWU7CiAgfQoKICByZXR1cm4gb2JqOwp9Cgp2YXIgQXBwQ29udGV4dCA9ICgwLCBfcmVhY3QuY3JlYXRlQ29udGV4dCkobnVsbCk7Cgp2YXIgZ2VuZXJhdGVEb2NMaW5rcyA9IGZ1bmN0aW9uIGdlbmVyYXRlRG9jTGlua3MoX3JlZikgewogIHZhciBfd2F0Y2hBY3Rpb25zQ29uZmlndXI7CgogIHZhciBFTEFTVElDX1dFQlNJVEVfVVJMID0gX3JlZi5FTEFTVElDX1dFQlNJVEVfVVJMLAogICAgICBET0NfTElOS19WRVJTSU9OID0gX3JlZi5ET0NfTElOS19WRVJTSU9OOwogIHZhciBlbGFzdGljRG9jTGlua0Jhc2UgPSAiIi5jb25jYXQoRUxBU1RJQ19XRUJTSVRFX1VSTCwgImd1aWRlL2VuLyIpOwogIHZhciBlc0Jhc2UgPSAiIi5jb25jYXQoZWxhc3RpY0RvY0xpbmtCYXNlLCAiZWxhc3RpY3NlYXJjaC9yZWZlcmVuY2UvIikuY29uY2F0KERPQ19MSU5LX1ZFUlNJT04pOwogIHZhciBraWJhbmFCYXNlID0gIiIuY29uY2F0KGVsYXN0aWNEb2NMaW5rQmFzZSwgImtpYmFuYS8iKS5jb25jYXQoRE9DX0xJTktfVkVSU0lPTik7CiAgdmFyIHB1dFdhdGNoQXBpVXJsID0gIiIuY29uY2F0KGVzQmFzZSwgIi93YXRjaGVyLWFwaS1wdXQtd2F0Y2guaHRtbCIpOwogIHZhciBleGVjdXRlV2F0Y2hBcGlVcmwgPSAiIi5jb25jYXQoZXNCYXNlLCAiL3dhdGNoZXItYXBpLWV4ZWN1dGUtd2F0Y2guaHRtbCN3YXRjaGVyLWFwaS1leGVjdXRlLXdhdGNoLWFjdGlvbi1tb2RlIik7CiAgdmFyIHdhdGNoZXJHZXR0aW5nU3RhcnRlZFVybCA9ICIiLmNvbmNhdChraWJhbmFCYXNlLCAiL3dhdGNoZXItdWkuaHRtbCIpOwogIHZhciB3YXRjaEFjdGlvbnNDb25maWd1cmF0aW9uTWFwID0gKF93YXRjaEFjdGlvbnNDb25maWd1ciA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX3dhdGNoQWN0aW9uc0NvbmZpZ3VyLCBfY29uc3RhbnRzLkFDVElPTl9UWVBFUy5TTEFDSywgIiIuY29uY2F0KGVzQmFzZSwgIi9hY3Rpb25zLXNsYWNrLmh0bWwjY29uZmlndXJpbmctc2xhY2siKSksIF9kZWZpbmVQcm9wZXJ0eShfd2F0Y2hBY3Rpb25zQ29uZmlndXIsIF9jb25zdGFudHMuQUNUSU9OX1RZUEVTLlBBR0VSRFVUWSwgIiIuY29uY2F0KGVzQmFzZSwgIi9hY3Rpb25zLXBhZ2VyZHV0eS5odG1sI2NvbmZpZ3VyaW5nLXBhZ2VyZHV0eSIpKSwgX2RlZmluZVByb3BlcnR5KF93YXRjaEFjdGlvbnNDb25maWd1ciwgX2NvbnN0YW50cy5BQ1RJT05fVFlQRVMuSklSQSwgIiIuY29uY2F0KGVzQmFzZSwgIi9hY3Rpb25zLWppcmEuaHRtbCNjb25maWd1cmluZy1qaXJhIikpLCBfd2F0Y2hBY3Rpb25zQ29uZmlndXIpOwogIHJldHVybiB7CiAgICBwdXRXYXRjaEFwaVVybDogcHV0V2F0Y2hBcGlVcmwsCiAgICBleGVjdXRlV2F0Y2hBcGlVcmw6IGV4ZWN1dGVXYXRjaEFwaVVybCwKICAgIHdhdGNoZXJHZXR0aW5nU3RhcnRlZFVybDogd2F0Y2hlckdldHRpbmdTdGFydGVkVXJsLAogICAgd2F0Y2hBY3Rpb25zQ29uZmlndXJhdGlvbk1hcDogd2F0Y2hBY3Rpb25zQ29uZmlndXJhdGlvbk1hcAogIH07Cn07Cgp2YXIgQXBwQ29udGV4dFByb3ZpZGVyID0gZnVuY3Rpb24gQXBwQ29udGV4dFByb3ZpZGVyKF9yZWYyKSB7CiAgdmFyIGNoaWxkcmVuID0gX3JlZjIuY2hpbGRyZW4sCiAgICAgIHZhbHVlID0gX3JlZjIudmFsdWU7CgogIHZhciBkb2NMaW5rcyA9IHZhbHVlLmRvY0xpbmtzLAogICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHZhbHVlLCBbImRvY0xpbmtzIl0pOwoKICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChBcHBDb250ZXh0LlByb3ZpZGVyLCB7CiAgICB2YWx1ZTogT2JqZWN0LmZyZWV6ZShfb2JqZWN0U3ByZWFkKHt9LCByZXN0LCB7CiAgICAgIGxpbmtzOiBnZW5lcmF0ZURvY0xpbmtzKGRvY0xpbmtzKQogICAgfSkpCiAgfSwgY2hpbGRyZW4pOwp9OwoKZXhwb3J0cy5BcHBDb250ZXh0UHJvdmlkZXIgPSBBcHBDb250ZXh0UHJvdmlkZXI7Cgp2YXIgdXNlQXBwQ29udGV4dCA9IGZ1bmN0aW9uIHVzZUFwcENvbnRleHQoKSB7CiAgdmFyIGN0eCA9ICgwLCBfcmVhY3QudXNlQ29udGV4dCkoQXBwQ29udGV4dCk7CgogIGlmICghY3R4KSB7CiAgICB0aHJvdyBuZXcgRXJyb3IoJyJ1c2VBcHBDb250ZXh0IiBjYW4gb25seSBiZSBjYWxsZWQgaW5zaWRlIG9mIEFwcENvbnRleHQuUHJvdmlkZXIhJyk7CiAgfQoKICByZXR1cm4gY3R4Owp9OwoKZXhwb3J0cy51c2VBcHBDb250ZXh0ID0gdXNlQXBwQ29udGV4dDs="},null]}