{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!src/legacy/core_plugins/timelion/public/vis/timelion_request_handler.js","dependencies":[{"path":"src/legacy/core_plugins/timelion/public/vis/timelion_request_handler.js","mtime":1585205040155},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmdldFRpbWVsaW9uUmVxdWVzdEhhbmRsZXIgPSBnZXRUaW1lbGlvblJlcXVlc3RIYW5kbGVyOwoKdmFyIF90aW1lem9uZSA9IHJlcXVpcmUoInVpL3Zpcy9saWIvdGltZXpvbmUiKTsKCnZhciBfaTE4biA9IHJlcXVpcmUoIkBrYm4vaTE4biIpOwoKdmFyIF9wdWJsaWMgPSByZXF1aXJlKCIuLi8uLi8uLi8uLi8uLi9wbHVnaW5zL2RhdGEvcHVibGljIik7Ci8qCiAqIExpY2Vuc2VkIHRvIEVsYXN0aWNzZWFyY2ggQi5WLiB1bmRlciBvbmUgb3IgbW9yZSBjb250cmlidXRvcgogKiBsaWNlbnNlIGFncmVlbWVudHMuIFNlZSB0aGUgTk9USUNFIGZpbGUgZGlzdHJpYnV0ZWQgd2l0aAogKiB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodAogKiBvd25lcnNoaXAuIEVsYXN0aWNzZWFyY2ggQi5WLiBsaWNlbnNlcyB0aGlzIGZpbGUgdG8geW91IHVuZGVyCiAqIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOyB5b3UgbWF5CiAqIG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKICoKICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLAogKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbgogKiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkKICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlCiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMKICogdW5kZXIgdGhlIExpY2Vuc2UuCiAqLwovLyBAdHMtaWdub3JlCgoKZnVuY3Rpb24gZ2V0VGltZWxpb25SZXF1ZXN0SGFuZGxlcihkZXBlbmRlbmNpZXMpIHsKICB2YXIgdWlTZXR0aW5ncyA9IGRlcGVuZGVuY2llcy51aVNldHRpbmdzLAogICAgICBodHRwID0gZGVwZW5kZW5jaWVzLmh0dHAsCiAgICAgIHRpbWVmaWx0ZXIgPSBkZXBlbmRlbmNpZXMudGltZWZpbHRlcjsKICB2YXIgdGltZXpvbmUgPSAoMCwgX3RpbWV6b25lLnRpbWV6b25lUHJvdmlkZXIpKHVpU2V0dGluZ3MpKCk7CiAgcmV0dXJuIGZ1bmN0aW9uIF9jYWxsZWUoX3JlZikgewogICAgdmFyIHRpbWVSYW5nZSwgZmlsdGVycywgcXVlcnksIHZpc1BhcmFtcywgZXhwcmVzc2lvbiwgZXNRdWVyeUNvbmZpZ3MsIHRpbWVSYW5nZUJvdW5kcywgZXJyOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgdGltZVJhbmdlID0gX3JlZi50aW1lUmFuZ2UsIGZpbHRlcnMgPSBfcmVmLmZpbHRlcnMsIHF1ZXJ5ID0gX3JlZi5xdWVyeSwgdmlzUGFyYW1zID0gX3JlZi52aXNQYXJhbXM7CiAgICAgICAgICAgIGV4cHJlc3Npb24gPSB2aXNQYXJhbXMuZXhwcmVzc2lvbjsKCiAgICAgICAgICAgIGlmIChleHByZXNzaW9uKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihfaTE4bi5pMThuLnRyYW5zbGF0ZSgndGltZWxpb24uZW1wdHlFeHByZXNzaW9uRXJyb3JNZXNzYWdlJywgewogICAgICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAnVGltZWxpb24gZXJyb3I6IE5vIGV4cHJlc3Npb24gcHJvdmlkZWQnCiAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGVzUXVlcnlDb25maWdzID0gX3B1YmxpYy5lc1F1ZXJ5LmdldEVzUXVlcnlDb25maWcodWlTZXR0aW5ncyk7IC8vIHBhcnNlIHRoZSB0aW1lIHJhbmdlIGNsaWVudCBzaWRlIHRvIG1ha2Ugc3VyZSBpdCBiZWhhdmVzIGxpa2Ugb3RoZXIgY2hhcnRzCgogICAgICAgICAgICB0aW1lUmFuZ2VCb3VuZHMgPSB0aW1lZmlsdGVyLmNhbGN1bGF0ZUJvdW5kcyh0aW1lUmFuZ2UpOwogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNjsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoaHR0cC5wb3N0KCcuLi9hcGkvdGltZWxpb24vcnVuJywgewogICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAgICAgIHNoZWV0OiBbZXhwcmVzc2lvbl0sCiAgICAgICAgICAgICAgICBleHRlbmRlZDogewogICAgICAgICAgICAgICAgICBlczogewogICAgICAgICAgICAgICAgICAgIGZpbHRlcjogX3B1YmxpYy5lc1F1ZXJ5LmJ1aWxkRXNRdWVyeSh1bmRlZmluZWQsIHF1ZXJ5LCBmaWx0ZXJzLCBlc1F1ZXJ5Q29uZmlncykKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHRpbWU6IHsKICAgICAgICAgICAgICAgICAgZnJvbTogdGltZVJhbmdlQm91bmRzLm1pbiwKICAgICAgICAgICAgICAgICAgdG86IHRpbWVSYW5nZUJvdW5kcy5tYXgsCiAgICAgICAgICAgICAgICAgIGludGVydmFsOiB2aXNQYXJhbXMuaW50ZXJ2YWwsCiAgICAgICAgICAgICAgICAgIHRpbWV6b25lOiB0aW1lem9uZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0LnNlbnQpOwoKICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMjsKICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSg2KTsKCiAgICAgICAgICAgIGlmICghKF9jb250ZXh0LnQwICYmIF9jb250ZXh0LnQwLmJvZHkpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIwOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBlcnIgPSBuZXcgRXJyb3IoIiIuY29uY2F0KF9pMThuLmkxOG4udHJhbnNsYXRlKCd0aW1lbGlvbi5yZXF1ZXN0SGFuZGxlckVycm9yVGl0bGUnLCB7CiAgICAgICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICdUaW1lbGlvbiByZXF1ZXN0IGVycm9yJwogICAgICAgICAgICB9KSwgIjogIikuY29uY2F0KF9jb250ZXh0LnQwLmJvZHkudGl0bGUsICIgIikuY29uY2F0KF9jb250ZXh0LnQwLmJvZHkubWVzc2FnZSkpOwogICAgICAgICAgICBlcnIuc3RhY2sgPSBfY29udGV4dC50MC5zdGFjazsKICAgICAgICAgICAgdGhyb3cgZXJyOwoKICAgICAgICAgIGNhc2UgMjA6CiAgICAgICAgICAgIHRocm93IF9jb250ZXh0LnQwOwoKICAgICAgICAgIGNhc2UgMjE6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgbnVsbCwgbnVsbCwgW1s2LCAxMl1dKTsKICB9Owp9"},null]}