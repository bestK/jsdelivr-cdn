{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/searchprofiler/public/np_ready/plugin.js","dependencies":[{"path":"x-pack/legacy/plugins/searchprofiler/public/np_ready/plugin.js","mtime":1585205047072},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlNlYXJjaFByb2ZpbGVyVUlQbHVnaW4gPSB2b2lkIDA7Cgp2YXIgX2kxOG4gPSByZXF1aXJlKCJAa2JuL2kxOG4iKTsKCmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsKICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgewogICAgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7CiAgfQp9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7CiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgewogICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsKICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsKICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsKICAgIGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOwogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOwogIH0KfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgewogIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOwogIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsKICByZXR1cm4gQ29uc3RydWN0b3I7Cn0KCnZhciBTZWFyY2hQcm9maWxlclVJUGx1Z2luID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gU2VhcmNoUHJvZmlsZXJVSVBsdWdpbihjdHgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTZWFyY2hQcm9maWxlclVJUGx1Z2luKTsKICB9CgogIF9jcmVhdGVDbGFzcyhTZWFyY2hQcm9maWxlclVJUGx1Z2luLCBbewogICAga2V5OiAic2V0dXAiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNldHVwKGNvcmUsIHBsdWdpbnMpIHsKICAgICAgdmFyIGh0dHAsIF9wbHVnaW5zJF9fTEVHQUNZLCBJMThuQ29udGV4dCwgbGljZW5zZUVuYWJsZWQsIG5vdGlmaWNhdGlvbnMsIGZvcm1hdEFuZ3VsYXJIdHRwRXJyb3IsIGRldl90b29sczsKCiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gc2V0dXAkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGh0dHAgPSBjb3JlLmh0dHA7CiAgICAgICAgICAgICAgX3BsdWdpbnMkX19MRUdBQ1kgPSBwbHVnaW5zLl9fTEVHQUNZLCBJMThuQ29udGV4dCA9IF9wbHVnaW5zJF9fTEVHQUNZLkkxOG5Db250ZXh0LCBsaWNlbnNlRW5hYmxlZCA9IF9wbHVnaW5zJF9fTEVHQUNZLmxpY2Vuc2VFbmFibGVkLCBub3RpZmljYXRpb25zID0gX3BsdWdpbnMkX19MRUdBQ1kubm90aWZpY2F0aW9ucywgZm9ybWF0QW5ndWxhckh0dHBFcnJvciA9IF9wbHVnaW5zJF9fTEVHQUNZLmZvcm1hdEFuZ3VsYXJIdHRwRXJyb3IsIGRldl90b29scyA9IHBsdWdpbnMuZGV2X3Rvb2xzOwogICAgICAgICAgICAgIGRldl90b29scy5yZWdpc3Rlcih7CiAgICAgICAgICAgICAgICBpZDogJ3NlYXJjaHByb2ZpbGVyJywKICAgICAgICAgICAgICAgIHRpdGxlOiBfaTE4bi5pMThuLnRyYW5zbGF0ZSgneHBhY2suc2VhcmNoUHJvZmlsZXIucGFnZURpc3BsYXlOYW1lJywgewogICAgICAgICAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogJ1NlYXJjaCBQcm9maWxlcicKICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgb3JkZXI6IDUsCiAgICAgICAgICAgICAgICBlbmFibGVSb3V0aW5nOiBmYWxzZSwKICAgICAgICAgICAgICAgIG1vdW50OiBmdW5jdGlvbiBtb3VudChjdHgsIHBhcmFtcykgewogICAgICAgICAgICAgICAgICB2YXIgX3JlZiwgYm9vdDsKCiAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gbW91bnQkKF9jb250ZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoaW1wb3J0KCcuL2FwcGxpY2F0aW9uL2Jvb3QnKSk7CgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgX3JlZiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgYm9vdCA9IF9yZWYuYm9vdDsKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBib290KHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGh0dHA6IGh0dHAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWNlbnNlRW5hYmxlZDogbGljZW5zZUVuYWJsZWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbDogcGFyYW1zLmVsZW1lbnQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBJMThuQ29udGV4dDogSTE4bkNvbnRleHQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RpZmljYXRpb25zOiBub3RpZmljYXRpb25zLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0QW5ndWxhckh0dHBFcnJvcjogZm9ybWF0QW5ndWxhckh0dHBFcnJvcgogICAgICAgICAgICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzdGFydCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc3RhcnQoY29yZSwgcGx1Z2lucykgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIHN0YXJ0JChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogInN0b3AiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHN0b3AoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gc3RvcCQoX2NvbnRleHQ0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBTZWFyY2hQcm9maWxlclVJUGx1Z2luOwp9KCk7CgpleHBvcnRzLlNlYXJjaFByb2ZpbGVyVUlQbHVnaW4gPSBTZWFyY2hQcm9maWxlclVJUGx1Z2luOw=="},null]}