{"remainingRequest":"node_modules/thread-loader/dist/cjs.js??ref--8-1!node_modules/babel-loader/lib/index.js??ref--8-2!x-pack/legacy/plugins/security/public/lib/api.js","dependencies":[{"path":"x-pack/legacy/plugins/security/public/lib/api.js","mtime":1585205047116},{"path":"node_modules/cache-loader/dist/cjs.js","mtime":1585205104179},{"path":"node_modules/thread-loader/dist/cjs.js","mtime":1585205115915},{"path":"node_modules/babel-loader/lib/index.js","mtime":1585205080825}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLlVzZXJBUElDbGllbnQgPSB2b2lkIDA7Cgp2YXIgX2tmZXRjaCA9IHJlcXVpcmUoInVpL2tmZXRjaCIpOwoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgewogIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7CiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsKICB9Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsKICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOwogICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOwogICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOwogICAgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7CiAgfQp9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7CiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7CiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOwogIHJldHVybiBDb25zdHJ1Y3RvcjsKfQoKdmFyIHVzZXJzVXJsID0gJy9pbnRlcm5hbC9zZWN1cml0eS91c2Vycyc7CnZhciByb2xlc1VybCA9ICcvYXBpL3NlY3VyaXR5L3JvbGUnOwoKdmFyIFVzZXJBUElDbGllbnQgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBVc2VyQVBJQ2xpZW50KCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFVzZXJBUElDbGllbnQpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFVzZXJBUElDbGllbnQsIFt7CiAgICBrZXk6ICJnZXRVc2VycyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VXNlcnMoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gZ2V0VXNlcnMkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoKDAsIF9rZmV0Y2gua2ZldGNoKSh7CiAgICAgICAgICAgICAgICBwYXRobmFtZTogdXNlcnNVcmwKICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQuc2VudCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImdldFVzZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFVzZXIodXNlcm5hbWUpIHsKICAgICAgdmFyIHVybDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBnZXRVc2VyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICB1cmwgPSAiIi5jb25jYXQodXNlcnNVcmwsICIvIikuY29uY2F0KGVuY29kZVVSSUNvbXBvbmVudCh1c2VybmFtZSkpOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKCgwLCBfa2ZldGNoLmtmZXRjaCkoewogICAgICAgICAgICAgICAgcGF0aG5hbWU6IHVybAogICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQyLnNlbnQpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZGVsZXRlVXNlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZGVsZXRlVXNlcih1c2VybmFtZSkgewogICAgICB2YXIgdXJsOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIGRlbGV0ZVVzZXIkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHVybCA9ICIiLmNvbmNhdCh1c2Vyc1VybCwgIi8iKS5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KHVzZXJuYW1lKSk7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoKDAsIF9rZmV0Y2gua2ZldGNoKSh7CiAgICAgICAgICAgICAgICBwYXRobmFtZTogdXJsLAogICAgICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJwogICAgICAgICAgICAgIH0sIHt9KSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzYXZlVXNlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2F2ZVVzZXIodXNlcikgewogICAgICB2YXIgdXJsOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIHNhdmVVc2VyJChfY29udGV4dDQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICB1cmwgPSAiIi5jb25jYXQodXNlcnNVcmwsICIvIikuY29uY2F0KGVuY29kZVVSSUNvbXBvbmVudCh1c2VyLnVzZXJuYW1lKSk7CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoKDAsIF9rZmV0Y2gua2ZldGNoKSh7CiAgICAgICAgICAgICAgICBwYXRobmFtZTogdXJsLAogICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkodXNlciksCiAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJwogICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImdldFJvbGVzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRSb2xlcygpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBnZXRSb2xlcyQoX2NvbnRleHQ1KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoKDAsIF9rZmV0Y2gua2ZldGNoKSh7CiAgICAgICAgICAgICAgICBwYXRobmFtZTogcm9sZXNVcmwKICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0NS5zZW50KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImdldFJvbGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFJvbGUobmFtZSkgewogICAgICB2YXIgdXJsOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIGdldFJvbGUkKF9jb250ZXh0NikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ni5wcmV2ID0gX2NvbnRleHQ2Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHVybCA9ICIiLmNvbmNhdChyb2xlc1VybCwgIi8iKS5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KG5hbWUpKTsKICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcCgoMCwgX2tmZXRjaC5rZmV0Y2gpKHsKICAgICAgICAgICAgICAgIHBhdGhuYW1lOiB1cmwKICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0Ni5zZW50KTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImNoYW5nZVBhc3N3b3JkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjaGFuZ2VQYXNzd29yZCh1c2VybmFtZSwgcGFzc3dvcmQsIGN1cnJlbnRQYXNzd29yZCkgewogICAgICB2YXIgZGF0YTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBjaGFuZ2VQYXNzd29yZCQoX2NvbnRleHQ3KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ3LnByZXYgPSBfY29udGV4dDcubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgZGF0YSA9IHsKICAgICAgICAgICAgICAgIG5ld1Bhc3N3b3JkOiBwYXNzd29yZAogICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgIGlmIChjdXJyZW50UGFzc3dvcmQpIHsKICAgICAgICAgICAgICAgIGRhdGEucGFzc3dvcmQgPSBjdXJyZW50UGFzc3dvcmQ7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dDcubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcCgoMCwgX2tmZXRjaC5rZmV0Y2gpKHsKICAgICAgICAgICAgICAgIHBhdGhuYW1lOiAiIi5jb25jYXQodXNlcnNVcmwsICIvIikuY29uY2F0KGVuY29kZVVSSUNvbXBvbmVudCh1c2VybmFtZSksICIvcGFzc3dvcmQiKSwKICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSkKICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ny5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBVc2VyQVBJQ2xpZW50Owp9KCk7CgpleHBvcnRzLlVzZXJBUElDbGllbnQgPSBVc2VyQVBJQ2xpZW50Ow=="},null]}